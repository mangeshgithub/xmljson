<?xml version='1.0' encoding='utf-8' ?>

<!-- build 10000.16.0917.1429                               -->
<workbook source-build='10.0.1 (10000.16.0917.1429)' source-platform='win' version='10.0' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <repository-location id='US_Superstore_Rev' path='/workbooks' revision='1.1' />
  <preferences>
    <preference name='datagrid.autoupdate.max.filesize' value='100000000000' />
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.registrationform.stagingWebContentSwitch' value='1' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='10.0'>
      <aliases enabled='yes' />
      <column caption='Base Salary' datatype='integer' name='[Base Salary]' param-domain-type='any' role='measure' type='quantitative' value='50000'>
        <calculation class='tableau' formula='50000' />
      </column>
      <column caption='Commission Rate' datatype='real' default-format='n#,##0.0&quot;%&quot;;-#,##0.0&quot;%&quot;' name='[Commission Rate]' param-domain-type='range' role='measure' type='quantitative' value='18.400000000000002'>
        <calculation class='tableau' formula='18.400000000000002' />
        <range granularity='0.10000000000000001' max='100.0' min='1.0' />
      </column>
      <column caption='New Quota' datatype='integer' default-format='c&quot;$&quot;#,##0,K;(&quot;$&quot;#,##0,K)' name='[New Quota]' param-domain-type='range' role='measure' type='quantitative' value='500000'>
        <calculation class='tableau' formula='500000' />
        <range granularity='25000' min='100000' />
      </column>
      <column caption='Sort by' datatype='string' name='[Parameter 1 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Names&quot;'>
        <calculation class='tableau' formula='&quot;Names&quot;' />
        <members>
          <member value='&quot;\% quota ascending&quot;' />
          <member value='&quot;\% quota descending&quot;' />
          <member value='&quot;Names&quot;' />
        </members>
      </column>
      <column caption='New Business Growth' datatype='real' default-format='p0%' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='0.59999999999999998'>
        <calculation class='tableau' formula='0.59999999999999998' />
        <range granularity='0.01' max='1.0' min='0.0' />
      </column>
      <column caption='Churn Rate' datatype='real' default-format='p0.00%' name='[Parameter 2]' param-domain-type='range' role='measure' type='quantitative' value='0.064000000000000001'>
        <calculation class='tableau' formula='0.064000000000000001' />
        <range granularity='0.001' max='0.25' min='0.0' />
      </column>
      <column caption='State' datatype='string' name='[Parameter 3]' param-domain-type='list' role='measure' type='nominal' value='&quot;Alabama&quot;'>
        <calculation class='tableau' formula='&quot;Alabama&quot;' />
        <members>
          <member value='&quot;Alabama&quot;' />
          <member value='&quot;Arizona&quot;' />
          <member value='&quot;Arkansas&quot;' />
          <member value='&quot;California&quot;' />
          <member value='&quot;Colorado&quot;' />
          <member value='&quot;Connecticut&quot;' />
          <member value='&quot;Delaware&quot;' />
          <member value='&quot;District of Columbia&quot;' />
          <member value='&quot;Florida&quot;' />
          <member value='&quot;Georgia&quot;' />
          <member value='&quot;Idaho&quot;' />
          <member value='&quot;Illinois&quot;' />
          <member value='&quot;Indiana&quot;' />
          <member value='&quot;Iowa&quot;' />
          <member value='&quot;Kansas&quot;' />
          <member value='&quot;Kentucky&quot;' />
          <member value='&quot;Louisiana&quot;' />
          <member value='&quot;Maine&quot;' />
          <member value='&quot;Maryland&quot;' />
          <member value='&quot;Massachusetts&quot;' />
          <member value='&quot;Michigan&quot;' />
          <member value='&quot;Minnesota&quot;' />
          <member value='&quot;Mississippi&quot;' />
          <member value='&quot;Missouri&quot;' />
          <member value='&quot;Montana&quot;' />
          <member value='&quot;Nebraska&quot;' />
          <member value='&quot;Nevada&quot;' />
          <member value='&quot;New Hampshire&quot;' />
          <member value='&quot;New Jersey&quot;' />
          <member value='&quot;New Mexico&quot;' />
          <member value='&quot;New York&quot;' />
          <member value='&quot;North Carolina&quot;' />
          <member value='&quot;North Dakota&quot;' />
          <member value='&quot;Ohio&quot;' />
          <member value='&quot;Oklahoma&quot;' />
          <member value='&quot;Oregon&quot;' />
          <member value='&quot;Pennsylvania&quot;' />
          <member value='&quot;Rhode Island&quot;' />
          <member value='&quot;South Carolina&quot;' />
          <member value='&quot;South Dakota&quot;' />
          <member value='&quot;Tennessee&quot;' />
          <member value='&quot;Texas&quot;' />
          <member value='&quot;Utah&quot;' />
          <member value='&quot;Vermont&quot;' />
          <member value='&quot;Virginia&quot;' />
          <member value='&quot;Washington&quot;' />
          <member value='&quot;West Virginia&quot;' />
          <member value='&quot;Wisconsin&quot;' />
          <member value='&quot;Wyoming&quot;' />
        </members>
      </column>
    </datasource>
    <datasource caption='Sales Target' inline='true' name='dataengine.42019.622799629629' version='10.0'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Sales Target' name='dataengine.42019.622799629629leaf'>
            <connection class='dataengine' dbname='D:\XML2JSON\BaseSalALLSuperstore.twb Files\Data/en_US-US/Sales Target.tde' password='' schema='Extract' tablename='Extract' workgroup-auth-mode='as-is'>
              <calculations>
                <calculation column='[Number of Records]' formula='1' />
              </calculations>
            </connection>
          </named-connection>
        </named-connections>
        <relation connection='dataengine.42019.622799629629leaf' name='Extract' table='[Extract].[Extract]' type='table' />
        <calculations>
          <calculation column='[Number of Records]' formula='1' />
        </calculations>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Category</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Category]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Category</remote-alias>
            <ordinal>0</ordinal>
            <family>Sheet1</family>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>3</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>false</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <statistics>
              <statistic aggregation='Min' datatype='string'>&quot;Furniture&quot;</statistic>
              <statistic aggregation='Max' datatype='string'>&quot;Technology&quot;</statistic>
              <statistic aggregation='Count' datatype='integer'>4603</statistic>
            </statistics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US_CI&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Number of Records</remote-name>
            <remote-type>16</remote-type>
            <local-name>[Number of Records]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Number of Records</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>1</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Sum' datatype='real'>4603.0</statistic>
              <statistic aggregation='Avg' datatype='real'>1.0</statistic>
              <statistic aggregation='Min' datatype='integer'>1</statistic>
              <statistic aggregation='Max' datatype='integer'>1</statistic>
              <statistic aggregation='Stdev' datatype='real'>0.0</statistic>
              <statistic aggregation='StdevP' datatype='real'>0.0</statistic>
              <statistic aggregation='Var' datatype='real'>0.0</statistic>
              <statistic aggregation='VarP' datatype='real'>0.0</statistic>
              <statistic aggregation='Count' datatype='integer'>4603</statistic>
              <statistic aggregation='Median' datatype='integer'>1</statistic>
              <statistic aggregation='SumXSqr' datatype='real'>4603.0</statistic>
            </statistics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order Date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[Order Date]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Order Date</remote-alias>
            <ordinal>2</ordinal>
            <family>Sheet1</family>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <approx-count>1237</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='date'>#2012-01-04#</statistic>
              <statistic aggregation='Max' datatype='date'>#2015-12-31#</statistic>
              <statistic aggregation='Count' datatype='integer'>4603</statistic>
              <statistic aggregation='Median' datatype='date'>#2014-05-03#</statistic>
            </statistics>
            <attributes>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>0</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;date&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sales Target</remote-name>
            <remote-type>2</remote-type>
            <local-name>[Sales Target]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Sales Target</remote-alias>
            <ordinal>3</ordinal>
            <family>Sheet1</family>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>1342</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Sum' datatype='real'>2240401.0</statistic>
              <statistic aggregation='Avg' datatype='real'>486.72626547903542</statistic>
              <statistic aggregation='Min' datatype='integer'>1</statistic>
              <statistic aggregation='Max' datatype='integer'>25729</statistic>
              <statistic aggregation='Stdev' datatype='real'>985.11439154410641</statistic>
              <statistic aggregation='StdevP' datatype='real'>985.00737786810294</statistic>
              <statistic aggregation='Var' datatype='real'>970450.36442731495</statistic>
              <statistic aggregation='VarP' datatype='real'>970239.53445459565</statistic>
              <statistic aggregation='Count' datatype='integer'>4603</statistic>
              <statistic aggregation='SumXSqr' datatype='real'>5556474589.0</statistic>
            </statistics>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>2</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>3</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint16&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Segment</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Segment]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Segment</remote-alias>
            <ordinal>4</ordinal>
            <family>Sheet1</family>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>3</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>false</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <statistics>
              <statistic aggregation='Min' datatype='string'>&quot;Consumer&quot;</statistic>
              <statistic aggregation='Max' datatype='string'>&quot;Home Office&quot;</statistic>
              <statistic aggregation='Count' datatype='integer'>4603</statistic>
            </statistics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US_CI&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>2</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <column datatype='integer' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Sales Target]' role='measure' type='quantitative' />
      <layout dim-ordering='alphabetic' dim-percentage='0.356061' measure-ordering='alphabetic' measure-percentage='0.333333' parameter-percentage='0.310606' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='Sample - Superstore' inline='true' name='dataengine.42019.618651678240' version='10.0'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Sample - Superstore' name='dataengine.42019.618651678240leaf'>
            <connection class='dataengine' dbname='D:\XML2JSON\BaseSalALLSuperstore.twb Files\Data/en_US-US/Sample - Superstore.tde' password='' schema='Extract' tablename='Extract' workgroup-auth-mode='as-is'>
              <calculations>
                <calculation column='[Number of Records]' formula='1' />
              </calculations>
            </connection>
          </named-connection>
        </named-connections>
        <relation connection='dataengine.42019.618651678240leaf' name='Extract' table='[Extract].[Extract]' type='table' />
        <calculations>
          <calculation column='[Number of Records]' formula='1' />
        </calculations>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Category</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Category]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Category</remote-alias>
            <ordinal>0</ordinal>
            <family>Orders</family>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>3</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>false</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <statistics>
              <statistic aggregation='Min' datatype='string'>&quot;Furniture&quot;</statistic>
              <statistic aggregation='Max' datatype='string'>&quot;Technology&quot;</statistic>
              <statistic aggregation='Count' datatype='integer'>9994</statistic>
            </statistics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US_CI&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>2</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>City</remote-name>
            <remote-type>129</remote-type>
            <local-name>[City]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>City</remote-alias>
            <ordinal>1</ordinal>
            <family>Orders</family>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>531</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>false</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <statistics>
              <statistic aggregation='Min' datatype='string'>&quot;Aberdeen&quot;</statistic>
              <statistic aggregation='Max' datatype='string'>&quot;Yuma&quot;</statistic>
              <statistic aggregation='Count' datatype='integer'>9994</statistic>
            </statistics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US_CI&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Country]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>2</ordinal>
            <family>Orders</family>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>false</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <statistics>
              <statistic aggregation='Min' datatype='string'>&quot;United States&quot;</statistic>
              <statistic aggregation='Max' datatype='string'>&quot;United States&quot;</statistic>
              <statistic aggregation='Count' datatype='integer'>9994</statistic>
              <statistic aggregation='Median' datatype='string'>&quot;United States&quot;</statistic>
            </statistics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US_CI&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Customer ID</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Customer ID]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Customer ID</remote-alias>
            <ordinal>3</ordinal>
            <family>Orders</family>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>793</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>false</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <statistics>
              <statistic aggregation='Min' datatype='string'>&quot;AA-10315&quot;</statistic>
              <statistic aggregation='Max' datatype='string'>&quot;ZD-21925&quot;</statistic>
              <statistic aggregation='Count' datatype='integer'>9994</statistic>
            </statistics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US_CI&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>10</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Customer Name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Customer Name]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Customer Name</remote-alias>
            <ordinal>4</ordinal>
            <family>Orders</family>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>793</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>false</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <statistics>
              <statistic aggregation='Min' datatype='string'>&quot;Aaron Bergman&quot;</statistic>
              <statistic aggregation='Max' datatype='string'>&quot;Zuschuss Donatelli&quot;</statistic>
              <statistic aggregation='Count' datatype='integer'>9994</statistic>
            </statistics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US_CI&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>11</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Discount</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Discount]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Discount</remote-alias>
            <ordinal>5</ordinal>
            <family>Orders</family>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>12</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='real'>0.0</statistic>
              <statistic aggregation='Max' datatype='real'>0.80000000000000004</statistic>
              <statistic aggregation='Count' datatype='integer'>9994</statistic>
            </statistics>
            <attributes>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>16</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Number of Records</remote-name>
            <remote-type>16</remote-type>
            <local-name>[Number of Records]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Number of Records</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>1</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Sum' datatype='real'>9994.0</statistic>
              <statistic aggregation='Avg' datatype='real'>1.0</statistic>
              <statistic aggregation='Min' datatype='integer'>1</statistic>
              <statistic aggregation='Max' datatype='integer'>1</statistic>
              <statistic aggregation='Stdev' datatype='real'>0.0</statistic>
              <statistic aggregation='StdevP' datatype='real'>0.0</statistic>
              <statistic aggregation='Var' datatype='real'>0.0</statistic>
              <statistic aggregation='VarP' datatype='real'>0.0</statistic>
              <statistic aggregation='Count' datatype='integer'>9994</statistic>
              <statistic aggregation='Median' datatype='integer'>1</statistic>
              <statistic aggregation='SumXSqr' datatype='real'>9994.0</statistic>
            </statistics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order Date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[Order Date]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Order Date</remote-alias>
            <ordinal>7</ordinal>
            <family>Orders</family>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <approx-count>1237</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='date'>#2012-01-04#</statistic>
              <statistic aggregation='Max' datatype='date'>#2015-12-31#</statistic>
              <statistic aggregation='Count' datatype='integer'>9994</statistic>
              <statistic aggregation='Median' datatype='date'>#2014-06-27#</statistic>
            </statistics>
            <attributes>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>0</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;date&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order ID</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Order ID]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Order ID</remote-alias>
            <ordinal>8</ordinal>
            <family>Orders</family>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>5009</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>false</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <statistics>
              <statistic aggregation='Min' datatype='string'>&quot;CA-2011-100006&quot;</statistic>
              <statistic aggregation='Max' datatype='string'>&quot;US-2014-169551&quot;</statistic>
              <statistic aggregation='Count' datatype='integer'>9994</statistic>
            </statistics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US_CI&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>14</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>4</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Postal Code</remote-name>
            <remote-type>3</remote-type>
            <local-name>[Postal Code]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Postal Code</remote-alias>
            <ordinal>9</ordinal>
            <family>Orders</family>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>631</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Sum' datatype='real'>551572652.0</statistic>
              <statistic aggregation='Avg' datatype='real'>55190.379427656597</statistic>
              <statistic aggregation='Min' datatype='integer'>1040</statistic>
              <statistic aggregation='Max' datatype='integer'>99301</statistic>
              <statistic aggregation='Stdev' datatype='real'>32063.693350364487</statistic>
              <statistic aggregation='StdevP' datatype='real'>32062.089163078908</statistic>
              <statistic aggregation='Var' datatype='real'>1028080431.2662077</statistic>
              <statistic aggregation='VarP' datatype='real'>1027977561.501222</statistic>
              <statistic aggregation='Count' datatype='integer'>9994</statistic>
              <statistic aggregation='SumXSqr' datatype='real'>40715111695442.0</statistic>
            </statistics>
            <attributes>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>9</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint32&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product ID</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Product ID]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Product ID</remote-alias>
            <ordinal>10</ordinal>
            <family>Orders</family>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1862</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>false</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <statistics>
              <statistic aggregation='Min' datatype='string'>&quot;FUR-BO-10000112&quot;</statistic>
              <statistic aggregation='Max' datatype='string'>&quot;TEC-PH-10004977&quot;</statistic>
              <statistic aggregation='Count' datatype='integer'>9994</statistic>
            </statistics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US_CI&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>13</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product Name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Product Name]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Product Name</remote-alias>
            <ordinal>11</ordinal>
            <family>Orders</family>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1850</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>false</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <statistics>
              <statistic aggregation='Min' datatype='string'>&quot;\&quot;While you Were Out\&quot; Message Book, One Form per Page&quot;</statistic>
              <statistic aggregation='Max' datatype='string'>&quot;Zipper Ring Binder Pockets&quot;</statistic>
              <statistic aggregation='Count' datatype='integer'>9994</statistic>
            </statistics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US_CI&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>12</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>4</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Profit</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Profit]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Profit</remote-alias>
            <ordinal>12</ordinal>
            <family>Orders</family>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>7545</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Sum' datatype='real'>286397.02170000126</statistic>
              <statistic aggregation='Avg' datatype='real'>28.656896307784798</statistic>
              <statistic aggregation='Min' datatype='real'>-6599.978000000001</statistic>
              <statistic aggregation='Max' datatype='real'>8399.9759999999987</statistic>
              <statistic aggregation='Stdev' datatype='real'>234.26010769095711</statistic>
              <statistic aggregation='StdevP' datatype='real'>234.24838736035863</statistic>
              <statistic aggregation='Var' datatype='real'>54877.798055378829</statistic>
              <statistic aggregation='VarP' datatype='real'>54872.306980928624</statistic>
              <statistic aggregation='Count' datatype='integer'>9994</statistic>
              <statistic aggregation='SumXSqr' datatype='real'>556601085.72111595</statistic>
            </statistics>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Quantity</remote-name>
            <remote-type>16</remote-type>
            <local-name>[Quantity]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Quantity</remote-alias>
            <ordinal>13</ordinal>
            <family>Orders</family>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>14</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Sum' datatype='real'>37873.0</statistic>
              <statistic aggregation='Avg' datatype='real'>3.7895737442465478</statistic>
              <statistic aggregation='Min' datatype='integer'>1</statistic>
              <statistic aggregation='Max' datatype='integer'>14</statistic>
              <statistic aggregation='Stdev' datatype='real'>2.2251096911413999</statistic>
              <statistic aggregation='StdevP' datatype='real'>2.2249983660786095</statistic>
              <statistic aggregation='Var' datatype='real'>4.9511131376113768</statistic>
              <statistic aggregation='VarP' datatype='real'>4.9506177290524809</statistic>
              <statistic aggregation='Count' datatype='integer'>9994</statistic>
              <statistic aggregation='SumXSqr' datatype='real'>192999.0</statistic>
            </statistics>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Region</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Region]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Region</remote-alias>
            <ordinal>14</ordinal>
            <family>Orders</family>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>4</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>false</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <statistics>
              <statistic aggregation='Min' datatype='string'>&quot;Central&quot;</statistic>
              <statistic aggregation='Max' datatype='string'>&quot;West&quot;</statistic>
              <statistic aggregation='Count' datatype='integer'>9994</statistic>
            </statistics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US_CI&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>4</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Row ID</remote-name>
            <remote-type>2</remote-type>
            <local-name>[Row ID]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Row ID</remote-alias>
            <ordinal>15</ordinal>
            <family>Orders</family>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>9994</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Sum' datatype='real'>49945015.0</statistic>
              <statistic aggregation='Avg' datatype='real'>4997.5</statistic>
              <statistic aggregation='Min' datatype='integer'>1</statistic>
              <statistic aggregation='Max' datatype='integer'>9994</statistic>
              <statistic aggregation='Stdev' datatype='real'>2885.1636290974325</statistic>
              <statistic aggregation='StdevP' datatype='real'>2885.0192806981377</statistic>
              <statistic aggregation='Var' datatype='real'>8324169.166666667</statistic>
              <statistic aggregation='VarP' datatype='real'>8323336.25</statistic>
              <statistic aggregation='Count' datatype='integer'>9994</statistic>
              <statistic aggregation='Median' datatype='integer'>4998</statistic>
              <statistic aggregation='SumXSqr' datatype='real'>332783634945.0</statistic>
            </statistics>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>2</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>15</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint16&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sales</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Sales]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Sales</remote-alias>
            <ordinal>16</ordinal>
            <family>Orders</family>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>6144</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Sum' datatype='real'>2297200.8602999551</statistic>
              <statistic aggregation='Avg' datatype='real'>229.85800083049381</statistic>
              <statistic aggregation='Min' datatype='real'>0.44399999999999995</statistic>
              <statistic aggregation='Max' datatype='real'>22638.48</statistic>
              <statistic aggregation='Stdev' datatype='real'>623.24510050868332</statistic>
              <statistic aggregation='StdevP' datatype='real'>623.21391876504867</statistic>
              <statistic aggregation='Var' datatype='real'>388434.45530807879</statistic>
              <statistic aggregation='VarP' datatype='real'>388395.58854248864</statistic>
              <statistic aggregation='Count' datatype='integer'>9994</statistic>
              <statistic aggregation='SumXSqr' datatype='real'>4409655509.1482697</statistic>
            </statistics>
            <attributes>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Segment</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Segment]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Segment</remote-alias>
            <ordinal>17</ordinal>
            <family>Orders</family>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>3</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>false</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <statistics>
              <statistic aggregation='Min' datatype='string'>&quot;Consumer&quot;</statistic>
              <statistic aggregation='Max' datatype='string'>&quot;Home Office&quot;</statistic>
              <statistic aggregation='Count' datatype='integer'>9994</statistic>
            </statistics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US_CI&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>3</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ship Date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[Ship Date]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Ship Date</remote-alias>
            <ordinal>18</ordinal>
            <family>Orders</family>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <approx-count>1334</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='date'>#2012-01-08#</statistic>
              <statistic aggregation='Max' datatype='date'>#2016-01-06#</statistic>
              <statistic aggregation='Count' datatype='integer'>9994</statistic>
            </statistics>
            <attributes>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;date&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ship Mode</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Ship Mode]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Ship Mode</remote-alias>
            <ordinal>19</ordinal>
            <family>Orders</family>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>4</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>false</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <statistics>
              <statistic aggregation='Min' datatype='string'>&quot;First Class&quot;</statistic>
              <statistic aggregation='Max' datatype='string'>&quot;Standard Class&quot;</statistic>
              <statistic aggregation='Count' datatype='integer'>9994</statistic>
            </statistics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US_CI&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>5</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State</remote-name>
            <remote-type>129</remote-type>
            <local-name>[State]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>State</remote-alias>
            <ordinal>20</ordinal>
            <family>Orders</family>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>49</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>false</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <statistics>
              <statistic aggregation='Min' datatype='string'>&quot;Alabama&quot;</statistic>
              <statistic aggregation='Max' datatype='string'>&quot;Wyoming&quot;</statistic>
              <statistic aggregation='Count' datatype='integer'>9994</statistic>
            </statistics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US_CI&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>7</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sub-Category</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Sub-Category]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Sub-Category</remote-alias>
            <ordinal>21</ordinal>
            <family>Orders</family>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>17</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>false</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <statistics>
              <statistic aggregation='Min' datatype='string'>&quot;Accessories&quot;</statistic>
              <statistic aggregation='Max' datatype='string'>&quot;Tables&quot;</statistic>
              <statistic aggregation='Count' datatype='integer'>9994</statistic>
            </statistics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US_CI&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>6</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[:Measure Names]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;[dataengine.42019.618651678240].[ctd:Customer Name:qk]&quot;' value='Count of Customers' />
        </aliases>
      </column>
      <column caption='Days to Ship Actual' datatype='integer' name='[Calculation_0831103151444568]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='DATEDIFF(&apos;day&apos;,[Order Date],[Ship Date])' />
      </column>
      <column caption='Sales estimate' datatype='real' default-format='c&quot;$&quot;#,##0,.0K;(&quot;$&quot;#,##0,.0K)' name='[Calculation_1641214165608856]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Sales]*(1-[Parameters].[Parameter 2])*(1+[Parameters].[Parameter 1])' />
      </column>
      <column caption='Sales Forecast' datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Calculation_5421109230915137]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Sales]*(1-[Parameters].[Parameter 2])*(1+[Parameters].[Parameter 1])' />
      </column>
      <column caption='Ship Status' datatype='string' name='[Calculation_6401103171259723]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='if [Calculation_0831103151444568]&gt; [Calculation_6861103170623145] then &quot;Shipped Late&quot; &#13;&#10;elseIF [Calculation_0831103151444568]= [Calculation_6861103170623145] then &quot;Shipped On Time&quot;&#13;&#10;Else &quot;Shipped Early&quot; end' />
        <desc>
          <formatted-text>
            <run>Was shipment early, ontime or late based on ship mode</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Days to Ship Scheduled' datatype='integer' name='[Calculation_6861103170623145]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='CASE  [Ship Mode]&#13;&#10;WHEN &quot;Same Day&quot; THEN 0&#13;&#10;WHEN &quot;First Class&quot; THEN 1&#13;&#10;WHEN &quot;Second Class&quot; THEN 3&#13;&#10;WHEN &quot;Standard Class&quot; THEN 6&#13;&#10;END' />
      </column>
      <column caption='2013 sales' datatype='real' default-format='c&quot;$&quot;#,##0,.0K;(&quot;$&quot;#,##0,.0K)' name='[Calculation_8821129170240873]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='if year([Order Date])=2013 then [Sales]&#13;&#10;else NULL end' />
      </column>
      <column caption='Order Profitable?' datatype='boolean' name='[Calculation_9060122104947471]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='{fixed [Order ID]:sum([Profit])}&gt;0&#13;&#10;// calculates the profit at the order level' />
        <aliases>
          <alias key='false' value='Unprofitable' />
          <alias key='true' value='Profitable' />
        </aliases>
        <desc>
          <formatted-text>
            <run>A level of detail expression that calculates profitability for each Order</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Profit per Customer' datatype='real' default-format='C1033%' name='[Calculation_9321103144526191 1]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum([Profit])/countD([Customer Name])' />
      </column>
      <column caption='Sales per Customer' datatype='real' default-format='C1033%' name='[Calculation_9321103144526191]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='Sum([Sales])/countD([Customer Name])' />
      </column>
      <column caption='Profit Ratio' datatype='real' default-format='p0.0%' name='[Calculation_9921103144103743]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum([Profit])/sum([Sales])' />
      </column>
      <column caption='Sales above Target?' datatype='string' name='[Calculation_9951107165644870]' role='measure' type='nominal'>
        <calculation class='tableau' formula='If Sum([Sales])&gt;SUM([dataengine.42019.622799629629].[Sales Target]) then &quot;Above Target&quot; else &quot;Below Target&quot; end' />
        <desc>
          <formatted-text>
            <run>Used with &quot;Sales Target&quot; data source</run>
          </formatted-text>
        </desc>
      </column>
      <column datatype='string' name='[Category]' role='dimension' type='nominal' />
      <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='string' name='[Customer Name]' role='dimension' type='nominal' />
      <column datatype='real' default-format='p0.00%' name='[Discount]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
      <column datatype='string' name='[Order ID]' role='dimension' type='nominal' />
      <column datatype='real' hidden='true' name='[Order Quantity]' role='measure' type='quantitative' />
      <column datatype='integer' default-format='*00000' name='[Postal Code]' role='dimension' semantic-role='[ZipCode].[Name]' type='ordinal' />
      <column datatype='string' name='[Product Name]' role='dimension' type='nominal' />
      <column datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Profit]' role='measure' type='quantitative' />
      <column datatype='string' name='[Region]' role='dimension' type='nominal' />
      <column caption='Units estimate' datatype='real' default-format='n#,##0;-#,##0' name='[Sales est (copy)]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='ROUND([Quantity]*(1-[Parameters].[Parameter 2])*(1+[Parameters].[Parameter 1]),0)' scope-isolation='false' />
      </column>
      <column caption='Profit per Order' datatype='real' default-format='C1033%' name='[Sales per Customer (copy)]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='Sum([Profit])/countD([Order ID])' />
      </column>
      <column datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Sales]' role='measure' type='quantitative' />
      <column datatype='string' name='[Segment]' role='dimension' type='nominal' />
      <column datatype='string' name='[Ship Mode]' role='dimension' type='nominal' />
      <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
      <column-instance column='[Customer Name]' derivation='CountD' name='[ctd:Customer Name:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Order Date]' derivation='Month' name='[mn:Order Date:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Calculation_6401103171259723]' derivation='None' name='[none:Calculation_6401103171259723:nk]' pivot='key' type='nominal' />
      <column-instance column='[Calculation_9060122104947471]' derivation='None' name='[none:Calculation_9060122104947471:nk]' pivot='key' type='nominal' />
      <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
      <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
      <column-instance column='[Postal Code]' derivation='None' name='[none:Postal Code:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Segment]' derivation='None' name='[none:Segment:nk]' pivot='key' type='nominal' />
      <column-instance column='[Ship Mode]' derivation='None' name='[none:Ship Mode:nk]' pivot='key' type='nominal' />
      <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
      <column-instance column='[Order Date]' derivation='Quarter' name='[qr:Order Date:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Sales]' derivation='Sum' name='[rank:sum:Sales:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Columns' rank-options='Competition,Descending' type='Rank' />
      </column-instance>
      <column-instance column='[Calculation_1641214165608856]' derivation='Sum' name='[sum:Calculation_1641214165608856:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_5421109230915137]' derivation='Sum' name='[sum:Calculation_5421109230915137:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Sales est (copy)]' derivation='Sum' name='[sum:Sales est (copy):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Order Date]' derivation='Month-Trunc' name='[tmn:Order Date:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Order Date]' derivation='Week-Trunc' name='[twk:Order Date:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Calculation_9951107165644870]' derivation='User' name='[usr:Calculation_9951107165644870:nk]' pivot='key' type='nominal' />
      <column-instance column='[Order Date]' derivation='Year' name='[yr:Order Date:ok]' pivot='key' type='ordinal' />
      <group hidden='true' name='[Action (Category)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Category]' />
        </groupfilter>
      </group>
      <group caption='Action (Category,MONTH(Order Date))' hidden='true' name='[Action (Category,MONTH(Order Date))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Category]' />
          <groupfilter function='level-members' level='[tmn:Order Date:ok]' />
        </groupfilter>
      </group>
      <group caption='Action (Category,YEAR(Order Date),MONTH(Order Date))' hidden='true' name='[Action (Category,YEAR(Order Date),MONTH(Order Date))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Category]' />
          <groupfilter function='level-members' level='[yr:Order Date:ok]' />
          <groupfilter function='level-members' level='[mn:Order Date:ok]' />
        </groupfilter>
      </group>
      <group hidden='true' name='[Action (Country)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Country / Region]' />
        </groupfilter>
      </group>
      <group hidden='true' name='[Action (Country,YEAR(Order Date))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Country / Region]' />
          <groupfilter function='level-members' level='[yr:Order Date:ok]' />
        </groupfilter>
      </group>
      <group hidden='true' name='[Action (Customer Segment)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:Segment:nk]' />
        </groupfilter>
      </group>
      <group caption='Action (Delayed?)' hidden='true' name='[Action (Delayed?)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Calculation_6401103171259723]' />
        </groupfilter>
      </group>
      <group caption='Action (Delayed?,YEAR(Order Date),MONTH(Order Date),Ship Mode)' hidden='true' name='[Action (Delayed?,YEAR(Order Date),MONTH(Order Date),Ship Mode)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Calculation_6401103171259723]' />
          <groupfilter function='level-members' level='[yr:Order Date:ok]' />
          <groupfilter function='level-members' level='[tmn:Order Date:ok]' />
          <groupfilter function='level-members' level='[none:Ship Mode:nk]' />
        </groupfilter>
      </group>
      <group caption='Action (Delayed?,YEAR(Order Date),WEEK(Order Date))' hidden='true' name='[Action (Delayed?,YEAR(Order Date),WEEK(Order Date))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Calculation_6401103171259723]' />
          <groupfilter function='level-members' level='[yr:Order Date:ok]' />
          <groupfilter function='level-members' level='[twk:Order Date:ok]' />
        </groupfilter>
      </group>
      <group caption='Action (Delayed?,YEAR(Order Date),WEEK(Order Date),Ship Mode)' hidden='true' name='[Action (Delayed?,YEAR(Order Date),WEEK(Order Date),Ship Mode)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Calculation_6401103171259723]' />
          <groupfilter function='level-members' level='[yr:Order Date:ok]' />
          <groupfilter function='level-members' level='[twk:Order Date:ok]' />
          <groupfilter function='level-members' level='[none:Ship Mode:nk]' />
        </groupfilter>
      </group>
      <group hidden='true' name='[Action (Department,Category)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Department]' />
          <groupfilter function='level-members' level='[Category]' />
        </groupfilter>
      </group>
      <group caption='Action (MONTH(Order Date),Product Category)' hidden='true' name='[Action (MONTH(Order Date),Product Category)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[tmn:Order Date:ok]' />
          <groupfilter function='level-members' level='[none:Category:nk]' />
        </groupfilter>
      </group>
      <group caption='Action (MONTH(Order Date),Product Category,ProductSub-Category)' hidden='true' name='[Action (MONTH(Order Date),Product Category,ProductSub-Category)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[mn:Order Date:ok]' />
          <groupfilter function='level-members' level='[none:Category:nk]' />
          <groupfilter function='level-members' level='[none:Sub-Category:nk]' />
        </groupfilter>
      </group>
      <group caption='Action (MONTH(Order Date),Product Category,Segment) 1' hidden='true' name='[Action (MONTH(Order Date),Product Category,Segment) 1]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[mn:Order Date:ok]' />
          <groupfilter function='level-members' level='[none:Category:nk]' />
          <groupfilter function='level-members' level='[Segment]' />
        </groupfilter>
      </group>
      <group caption='Action (MONTH(Order Date),Product Category,Segment)' hidden='true' name='[Action (MONTH(Order Date),Product Category,Segment)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[tmn:Order Date:ok]' />
          <groupfilter function='level-members' level='[none:Category:nk]' />
          <groupfilter function='level-members' level='[Segment]' />
        </groupfilter>
      </group>
      <group caption='Action (MONTH(Order Date),ProductSub-Category)' hidden='true' name='[Action (MONTH(Order Date),ProductSub-Category)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[mn:Order Date:ok]' />
          <groupfilter function='level-members' level='[none:Sub-Category:nk]' />
        </groupfilter>
      </group>
      <group caption='Action (MONTH(Order Date),Segment)' hidden='true' name='[Action (MONTH(Order Date),Segment)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[tmn:Order Date:ok]' />
          <groupfilter function='level-members' level='[Segment]' />
        </groupfilter>
      </group>
      <group caption='Action (Order Profitable?,Category,MONTH(Order Date))' hidden='true' name='[Action (Order Profitable?,Category,MONTH(Order Date))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Calculation_9060122104947471]' />
          <groupfilter function='level-members' level='[Category]' />
          <groupfilter function='level-members' level='[tmn:Order Date:ok]' />
        </groupfilter>
      </group>
      <group caption='Action (Order Profitable?,MONTH(Order Date),Segment)' hidden='true' name='[Action (Order Profitable?,MONTH(Order Date),Segment)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Calculation_9060122104947471]' />
          <groupfilter function='level-members' level='[tmn:Order Date:ok]' />
          <groupfilter function='level-members' level='[Segment]' />
        </groupfilter>
      </group>
      <group caption='Action (Postal Code,State) 1' hidden='true' name='[Action (Postal Code,State) 1]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Postal Code]' />
          <groupfilter function='level-members' level='[State]' />
        </groupfilter>
      </group>
      <group caption='Action (Postal Code,State)' hidden='true' name='[Action (Postal Code,State)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:Postal Code:ok]' />
          <groupfilter function='level-members' level='[State]' />
        </groupfilter>
      </group>
      <group caption='Action (Product Category,ProductSub-Category,Segment)' hidden='true' name='[Action (Product Category,ProductSub-Category,Segment)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:Category:nk]' />
          <groupfilter function='level-members' level='[none:Sub-Category:nk]' />
          <groupfilter function='level-members' level='[Segment]' />
        </groupfilter>
      </group>
      <group caption='Action (ProductSub-Category,Region,Segment)' hidden='true' name='[Action (ProductSub-Category,Region,Segment)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:Sub-Category:nk]' />
          <groupfilter function='level-members' level='[Region]' />
          <groupfilter function='level-members' level='[Segment]' />
        </groupfilter>
      </group>
      <group caption='Action (ProductSub-Category,State)' hidden='true' name='[Action (ProductSub-Category,State)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:Sub-Category:nk]' />
          <groupfilter function='level-members' level='[State]' />
        </groupfilter>
      </group>
      <group caption='Action (QUARTER(Order Date),MONTH(Order Date),Product Category,ProductSub-Category)' hidden='true' name='[Action (QUARTER(Order Date),MONTH(Order Date),Product Category,ProductSub-Category)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[qr:Order Date:ok]' />
          <groupfilter function='level-members' level='[mn:Order Date:ok]' />
          <groupfilter function='level-members' level='[none:Category:nk]' />
          <groupfilter function='level-members' level='[none:Sub-Category:nk]' />
        </groupfilter>
      </group>
      <group caption='Action (QUARTER(Order Date),MONTH(Order Date),ProductSub-Category)' hidden='true' name='[Action (QUARTER(Order Date),MONTH(Order Date),ProductSub-Category)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[qr:Order Date:ok]' />
          <groupfilter function='level-members' level='[mn:Order Date:ok]' />
          <groupfilter function='level-members' level='[none:Sub-Category:nk]' />
        </groupfilter>
      </group>
      <group caption='Action (Region)' hidden='true' name='[Action (Region)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Region]' />
        </groupfilter>
      </group>
      <group caption='Action (Segment)' hidden='true' name='[Action (Segment)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Segment]' />
        </groupfilter>
      </group>
      <group caption='Action (Ship Status)' hidden='true' name='[Action (Ship Status)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Calculation_6401103171259723]' />
        </groupfilter>
      </group>
      <group caption='Action (Ship Status,Customer Name,Order Date,Order ID,Product Name,Ship Mode)' hidden='true' name='[Action (Ship Status,Customer Name,Order Date,Order ID,Product Name,Ship Mode)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Calculation_6401103171259723]' />
          <groupfilter function='level-members' level='[Customer Name]' />
          <groupfilter function='level-members' level='[Order Date]' />
          <groupfilter function='level-members' level='[Order ID]' />
          <groupfilter function='level-members' level='[Product Name]' />
          <groupfilter function='level-members' level='[Ship Mode]' />
        </groupfilter>
      </group>
      <group caption='Action (Ship Status,YEAR(Order Date),WEEK(Order Date))' hidden='true' name='[Action (Ship Status,YEAR(Order Date),WEEK(Order Date))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Calculation_6401103171259723]' />
          <groupfilter function='level-members' level='[yr:Order Date:ok]' />
          <groupfilter function='level-members' level='[twk:Order Date:ok]' />
        </groupfilter>
      </group>
      <group caption='Action (State)' hidden='true' name='[Action (State)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[State]' />
        </groupfilter>
      </group>
      <group caption='Action (Transaction Profit,MONTH(Order Date),Segment)' hidden='true' name='[Action (Transaction Profit,MONTH(Order Date),Segment)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Calculation_9060122104947471]' />
          <groupfilter function='level-members' level='[tmn:Order Date:ok]' />
          <groupfilter function='level-members' level='[Segment]' />
        </groupfilter>
      </group>
      <group caption='Action (YEAR(Order Date),MONTH(Order Date))' hidden='true' name='[Action (YEAR(Order Date),MONTH(Order Date))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[yr:Order Date:ok]' />
          <groupfilter function='level-members' level='[mn:Order Date:ok]' />
        </groupfilter>
      </group>
      <group caption='Action (YEAR(Order Date),MONTH(Order Date),Product Category)' hidden='true' name='[Action (YEAR(Order Date),MONTH(Order Date),Product Category)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[yr:Order Date:ok]' />
          <groupfilter function='level-members' level='[mn:Order Date:ok]' />
          <groupfilter function='level-members' level='[none:Category:nk]' />
        </groupfilter>
      </group>
      <group caption='Action (YEAR(Order Date),MONTH(Order Date),Region)' hidden='true' name='[Action (YEAR(Order Date),MONTH(Order Date),Region)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[yr:Order Date:ok]' />
          <groupfilter function='level-members' level='[mn:Order Date:ok]' />
          <groupfilter function='level-members' level='[Region]' />
        </groupfilter>
      </group>
      <group caption='Action (YEAR(Order Date),MONTH(Order Date),Segment)' hidden='true' name='[Action (YEAR(Order Date),MONTH(Order Date),Segment)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[yr:Order Date:ok]' />
          <groupfilter function='level-members' level='[tmn:Order Date:ok]' />
          <groupfilter function='level-members' level='[Segment]' />
        </groupfilter>
      </group>
      <group caption='Action (YEAR(Order Date),MONTH(Order Date),Ship Mode)' hidden='true' name='[Action (YEAR(Order Date),MONTH(Order Date),Ship Mode)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[yr:Order Date:ok]' />
          <groupfilter function='level-members' level='[tmn:Order Date:ok]' />
          <groupfilter function='level-members' level='[none:Ship Mode:nk]' />
        </groupfilter>
      </group>
      <group caption='Action (YEAR(Order Date),QUARTER(Order Date),MONTH(Order Date),Region)' hidden='true' name='[Action (YEAR(Order Date),QUARTER(Order Date),MONTH(Order Date),Region)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[yr:Order Date:ok]' />
          <groupfilter function='level-members' level='[qr:Order Date:ok]' />
          <groupfilter function='level-members' level='[mn:Order Date:ok]' />
          <groupfilter function='level-members' level='[Region]' />
        </groupfilter>
      </group>
      <group caption='Action (YEAR(Order Date),WEEK(Order Date),Ship Mode)' hidden='true' name='[Action (YEAR(Order Date),WEEK(Order Date),Ship Mode)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[yr:Order Date:ok]' />
          <groupfilter function='level-members' level='[twk:Order Date:ok]' />
          <groupfilter function='level-members' level='[none:Ship Mode:nk]' />
        </groupfilter>
      </group>
      <drill-paths>
        <drill-path name='Location'>
          <field>[Country]</field>
          <field>[State]</field>
          <field>[City]</field>
          <field>[Postal Code]</field>
        </drill-path>
        <drill-path name='Product'>
          <field>[Category]</field>
          <field>[Sub-Category]</field>
          <field>[Product Name]</field>
        </drill-path>
      </drill-paths>
      <folder name='Customer' role='dimensions'>
        <folder-item name='[Customer Name]' type='field' />
        <folder-item name='[Segment]' type='field' />
      </folder>
      <folder name='Order' role='dimensions'>
        <folder-item name='[Order Date]' type='field' />
        <folder-item name='[Order ID]' type='field' />
        <folder-item name='[Ship Date]' type='field' />
        <folder-item name='[Ship Mode]' type='field' />
      </folder>
      <layout dim-ordering='alphabetic' dim-percentage='0.418886' measure-ordering='alphabetic' measure-percentage='0.140436' parameter-percentage='0.440678' show-aliased-fields='true' show-structure='false' user-set-layout='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[Calculation_9921103144103743]' max='0.5' min='-0.5' palette='tableau-orange-blue' type='interpolated' />
          <encoding attr='color' field='[none:Forecast Indicator:nk]' type='palette'>
            <map to='#1f77b4'>
              <bucket>&quot;Actual&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Estimate&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Segment:nk]&#10;[none:Forecast Indicator:nk]' type='palette'>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;Consumer&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;Home Office&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;Corporate&quot;</bucket>
            </map-pri>
          </encoding>
          <encoding attr='color' field='[usr:Calculation_9951107165644870:nk]' palette='nuriel_stone_10_0' type='palette'>
            <map to='#027b8e'>
              <bucket>&quot;Above Target&quot;</bucket>
            </map>
            <map to='#a39fc9'>
              <bucket>&quot;Below Target&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Calculation_9060122104947471:nk]' type='palette'>
            <map to='#6388b4'>
              <bucket>true</bucket>
            </map>
            <map to='#ffae34'>
              <bucket>false</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#000000'>
              <bucket>&quot;[dataengine.42019.618651678240].[sum:Sales:qk]&quot;</bucket>
            </map>
            <map to='#1c70ae'>
              <bucket>&quot;[dataengine.42019.618651678240].[sum:Calculation_5421109230915137:qk]&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;[dataengine.42019.618651678240].[usr:Calculation_9330126204734562:qk]&quot;</bucket>
            </map>
            <map to='#414451'>
              <bucket>&quot;[dataengine.42019.618651678240].[rank:sum:Sales:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[dataengine.42019.618651678240].[sum:Calculation_1641214165608856:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[dataengine.42019.618651678240].[sum:Sales est (copy):qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Calculation_6401103171259723:nk]' palette='tableau10_10_0' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Shipped Early&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;Shipped Late&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Shipped On Time&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <default-sorts>
        <sort class='manual' column='[none:Forecast Indicator:nk]' direction='ASC'>
          <dictionary>
            <bucket>&quot;Actual&quot;</bucket>
            <bucket>&quot;Estimate&quot;</bucket>
          </dictionary>
        </sort>
      </default-sorts>
      <datasource-dependencies datasource='Parameters'>
        <column caption='New Business Growth' datatype='real' default-format='p0%' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='0.59999999999999998'>
          <calculation class='tableau' formula='0.59999999999999998' />
          <range granularity='0.01' max='1.0' min='0.0' />
        </column>
        <column caption='Churn Rate' datatype='real' default-format='p0.00%' name='[Parameter 2]' param-domain-type='range' role='measure' type='quantitative' value='0.064000000000000001'>
          <calculation class='tableau' formula='0.064000000000000001' />
          <range granularity='0.001' max='0.25' min='0.0' />
        </column>
      </datasource-dependencies>
      <datasource-dependencies datasource='dataengine.42019.622799629629'>
        <column datatype='integer' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Sales Target]' role='measure' type='quantitative' />
      </datasource-dependencies>
    </datasource>
    <datasource caption='Sales Commission' inline='true' name='Sales Planning new' version='10.0'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Sales Commission' name='Sales Planning newleaf'>
            <connection class='dataengine' dbname='D:\XML2JSON\BaseSalALLSuperstore.twb Files\Data/Extracts/Sales Planning new.tde' schema='Extract' server-oauth='' tablename='Extract' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <relation connection='Sales Planning newleaf' name='Extract' table='[Extract].[Extract]' type='table' />
        <calculations>
          <calculation column='[Number of Records]' formula='1' />
        </calculations>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Number of Records</remote-name>
            <remote-type>16</remote-type>
            <local-name>[Number of Records]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Number of Records</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>1</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='integer'>1</statistic>
              <statistic aggregation='Max' datatype='integer'>1</statistic>
            </statistics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order Date</remote-name>
            <remote-type>135</remote-type>
            <local-name>[Order Date]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Order Date</remote-alias>
            <ordinal>1</ordinal>
            <family>DATA$</family>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <approx-count>1</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='datetime'>#2002-01-01 00:00:00#</statistic>
              <statistic aggregation='Max' datatype='datetime'>#2002-01-01 00:00:00#</statistic>
            </statistics>
            <attributes>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;datetime&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Region</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Region]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Region</remote-alias>
            <ordinal>2</ordinal>
            <family>DATA$</family>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>3</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>false</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <statistics>
              <statistic aggregation='Min' datatype='string'>&quot;Central&quot;</statistic>
              <statistic aggregation='Max' datatype='string'>&quot;West&quot;</statistic>
            </statistics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US_CI&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>0</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sales Person</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Sales Person]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Sales Person</remote-alias>
            <ordinal>3</ordinal>
            <family>DATA$</family>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>41</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>false</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <statistics>
              <statistic aggregation='Min' datatype='string'>&quot;Barbara Davis&quot;</statistic>
              <statistic aggregation='Max' datatype='string'>&quot;William Taylor&quot;</statistic>
            </statistics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US_CI&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sales</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Sales]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Sales</remote-alias>
            <ordinal>4</ordinal>
            <family>DATA$</family>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>43</approx-count>
            <contains-null>false</contains-null>
            <statistics>
              <statistic aggregation='Min' datatype='real'>10297.020000000002</statistic>
              <statistic aggregation='Max' datatype='real'>1144600.6499999994</statistic>
            </statistics>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>2</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
              <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Achievement (estimated)' datatype='real' default-format='C1033%' name='[Achievement (copy)]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Sales]' scope-isolation='false' />
      </column>
      <column caption='Achieved Quota' datatype='string' name='[Achievement (variable) (copy)]' role='measure' type='nominal'>
        <calculation class='tableau' formula='if SUM([Achievement (copy)]) &gt;= [Parameters].[New Quota] then &quot;100% +&quot;&#13;&#10;elseif SUM([Achievement (copy)]) &gt;= 0.75 * [Parameters].[New Quota] then &quot;75-100%&quot;&#13;&#10;elseif SUM([Achievement (copy)]) &gt;= 0.5 * [Parameters].[New Quota] then &quot;50-75%&quot;&#13;&#10;else &quot;Below 50%&quot; end' />
      </column>
      <column datatype='integer' default-format='C1033%' name='[Base (Variable)]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Parameters].[Base Salary]' />
      </column>
      <column caption='% of quota achieved' datatype='real' default-format='p0%' name='[Calculation_0440925131659539]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='AVG([Achievement (copy)])/[Parameters].[New Quota]' scope-isolation='false' />
      </column>
      <column caption='Rank over 3' datatype='real' name='[Calculation_4120925132203686]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='ROUND(INDEX() / 3 - 0.6,0) + 1'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Sort by field' datatype='real' name='[Calculation_8140925133029303]' role='measure' type='ordinal'>
        <calculation class='tableau' formula='if [Parameters].[Parameter 1 1]=&quot;Names&quot; then 0&#13;&#10;elseif [Parameters].[Parameter 1 1]=&quot;% quota descending&quot; then -[Calculation_0440925131659539]&#13;&#10;else [Calculation_0440925131659539] end' />
      </column>
      <column datatype='real' default-format='C1033%' name='[Commission (Variable)]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='([Parameters].[Commission Rate]*[Sales])/100' scope-isolation='false' />
      </column>
      <column datatype='string' name='[Estimate Compensation label]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='&quot;Estimated Compensation:&quot;' />
        <aliases>
          <alias key='&quot;Estimated Compensation:&quot;' value='Estimated total compensation' />
        </aliases>
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec' />
      <column datatype='real' default-format='C1033%' name='[OTE (Variable)]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Parameters].[Base Salary] + ([Parameters].[Commission Rate]*[Parameters].[New Quota])/100' />
      </column>
      <column datatype='datetime' name='[Order Date]' role='dimension' type='ordinal' />
      <column datatype='string' name='[Region]' role='dimension' type='nominal' />
      <column datatype='real' default-format='n#,##0;-#,##0' name='[Sales]' role='measure' type='quantitative' />
      <column datatype='real' default-format='C1033%' name='[Total Compensation]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='MIN([Base (Variable)]) + SUM([Commission (Variable)])' />
      </column>
      <column datatype='string' name='[Total Sales label]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='&quot;Total Sales:&quot;' />
        <aliases>
          <alias key='&quot;Total Sales:&quot;' value='Total' />
        </aliases>
      </column>
      <column-instance column='[Base (Variable)]' derivation='Min' name='[min:Base (Variable):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Order Date]' derivation='Month' name='[mn:Order Date:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Commission (Variable)]' derivation='Sum' name='[sum:Commission (Variable):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Order Date]' derivation='Month-Trunc' name='[tmn:Order Date:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Order Date]' derivation='Week-Trunc' name='[twk:Order Date:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Achievement (variable) (copy)]' derivation='User' name='[usr:Achievement (variable) (copy):nk]' pivot='key' type='nominal' />
      <column-instance column='[Order Date]' derivation='Year' name='[yr:Order Date:ok]' pivot='key' type='ordinal' />
      <group hidden='true' name='[Action (Call Center)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Region]' />
        </groupfilter>
      </group>
      <group caption='Action (MONTH(Order Date))' hidden='true' name='[Action (MONTH(Order Date))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[tmn:Order Date:ok]' />
        </groupfilter>
      </group>
      <group caption='Action (Next Button)' hidden='true' name='[Action (Next Button)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Calculation_2310128142449424]' />
        </groupfilter>
      </group>
      <group caption='Action (Previous Button)' hidden='true' name='[Action (Previous Button)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Next (copy)]' />
        </groupfilter>
      </group>
      <group caption='Action (YEAR(Order Date),MONTH(Order Date))' hidden='true' name='[Action (YEAR(Order Date),MONTH(Order Date))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[yr:Order Date:ok]' />
          <groupfilter function='level-members' level='[mn:Order Date:ok]' />
        </groupfilter>
      </group>
      <group caption='Action (YEAR(Order Date),WEEK(Order Date))' hidden='true' name='[Action (YEAR(Order Date),WEEK(Order Date))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[yr:Order Date:ok]' />
          <groupfilter function='level-members' level='[twk:Order Date:ok]' />
        </groupfilter>
      </group>
      <layout dim-ordering='alphabetic' dim-percentage='0.205811' measure-ordering='alphabetic' measure-percentage='0.501211' parameter-percentage='0.292978' show-structure='true' user-set-layout='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[usr:Achievement (variable) (copy):nk]' palette='tableau10_10_0' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;50-75\%&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Below 50\%&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;100\% +&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;75-100\%&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#5f9ed1'>
              <bucket>&quot;[Sales Planning new].[sum:Commission (Variable):qk]&quot;</bucket>
            </map>
            <map to='#898989'>
              <bucket>&quot;[Sales Planning new].[min:Base (Variable):qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Base Salary' datatype='integer' name='[Base Salary]' param-domain-type='any' role='measure' type='quantitative' value='50000'>
          <calculation class='tableau' formula='50000' />
        </column>
        <column caption='Commission Rate' datatype='real' default-format='n#,##0.0&quot;%&quot;;-#,##0.0&quot;%&quot;' name='[Commission Rate]' param-domain-type='range' role='measure' type='quantitative' value='18.400000000000002'>
          <calculation class='tableau' formula='18.400000000000002' />
          <range granularity='0.10000000000000001' max='100.0' min='1.0' />
        </column>
        <column caption='New Quota' datatype='integer' default-format='c&quot;$&quot;#,##0,K;(&quot;$&quot;#,##0,K)' name='[New Quota]' param-domain-type='range' role='measure' type='quantitative' value='500000'>
          <calculation class='tableau' formula='500000' />
          <range granularity='25000' min='100000' />
        </column>
        <column caption='Sort by' datatype='string' name='[Parameter 1 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Names&quot;'>
          <calculation class='tableau' formula='&quot;Names&quot;' />
        </column>
      </datasource-dependencies>
    </datasource>
  </datasources>
  <datasource-relationships>
    <datasource-dependencies datasource='dataengine.42019.618651678240'>
      <column datatype='string' name='[Category]' role='dimension' type='nominal' />
      <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
      <column datatype='string' name='[Segment]' role='dimension' type='nominal' />
      <column-instance column='[Order Date]' derivation='Month' name='[mn:Order Date:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
      <column-instance column='[Segment]' derivation='None' name='[none:Segment:nk]' pivot='key' type='nominal' />
      <column-instance column='[Order Date]' derivation='Month-Trunc' name='[tmn:Order Date:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Order Date]' derivation='Year-Trunc' name='[tyr:Order Date:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Order Date]' derivation='Year' name='[yr:Order Date:ok]' pivot='key' type='ordinal' />
    </datasource-dependencies>
    <datasource-dependencies datasource='dataengine.42019.622799629629'>
      <column datatype='string' name='[Category]' role='dimension' type='nominal' />
      <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
      <column datatype='string' name='[Segment]' role='dimension' type='nominal' />
      <column-instance column='[Order Date]' derivation='Month' name='[mn:Order Date:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
      <column-instance column='[Segment]' derivation='None' name='[none:Segment:nk]' pivot='key' type='nominal' />
      <column-instance column='[Order Date]' derivation='Month-Trunc' name='[tmn:Order Date:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Order Date]' derivation='Year-Trunc' name='[tyr:Order Date:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Order Date]' derivation='Year' name='[yr:Order Date:ok]' pivot='key' type='ordinal' />
    </datasource-dependencies>
    <datasource-relationship source='dataengine.42019.618651678240' target='dataengine.42019.622799629629'>
      <column-mapping>
        <map key='[dataengine.42019.618651678240].[mn:Order Date:ok]' value='[dataengine.42019.622799629629].[mn:Order Date:ok]' />
        <map key='[dataengine.42019.618651678240].[none:Category:nk]' value='[dataengine.42019.622799629629].[none:Category:nk]' />
        <map key='[dataengine.42019.618651678240].[none:Segment:nk]' value='[dataengine.42019.622799629629].[none:Segment:nk]' />
        <map key='[dataengine.42019.618651678240].[tmn:Order Date:ok]' value='[dataengine.42019.622799629629].[tmn:Order Date:ok]' />
        <map key='[dataengine.42019.618651678240].[tyr:Order Date:ok]' value='[dataengine.42019.622799629629].[tyr:Order Date:ok]' />
        <map key='[dataengine.42019.618651678240].[yr:Order Date:ok]' value='[dataengine.42019.622799629629].[yr:Order Date:ok]' />
      </column-mapping>
    </datasource-relationship>
  </datasource-relationships>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <actions>
    <action caption='Highlight Customer Name (Hover)' name='[Action10]'>
      <activation auto-clear='true' type='on-hover' />
      <source dashboard='Customers' type='sheet'>
        <exclude-sheet name='CustomerOverview' />
      </source>
      <command command='tsc:brush'>
        <param name='exclude' value='CustomerOverview' />
        <param name='field-captions' value='Customer Name' />
        <param name='target' value='Customers' />
      </command>
    </action>
    <action caption='Highlight 3 (generated)' name='[Action13]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Commission Model' type='sheet' />
      <command command='tsc:brush'>
        <param name='field-captions' value='Sales Person' />
        <param name='target' value='Commission Model' />
      </command>
    </action>
    <action caption='State Filter' name='[Action1]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Overview' type='sheet' worksheet='Sale Map' />
      <link caption='State Filter' delimiter=',' escape='\' expression='tsl:Overview?%5Bdataengine.42019.618651678240%5D.%5BState%5D~s0=&lt;[State]~na&gt;' include-null='true' multi-select='true' url-escape='true' />
      <command command='tsc:tsl-filter'>
        <param name='exclude' value='Sale Map' />
        <param name='target' value='Overview' />
      </command>
    </action>
    <action caption='Filter Details' name='[Action2]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Shipping' type='sheet' worksheet='ShippingTrend' />
      <command command='tsc:tsl-filter'>
        <param name='exclude' value='ShipSummary' />
        <param name='special-fields' value='all' />
        <param name='target' value='Shipping' />
      </command>
    </action>
    <action caption='Filter Product Sales' name='[Action3]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Product' type='sheet' worksheet='ProductView' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Product' />
      </command>
    </action>
    <action caption='Filter 1 (generated)' name='[Action4]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Shipping' type='sheet' worksheet='ShipSummary' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Shipping' />
      </command>
    </action>
    <action caption='Month Highlight' name='[Action5]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Overview' type='sheet'>
        <exclude-sheet name='Sale Map' />
      </source>
      <command command='tsc:brush'>
        <param name='exclude' value='Sale Map' />
        <param name='field-captions' value='MONTH(Order Date)' />
        <param name='target' value='Overview' />
      </command>
    </action>
    <action caption='State Highlight (map)' name='[Action7]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Overview' type='sheet'>
        <exclude-sheet name='Sales by Product' />
        <exclude-sheet name='Sales by Segment' />
      </source>
      <command command='tsc:brush'>
        <param name='exclude' value='Sales by Product,Sales by Segment' />
        <param name='field-captions' value='State' />
        <param name='target' value='Overview' />
      </command>
    </action>
    <action caption='Filter Region' name='[Action8]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Customers' type='sheet' worksheet='CustomerOverview' />
      <link caption='Filter Region' delimiter=',' escape='\' expression='tsl:Customers?%5Bdataengine.42019.618651678240%5D.%5BRegion%5D~s0=&lt;[Region]~na&gt;' include-null='true' multi-select='true' url-escape='true' />
      <command command='tsc:tsl-filter'>
        <param name='exclude' value='CustomerOverview' />
        <param name='target' value='Customers' />
      </command>
    </action>
    <action caption='Highlight 1 (generated)' name='[Action9]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Customers' type='sheet' />
      <command command='tsc:brush'>
        <param name='field-captions' value='AdhocCluster:1,Clusters,AdhocCluster:2,Customer Segments' />
        <param name='target' value='Customers' />
      </command>
    </action>
    <datasources>
      <datasource caption='Sample - Superstore' name='dataengine.42019.618651678240' />
    </datasources>
    <datasource-dependencies datasource='dataengine.42019.618651678240'>
      <column datatype='string' name='[Region]' role='dimension' type='nominal' />
      <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
    </datasource-dependencies>
  </actions>
  <worksheets>
    <worksheet name='CommissionProjection'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontsize='13'>Total Compensation with These Assumptions</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sales Commission' name='Sales Planning new' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Base Salary' datatype='integer' name='[Base Salary]' param-domain-type='any' role='measure' type='quantitative' value='50000'>
              <calculation class='tableau' formula='50000' />
            </column>
            <column caption='Commission Rate' datatype='real' default-format='n#,##0.0&quot;%&quot;;-#,##0.0&quot;%&quot;' name='[Commission Rate]' param-domain-type='range' role='measure' type='quantitative' value='18.400000000000002'>
              <calculation class='tableau' formula='18.400000000000002' />
              <range granularity='0.10000000000000001' max='100.0' min='1.0' />
            </column>
            <column caption='New Quota' datatype='integer' default-format='c&quot;$&quot;#,##0,K;(&quot;$&quot;#,##0,K)' name='[New Quota]' param-domain-type='range' role='measure' type='quantitative' value='500000'>
              <calculation class='tableau' formula='500000' />
              <range granularity='25000' min='100000' />
            </column>
            <column caption='Sort by' datatype='string' name='[Parameter 1 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Names&quot;'>
              <calculation class='tableau' formula='&quot;Names&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='Sales Planning new'>
            <column caption='Achievement (estimated)' datatype='real' default-format='C1033%' name='[Achievement (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Sales]' scope-isolation='false' />
            </column>
            <column caption='Achieved Quota' datatype='string' name='[Achievement (variable) (copy)]' role='measure' type='nominal'>
              <calculation class='tableau' formula='if SUM([Achievement (copy)]) &gt;= [Parameters].[New Quota] then &quot;100% +&quot;&#13;&#10;elseif SUM([Achievement (copy)]) &gt;= 0.75 * [Parameters].[New Quota] then &quot;75-100%&quot;&#13;&#10;elseif SUM([Achievement (copy)]) &gt;= 0.5 * [Parameters].[New Quota] then &quot;50-75%&quot;&#13;&#10;else &quot;Below 50%&quot; end' />
            </column>
            <column datatype='integer' default-format='C1033%' name='[Base (Variable)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Parameters].[Base Salary]' />
            </column>
            <column caption='% of quota achieved' datatype='real' default-format='p0%' name='[Calculation_0440925131659539]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='AVG([Achievement (copy)])/[Parameters].[New Quota]' scope-isolation='false' />
            </column>
            <column caption='Rank over 3' datatype='real' name='[Calculation_4120925132203686]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='ROUND(INDEX() / 3 - 0.6,0) + 1'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Sort by field' datatype='real' name='[Calculation_8140925133029303]' role='measure' type='ordinal'>
              <calculation class='tableau' formula='if [Parameters].[Parameter 1 1]=&quot;Names&quot; then 0&#13;&#10;elseif [Parameters].[Parameter 1 1]=&quot;% quota descending&quot; then -[Calculation_0440925131659539]&#13;&#10;else [Calculation_0440925131659539] end' />
            </column>
            <column datatype='real' default-format='C1033%' name='[Commission (Variable)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([Parameters].[Commission Rate]*[Sales])/100' scope-isolation='false' />
            </column>
            <column datatype='real' default-format='C1033%' name='[OTE (Variable)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Parameters].[Base Salary] + ([Parameters].[Commission Rate]*[Parameters].[New Quota])/100' />
            </column>
            <column datatype='string' name='[Sales Person]' role='dimension' type='nominal' />
            <column datatype='real' default-format='n#,##0;-#,##0' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='real' default-format='C1033%' name='[Total Compensation]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='MIN([Base (Variable)]) + SUM([Commission (Variable)])' />
            </column>
            <column-instance column='[OTE (Variable)]' derivation='Max' name='[max:OTE (Variable):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Base (Variable)]' derivation='Min' name='[min:Base (Variable):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sales Person]' derivation='None' name='[none:Sales Person:nk]' pivot='key' type='nominal' />
            <column-instance column='[Achievement (copy)]' derivation='Sum' name='[sum:Achievement (copy):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Base (Variable)]' derivation='Sum' name='[sum:Base (Variable):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Commission (Variable)]' derivation='Sum' name='[sum:Commission (Variable):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Achievement (variable) (copy)]' derivation='User' name='[usr:Achievement (variable) (copy):nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_4120925132203686]' derivation='User' name='[usr:Calculation_4120925132203686:ok]' pivot='key' type='ordinal'>
              <table-calc ordering-type='Columns' />
            </column-instance>
            <column-instance column='[Calculation_8140925133029303]' derivation='User' name='[usr:Calculation_8140925133029303:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Total Compensation]' derivation='User' name='[usr:Total Compensation:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[Sales Planning new].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[Sales Planning new].[sum:Commission (Variable):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[Sales Planning new].[min:Base (Variable):qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[Sales Planning new].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[Sales Planning new].[sum:Commission (Variable):qk]&quot;</bucket>
              <bucket>&quot;[Sales Planning new].[sum:Base (Variable):qk]&quot;</bucket>
            </dictionary>
          </sort>
          <sort class='computed' column='[Sales Planning new].[none:Sales Person:nk]' direction='ASC' using='[Sales Planning new].[usr:Calculation_8140925133029303:ok]' />
          <sort class='manual' column='[Sales Planning new].[usr:Achievement (variable) (copy):nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Below 50\%&quot;</bucket>
              <bucket>&quot;50-75\%&quot;</bucket>
              <bucket>&quot;75-100\%&quot;</bucket>
              <bucket>&quot;100\% +&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <slices>
            <column>[Sales Planning new].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[Sales Planning new].[Multiple Values]' scope='cols' value='Compensation ($)' />
            <format attr='subtitle' class='0' field='[Sales Planning new].[Multiple Values]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[Sales Planning new].[Multiple Values]' scope='cols' value='true' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[Sales Planning new].[none:Sales Person:nk]' value='136' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[Sales Planning new].[usr:Calculation_4120925132203686:ok]' value='false' />
            <format attr='text-format' field='[Sales Planning new].[sum:Achievement (copy):qk]' value='n#,##0,K;-#,##0,K' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-color' id='refline2' value='#acacac' />
            <format attr='color' id='refline2' value='#000000' />
            <format attr='color' id='refline3' value='#000000' />
            <format attr='stroke-color' id='refline4' value='#acacac' />
            <format attr='color' id='refline4' value='#000000' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='background-color' value='#ffffff' />
            <format attr='col-width' field='[Sales Planning new].[:Measure Names]' value='240' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[Sales Planning new].[:Measure Names]' value=''>
              <formatted-text />
            </format>
          </style-rule>
        </style>
        <panes>
          <pane id='3'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[Sales Planning new].[:Measure Names]' />
              <lod column='[Sales Planning new].[sum:Achievement (copy):qk]' />
              <lod column='[Sales Planning new].[usr:Total Compensation:qk]' />
              <lod column='[Sales Planning new].[max:OTE (Variable):qk]' />
              <lod column='[Sales Planning new].[usr:Total Compensation:qk]' />
              <lod column='[Sales Planning new].[usr:Achievement (variable) (copy):nk]' />
            </encodings>
            <reference-line axis-column='[Sales Planning new].[Multiple Values]' enable-instant-analytics='false' formula='max' id='refline2' label='OTE &lt;Value&gt;' label-type='custom' scope='per-table' value-column='[Sales Planning new].[max:OTE (Variable):qk]' z-order='1' />
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#d3872a' fontname='Tableau Bold' fontsize='11'>&lt;[Sales Planning new].[none:Sales Person:nk]&gt;</run>
                <run fontcolor='#666666' fontname='Tableau Medium' fontsize='9'>&#10;&lt;[Sales Planning new].[usr:Achievement (variable) (copy):nk]&gt; Quota Achieved</run>
                <run fontcolor='#000000' fontsize='9'>Æ </run>
                <run fontcolor='#666666' fontsize='9'>&#10;Total Sales: </run>
                <run fontcolor='#000000' fontsize='9'>Æ        </run>
                <run fontcolor='#000000' fontname='Tableau Semibold' fontsize='9'>&lt;[Sales Planning new].[sum:Achievement (copy):qk]&gt;</run>
                <run fontcolor='#555555' fontsize='9'>&#10;Compensation:</run>
                <run fontcolor='#000000' fontsize='9'>Æ </run>
                <run fontcolor='#000000' fontname='Tableau Semibold' fontsize='9'>&lt;[Sales Planning new].[usr:Total Compensation:qk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.2537499666213989' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([Sales Planning new].[usr:Calculation_4120925132203686:ok] / [Sales Planning new].[none:Sales Person:nk])</rows>
        <cols>[Sales Planning new].[Multiple Values]</cols>
      </table>
    </worksheet>
    <worksheet name='CustomerOverview'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sample - Superstore' name='dataengine.42019.618651678240' />
          </datasources>
          <datasource-dependencies datasource='dataengine.42019.618651678240'>
            <column caption='Days to Ship Actual' datatype='integer' name='[Calculation_0831103151444568]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='DATEDIFF(&apos;day&apos;,[Order Date],[Ship Date])' />
            </column>
            <column caption='Days to Ship Scheduled' datatype='integer' name='[Calculation_6861103170623145]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='CASE  [Ship Mode]&#13;&#10;WHEN &quot;Same Day&quot; THEN 0&#13;&#10;WHEN &quot;First Class&quot; THEN 1&#13;&#10;WHEN &quot;Second Class&quot; THEN 3&#13;&#10;WHEN &quot;Standard Class&quot; THEN 6&#13;&#10;END' />
            </column>
            <column caption='Sales per Customer' datatype='real' default-format='C1033%' name='[Calculation_9321103144526191]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='Sum([Sales])/countD([Customer Name])' />
            </column>
            <column caption='Profit Ratio' datatype='real' default-format='p0.0%' name='[Calculation_9921103144103743]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([Profit])/sum([Sales])' />
            </column>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='string' name='[Customer Name]' role='dimension' type='nominal' />
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Quantity]' role='measure' type='quantitative' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Segment]' role='dimension' type='nominal' />
            <column datatype='date' name='[Ship Date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Ship Mode]' role='dimension' type='nominal' />
            <column-instance column='[Customer Name]' derivation='CountD' name='[ctd:Customer Name:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Segment]' derivation='None' name='[none:Segment:nk]' pivot='key' type='nominal' />
            <column-instance column='[Order Date]' derivation='Quarter' name='[qr:Order Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_0831103151444568]' derivation='Sum' name='[sum:Calculation_0831103151444568:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_6861103170623145]' derivation='Sum' name='[sum:Calculation_6861103170623145:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Quantity]' derivation='Sum' name='[sum:Quantity:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_9321103144526191]' derivation='User' name='[usr:Calculation_9321103144526191:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_9921103144103743]' derivation='User' name='[usr:Calculation_9921103144103743:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Order Date]' derivation='Year' name='[yr:Order Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[dataengine.42019.618651678240].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[dataengine.42019.618651678240].[ctd:Customer Name:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[dataengine.42019.618651678240].[sum:Sales:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[dataengine.42019.618651678240].[sum:Quantity:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[dataengine.42019.618651678240].[usr:Calculation_9321103144526191:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[dataengine.42019.618651678240].[sum:Profit:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[dataengine.42019.618651678240].[usr:Calculation_9921103144103743:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[dataengine.42019.618651678240].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[dataengine.42019.618651678240].[sum:Calculation_0831103151444568:qk]&quot;</bucket>
              <bucket>&quot;[dataengine.42019.618651678240].[sum:Calculation_6861103170623145:qk]&quot;</bucket>
              <bucket>&quot;[dataengine.42019.618651678240].[ctd:Customer Name:qk]&quot;</bucket>
              <bucket>&quot;[dataengine.42019.618651678240].[sum:Sales:qk]&quot;</bucket>
              <bucket>&quot;[dataengine.42019.618651678240].[sum:Quantity:qk]&quot;</bucket>
              <bucket>&quot;[dataengine.42019.618651678240].[usr:Calculation_9321103144526191:qk]&quot;</bucket>
              <bucket>&quot;[dataengine.42019.618651678240].[sum:Profit:qk]&quot;</bucket>
              <bucket>&quot;[dataengine.42019.618651678240].[usr:Calculation_9921103144103743:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[dataengine.42019.618651678240].[none:Category:nk]' filter-group='10'>
            <groupfilter function='level-members' level='[none:Category:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[dataengine.42019.618651678240].[none:Region:nk]'>
            <groupfilter function='level-members' level='[none:Region:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <sort class='computed' column='[dataengine.42019.618651678240].[none:Region:nk]' direction='DESC' using='[dataengine.42019.618651678240].[ctd:Customer Name:qk]' />
          <filter class='categorical' column='[dataengine.42019.618651678240].[none:Segment:nk]' filter-group='12'>
            <groupfilter function='level-members' level='[none:Segment:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[dataengine.42019.618651678240].[qr:Order Date:ok]'>
            <groupfilter from='1' function='range' level='[qr:Order Date:ok]' to='4' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[dataengine.42019.618651678240].[yr:Order Date:ok]' filter-group='9'>
            <groupfilter function='level-members' level='[yr:Order Date:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[dataengine.42019.618651678240].[yr:Order Date:ok]</column>
            <column>[dataengine.42019.618651678240].[qr:Order Date:ok]</column>
            <column>[dataengine.42019.618651678240].[none:Segment:nk]</column>
            <column>[dataengine.42019.618651678240].[none:Category:nk]</column>
            <column>[dataengine.42019.618651678240].[:Measure Names]</column>
            <column>[dataengine.42019.618651678240].[none:Region:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='height' field='[dataengine.42019.618651678240].[ctd:Customer Name:qk]' value='22' />
            <format attr='height' field='[dataengine.42019.618651678240].[sum:Profit:qk]' value='22' />
            <format attr='height' field='[dataengine.42019.618651678240].[sum:Quantity:qk]' value='22' />
            <format attr='height' field='[dataengine.42019.618651678240].[sum:Sales:qk]' value='22' />
            <format attr='height' field='[dataengine.42019.618651678240].[usr:Calculation_9321103144526191:qk]' value='22' />
            <format attr='height' field='[dataengine.42019.618651678240].[usr:Calculation_9921103144103743:qk]' value='22' />
            <format attr='display' class='0' field='[dataengine.42019.618651678240].[Multiple Values]' scope='cols' value='false' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='height' field='[dataengine.42019.618651678240].[none:Region:nk]' value='23' />
            <format attr='text-align' value='center' />
            <format attr='text-format' field='[dataengine.42019.618651678240].[sum:Quantity:qk]' value='n#,##0;-#,##0' />
            <format attr='text-format' field='[dataengine.42019.618651678240].[usr:Calculation_9321103144526191:qk]' value='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[dataengine.42019.618651678240].[none:Region:nk]' value='60' />
            <format attr='border-style' data-class='total' scope='cols' value='none' />
            <format attr='border-style' data-class='total' scope='rows' value='none' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-align' field='[dataengine.42019.618651678240].[:Measure Names]' value='left' />
            <format attr='font-size' field='[dataengine.42019.618651678240].[:Measure Names]' value='9' />
            <format attr='font-family' field='[dataengine.42019.618651678240].[:Measure Names]' value='Tableau Regular' />
            <format attr='font-weight' field='[dataengine.42019.618651678240].[:Measure Names]' value='bold' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' center='0.0' field='[dataengine.42019.618651678240].[sum:Profit:qk]' max='200000.0' min='0.0' num-steps='2' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-diverging'>
                <color>#9c0824</color>
                <color>#bd1316</color>
                <color>#d11719</color>
                <color>#df513f</color>
                <color>#fc8375</color>
                <color>#cacaca</color>
                <color>#95aebb</color>
                <color>#6795ac</color>
                <color>#3e7d9d</color>
                <color>#1c688d</color>
                <color>#00557f</color>
              </color-palette>
            </encoding>
            <encoding attr='color' field='[dataengine.42019.618651678240].[usr:Calculation_9921103144103743:qk]' max='0.5' min='-0.5' palette='tableau-orange-blue' type='interpolated' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='border-style' data-class='total' scope='cols' value='none' />
            <format attr='border-style' data-class='total' scope='rows' value='none' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='line-pattern' scope='cols' value='none' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='line-pattern' scope='rows' value='none' />
            <format attr='line-pattern' scope='cols' value='none' />
          </style-rule>
          <style-rule element='header-div'>
            <format attr='line-pattern' scope='cols' value='none' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[dataengine.42019.618651678240].[yr:Order Date:ok]' value='Year' />
            <format attr='background-color' value='#f7f7f7' />
          </style-rule>
        </style>
        <panes>
          <pane id='7'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[dataengine.42019.618651678240].[ctd:Customer Name:qk]' />
              <lod column='[dataengine.42019.618651678240].[sum:Sales:qk]' />
              <lod column='[dataengine.42019.618651678240].[sum:Quantity:qk]' />
              <lod column='[dataengine.42019.618651678240].[usr:Calculation_9321103144526191:qk]' />
              <lod column='[dataengine.42019.618651678240].[sum:Profit:qk]' />
              <lod column='[dataengine.42019.618651678240].[usr:Calculation_9921103144103743:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#d3872a' fontname='Tableau Bold' fontsize='12'>&lt;[dataengine.42019.618651678240].[none:Region:nk]&gt;</run>
                <run fontcolor='#787878' fontsize='9'>&#10;Customers:&#9;</run>
                <run fontname='Tableau Bold' fontsize='9'>&lt;[dataengine.42019.618651678240].[ctd:Customer Name:qk]&gt;</run>
                <run fontcolor='#787878' fontsize='9'>&#10;Sales:&#9;</run>
                <run fontname='Tableau Bold' fontsize='9'>&lt;[dataengine.42019.618651678240].[sum:Sales:qk]&gt;</run>
                <run fontcolor='#787878' fontsize='9'>&#10;Sales/Customer:&#9;</run>
                <run fontname='Tableau Bold' fontsize='9'>&lt;[dataengine.42019.618651678240].[usr:Calculation_9321103144526191:qk]&gt;</run>
                <run fontcolor='#787878' fontsize='9'>&#10;Quantity:&#9;</run>
                <run fontname='Tableau Bold' fontsize='9'>&lt;[dataengine.42019.618651678240].[sum:Quantity:qk]&gt;</run>
                <run fontcolor='#787878' fontsize='9'>&#10;Profit:&#9;</run>
                <run fontname='Tableau Bold' fontsize='9'>&lt;[dataengine.42019.618651678240].[sum:Profit:qk]&gt;</run>
                <run fontcolor='#787878' fontsize='9'>&#10;Profit Ratio:&#9;</run>
                <run fontcolor='#000000' fontname='Tableau Bold' fontsize='9'>&lt;[dataengine.42019.618651678240].[usr:Calculation_9921103144103743:qk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='right' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='size' value='1.5162431001663208' />
                <format attr='mark-color' value='#4a76a1' />
                <format attr='mark-transparency' value='206' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[dataengine.42019.618651678240].[none:Region:nk]</rows>
        <cols>([dataengine.42019.618651678240].[:Measure Names] * [dataengine.42019.618651678240].[Multiple Values])</cols>
      </table>
    </worksheet>
    <worksheet name='CustomerRank'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontsize='14'>Customer Ranking</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sample - Superstore' name='dataengine.42019.618651678240' />
          </datasources>
          <datasource-dependencies datasource='dataengine.42019.618651678240'>
            <column caption='Profit Ratio' datatype='real' default-format='p0.0%' name='[Calculation_9921103144103743]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([Profit])/sum([Sales])' />
            </column>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='string' name='[Customer Name]' role='dimension' type='nominal' />
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Segment]' role='dimension' type='nominal' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Customer Name]' derivation='None' name='[none:Customer Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Segment]' derivation='None' name='[none:Segment:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[rank:sum:Sales:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Columns' rank-options='Competition,Descending' type='Rank' />
            </column-instance>
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_9921103144103743]' derivation='User' name='[usr:Calculation_9921103144103743:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Order Date]' derivation='Year' name='[yr:Order Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[dataengine.42019.618651678240].[Action (Region)]'>
            <groupfilter function='level-members' level='[Region]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[dataengine.42019.618651678240].[none:Category:nk]' filter-group='10'>
            <groupfilter function='level-members' level='[none:Category:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <sort class='computed' column='[dataengine.42019.618651678240].[none:Customer Name:nk]' direction='DESC' using='[dataengine.42019.618651678240].[sum:Sales:qk]' />
          <filter class='categorical' column='[dataengine.42019.618651678240].[none:Region:nk]'>
            <groupfilter function='level-members' level='[none:Region:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[dataengine.42019.618651678240].[none:Segment:nk]' filter-group='12'>
            <groupfilter function='level-members' level='[none:Segment:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[dataengine.42019.618651678240].[yr:Order Date:ok]' filter-group='9'>
            <groupfilter function='level-members' level='[yr:Order Date:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[dataengine.42019.618651678240].[Action (Region)]</column>
            <column>[dataengine.42019.618651678240].[yr:Order Date:ok]</column>
            <column>[dataengine.42019.618651678240].[none:Segment:nk]</column>
            <column>[dataengine.42019.618651678240].[none:Category:nk]</column>
            <column>[dataengine.42019.618651678240].[none:Region:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='tick-color' scope='cols' value='#f0f0f0' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[dataengine.42019.618651678240].[usr:Calculation_9921103144103743:qk]' max='0.5' min='-0.5' palette='red_black_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
            <format attr='vertical-align' id='refline0' value='top' />
            <format attr='stroke-size' id='refline0' value='1' />
            <format attr='text-align' id='refline0' value='center' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='line-pattern' scope='cols' value='solid' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='line-pattern' scope='rows' value='none' />
            <format attr='line-pattern' scope='cols' value='none' />
          </style-rule>
          <style-rule element='title'>
            <format attr='background-color' value='#00000000' />
          </style-rule>
        </style>
        <panes>
          <pane id='2'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[dataengine.42019.618651678240].[usr:Calculation_9921103144103743:qk]' />
              <tooltip column='[dataengine.42019.618651678240].[sum:Profit:qk]' />
              <lod column='[dataengine.42019.618651678240].[rank:sum:Sales:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#d3872a' fontname='Tableau Bold' fontsize='12'>&lt;[dataengine.42019.618651678240].[none:Customer Name:nk]&gt;</run>
                <run fontcolor='#787878' fontsize='9'>&#10;Sales Rank:&#9;</run>
                <run fontcolor='#353535' fontname='Tableau Bold' fontsize='9'>&lt;[dataengine.42019.618651678240].[rank:sum:Sales:qk]&gt;</run>
                <run fontcolor='#787878' fontsize='9'>&#10;Sales:&#9;</run>
                <run fontname='Tableau Bold' fontsize='9'>&lt;[dataengine.42019.618651678240].[sum:Sales:qk]&gt;</run>
                <run fontcolor='#787878' fontsize='9'>&#10;Profit:&#9;</run>
                <run fontname='Tableau Bold' fontsize='9'>&lt;[dataengine.42019.618651678240].[sum:Profit:qk]&gt;</run>
                <run fontcolor='#787878' fontsize='9'>&#10;Profit Ratio:</run>
                <run fontsize='9'>Æ&#9;</run>
                <run fontname='Tableau Bold' fontsize='9'>&lt;[dataengine.42019.618651678240].[usr:Calculation_9921103144103743:qk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[dataengine.42019.618651678240].[none:Customer Name:nk]</rows>
        <cols>[dataengine.42019.618651678240].[sum:Sales:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='CustomerScatter'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontsize='14'>Sales and Profit by Customer</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sample - Superstore' name='dataengine.42019.618651678240' />
          </datasources>
          <datasource-dependencies datasource='dataengine.42019.618651678240'>
            <column caption='Profit Ratio' datatype='real' default-format='p0.0%' name='[Calculation_9921103144103743]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([Profit])/sum([Sales])' />
            </column>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='string' name='[Customer Name]' role='dimension' type='nominal' />
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Segment]' role='dimension' type='nominal' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Customer Name]' derivation='None' name='[none:Customer Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Segment]' derivation='None' name='[none:Segment:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_9921103144103743]' derivation='User' name='[usr:Calculation_9921103144103743:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Order Date]' derivation='Year' name='[yr:Order Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[dataengine.42019.618651678240].[Action (Region)]'>
            <groupfilter function='level-members' level='[Region]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[dataengine.42019.618651678240].[none:Category:nk]' filter-group='10'>
            <groupfilter function='level-members' level='[none:Category:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[dataengine.42019.618651678240].[none:Region:nk]'>
            <groupfilter function='level-members' level='[none:Region:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[dataengine.42019.618651678240].[none:Segment:nk]' filter-group='12'>
            <groupfilter function='level-members' level='[none:Segment:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[dataengine.42019.618651678240].[yr:Order Date:ok]' filter-group='9'>
            <groupfilter function='level-members' level='[yr:Order Date:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[dataengine.42019.618651678240].[Action (Region)]</column>
            <column>[dataengine.42019.618651678240].[yr:Order Date:ok]</column>
            <column>[dataengine.42019.618651678240].[none:Segment:nk]</column>
            <column>[dataengine.42019.618651678240].[none:Category:nk]</column>
            <column>[dataengine.42019.618651678240].[none:Region:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='width' field='[dataengine.42019.618651678240].[sum:Profit:qk]' value='84' />
            <format attr='tick-color' scope='cols' value='#f0f0f0' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[dataengine.42019.618651678240].[sum:Profit:qk]' num-steps='2' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-diverging'>
                <color>#9c0824</color>
                <color>#bd1316</color>
                <color>#d11719</color>
                <color>#df513f</color>
                <color>#fc8375</color>
                <color>#cacaca</color>
                <color>#95aebb</color>
                <color>#6795ac</color>
                <color>#3e7d9d</color>
                <color>#1c688d</color>
                <color>#00557f</color>
              </color-palette>
            </encoding>
            <encoding attr='color' field='[dataengine.42019.618651678240].[usr:Calculation_9921103144103743:qk]' max='0.5' min='-0.5' palette='red_black_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='border-style' data-class='total' scope='rows' value='none' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-size' value='1' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='line-pattern' value='dotted' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='line-pattern' scope='rows' value='none' />
            <format attr='line-pattern' scope='cols' value='none' />
          </style-rule>
          <style-rule element='title'>
            <format attr='background-color' value='#00000000' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[dataengine.42019.618651678240].[usr:Calculation_9921103144103743:qk]' />
              <lod column='[dataengine.42019.618651678240].[none:Customer Name:nk]' />
              <lod column='[dataengine.42019.618651678240].[none:Region:nk]' />
              <lod column='[dataengine.42019.618651678240].[usr:Calculation_9921103144103743:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#d3872a' fontname='Tableau Bold' fontsize='12'>&lt;[dataengine.42019.618651678240].[none:Customer Name:nk]&gt;</run>
                <run fontcolor='#787878' fontsize='9'>&#10;Sales:&#9;</run>
                <run fontname='Tableau Bold' fontsize='9'>&lt;[dataengine.42019.618651678240].[sum:Sales:qk]&gt;</run>
                <run fontcolor='#787878' fontsize='9'>&#10;Profit:&#9;</run>
                <run fontname='Tableau Bold' fontsize='9'>&lt;[dataengine.42019.618651678240].[sum:Profit:qk]&gt;</run>
                <run fontcolor='#787878' fontsize='9'>&#10;Profit Ratio:</run>
                <run fontsize='9'>Æ&#9;</run>
                <run fontname='Tableau Bold' fontsize='9'>&lt;[dataengine.42019.618651678240].[usr:Calculation_9921103144103743:qk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='shape' value=':filled/circle' />
                <format attr='size' value='1.1534254550933838' />
                <format attr='mark-transparency' value='198' />
              </style-rule>
              <style-rule element='trendline'>
                <format attr='stroke-size' value='1' />
                <format attr='line-pattern' value='dashed' />
                <format attr='stroke-color' value='#c0c0c0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[dataengine.42019.618651678240].[sum:Profit:qk]</rows>
        <cols>[dataengine.42019.618651678240].[sum:Sales:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='DaystoShip'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Days to Ship by Product for </run>
            <run>&lt;</run>
            <run>[dataengine.42019.618651678240].[qr:Order Date:ok]</run>
            <run>&gt;</run>
            <run> of </run>
            <run>&lt;</run>
            <run>[dataengine.42019.618651678240].[yr:Order Date:ok]</run>
            <run>&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sample - Superstore' name='dataengine.42019.618651678240' />
          </datasources>
          <datasource-dependencies datasource='dataengine.42019.618651678240'>
            <column caption='Days to Ship Actual' datatype='integer' name='[Calculation_0831103151444568]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='DATEDIFF(&apos;day&apos;,[Order Date],[Ship Date])' />
            </column>
            <column caption='Ship Status' datatype='string' name='[Calculation_6401103171259723]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if [Calculation_0831103151444568]&gt; [Calculation_6861103170623145] then &quot;Shipped Late&quot; &#13;&#10;elseIF [Calculation_0831103151444568]= [Calculation_6861103170623145] then &quot;Shipped On Time&quot;&#13;&#10;Else &quot;Shipped Early&quot; end' />
              <desc>
                <formatted-text>
                  <run>Was shipment early, ontime or late based on ship mode</run>
                </formatted-text>
              </desc>
            </column>
            <column caption='Days to Ship Scheduled' datatype='integer' name='[Calculation_6861103170623145]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='CASE  [Ship Mode]&#13;&#10;WHEN &quot;Same Day&quot; THEN 0&#13;&#10;WHEN &quot;First Class&quot; THEN 1&#13;&#10;WHEN &quot;Second Class&quot; THEN 3&#13;&#10;WHEN &quot;Standard Class&quot; THEN 6&#13;&#10;END' />
            </column>
            <column datatype='string' name='[Customer Name]' role='dimension' type='nominal' />
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Order ID]' role='dimension' type='nominal' />
            <column datatype='string' name='[Product Name]' role='dimension' type='nominal' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='date' name='[Ship Date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Ship Mode]' role='dimension' type='nominal' />
            <column-instance column='[Order Date]' derivation='Min' name='[min:Order Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_6401103171259723]' derivation='None' name='[none:Calculation_6401103171259723:nk]' pivot='key' type='nominal' />
            <column-instance column='[Customer Name]' derivation='None' name='[none:Customer Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Order Date]' derivation='None' name='[none:Order Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Order ID]' derivation='None' name='[none:Order ID:nk]' pivot='key' type='nominal' />
            <column-instance column='[Product Name]' derivation='None' name='[none:Product Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Ship Mode]' derivation='None' name='[none:Ship Mode:nk]' pivot='key' type='nominal' />
            <column-instance column='[Order Date]' derivation='Quarter' name='[qr:Order Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_0831103151444568]' derivation='Sum' name='[sum:Calculation_0831103151444568:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Order Date]' derivation='Week-Trunc' name='[twk:Order Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Order Date]' derivation='Year' name='[yr:Order Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[dataengine.42019.618651678240].[Action (Delayed?)]'>
            <groupfilter function='level-members' level='[Calculation_6401103171259723]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[dataengine.42019.618651678240].[Action (Ship Status)]'>
            <groupfilter function='level-members' level='[Calculation_6401103171259723]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[dataengine.42019.618651678240].[Action (Ship Status,YEAR(Order Date),WEEK(Order Date))]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_6401103171259723]' />
              <groupfilter function='level-members' level='[yr:Order Date:ok]' />
              <groupfilter function='level-members' level='[twk:Order Date:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[dataengine.42019.618651678240].[none:Calculation_6401103171259723:nk]' filter-group='5'>
            <groupfilter function='level-members' level='[none:Calculation_6401103171259723:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <sort class='computed' column='[dataengine.42019.618651678240].[none:Customer Name:nk]' direction='ASC' using='[dataengine.42019.618651678240].[min:Order Date:qk]' />
          <sort class='computed' column='[dataengine.42019.618651678240].[none:Product Name:nk]' direction='DESC' using='[dataengine.42019.618651678240].[sum:Calculation_0831103151444568:qk]' />
          <filter class='categorical' column='[dataengine.42019.618651678240].[none:Region:nk]' filter-group='7'>
            <groupfilter function='level-members' level='[none:Region:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[dataengine.42019.618651678240].[none:Ship Mode:nk]' filter-group='11'>
            <groupfilter function='level-members' level='[none:Ship Mode:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[dataengine.42019.618651678240].[qr:Order Date:ok]' filter-group='3'>
            <groupfilter function='level-members' level='[qr:Order Date:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[dataengine.42019.618651678240].[yr:Order Date:ok]' filter-group='18'>
            <groupfilter function='member' level='[yr:Order Date:ok]' member='2012' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[dataengine.42019.618651678240].[none:Calculation_6401103171259723:nk]</column>
            <column>[dataengine.42019.618651678240].[yr:Order Date:ok]</column>
            <column>[dataengine.42019.618651678240].[qr:Order Date:ok]</column>
            <column>[dataengine.42019.618651678240].[none:Ship Mode:nk]</column>
            <column>[dataengine.42019.618651678240].[Action (Delayed?)]</column>
            <column>[dataengine.42019.618651678240].[Action (Ship Status)]</column>
            <column>[dataengine.42019.618651678240].[Action (Ship Status,YEAR(Order Date),WEEK(Order Date))]</column>
            <column>[dataengine.42019.618651678240].[none:Region:nk]</column>
          </slices>
          <aggregation value='false' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[dataengine.42019.618651678240].[none:Order Date:qk]' scope='cols' value='' />
            <format attr='subtitle' class='0' field='[dataengine.42019.618651678240].[none:Order Date:qk]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[dataengine.42019.618651678240].[none:Order Date:qk]' scope='cols' value='true' />
            <encoding attr='space' class='0' field='[dataengine.42019.618651678240].[none:Order Date:qk]' field-type='quantitative' major-origin='#2014-09-28#' major-spacing='1.0' major-units='weeks' scope='cols' type='space' />
            <format attr='height' field='[dataengine.42019.618651678240].[none:Order Date:qk]' value='37' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[dataengine.42019.618651678240].[none:Product Name:nk]' value='300' />
            <format attr='width' field='[dataengine.42019.618651678240].[none:Customer Name:nk]' value='116' />
            <format attr='width' field='[dataengine.42019.618651678240].[none:Order ID:nk]' value='108' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='line-pattern' value='solid' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='line-pattern' scope='rows' value='none' />
          </style-rule>
          <style-rule element='title'>
            <format attr='background-color' value='#00000000' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[dataengine.42019.618651678240].[none:Calculation_6401103171259723:nk]' />
              <size column='[dataengine.42019.618651678240].[sum:Calculation_0831103151444568:qk]' />
              <lod column='[dataengine.42019.618651678240].[none:Order ID:nk]' />
              <lod column='[dataengine.42019.618651678240].[none:Customer Name:nk]' />
              <lod column='[dataengine.42019.618651678240].[none:Ship Mode:nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#666666' fontname='Tableau Bold' fontsize='11'>&lt;[dataengine.42019.618651678240].[none:Ship Mode:nk]&gt;</run>
                <run bold='true' fontcolor='#898989' fontname='Tableau Medium' fontsize='11'>Æ </run>
                <run bold='true' fontcolor='#686868' fontname='Tableau Medium' fontsize='11'>- </run>
                <run fontcolor='#d3872a' fontname='Tableau Bold' fontsize='11'>&lt;[dataengine.42019.618651678240].[none:Calculation_6401103171259723:nk]&gt;</run>
                <run fontcolor='#666666' fontname='Tableau Medium' fontsize='11'>&#10;&lt;[dataengine.42019.618651678240].[sum:Calculation_0831103151444568:qk]&gt; days to ship</run>
                <run fontcolor='#787878' fontsize='9'>&#10;Product Name:&#9;</run>
                <run fontname='Tableau Medium' fontsize='9'>&lt;[dataengine.42019.618651678240].[none:Product Name:nk]&gt;</run>
                <run fontcolor='#787878' fontsize='9'>&#10;Customer Name:&#9;</run>
                <run fontname='Tableau Medium' fontsize='9'>&lt;[dataengine.42019.618651678240].[none:Customer Name:nk]&gt;</run>
                <run fontcolor='#787878' fontsize='9'>&#10;Order Date:&#9;</run>
                <run fontname='Tableau Medium' fontsize='9'>&lt;[dataengine.42019.618651678240].[none:Order Date:qk]&gt;</run>
                <run fontcolor='#787878' fontsize='9'>&#10;Order ID:&#9;</run>
                <run fontname='Tableau Medium' fontsize='9'>&lt;[dataengine.42019.618651678240].[none:Order ID:nk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-transparency' value='206' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[dataengine.42019.618651678240].[none:Product Name:nk]</rows>
        <cols>[dataengine.42019.618651678240].[none:Order Date:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Forecast'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Sales Forecast</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sample - Superstore' name='dataengine.42019.618651678240' />
          </datasources>
          <datasource-dependencies datasource='dataengine.42019.618651678240'>
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Segment]' role='dimension' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' forecast-column-base='[sum:Sales:qk]' forecast-column-type='forecast-value' name='[fVal:sum:Sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Segment]' derivation='None' name='[none:Segment:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Order Date]' derivation='Month-Trunc' name='[tmn:Order Date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[dataengine.42019.618651678240].[none:Region:nk]'>
            <groupfilter function='level-members' level='[none:Region:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[dataengine.42019.618651678240].[none:Region:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[dataengine.42019.618651678240].[fVal:sum:Sales:qk]' scope='rows' value='' />
            <format attr='subtitle' class='0' field='[dataengine.42019.618651678240].[fVal:sum:Sales:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[dataengine.42019.618651678240].[fVal:sum:Sales:qk]' scope='rows' value='true' />
            <format attr='title' class='0' field='[dataengine.42019.618651678240].[tmn:Order Date:qk]' scope='cols' value='Order Date' />
            <format attr='subtitle' class='0' field='[dataengine.42019.618651678240].[tmn:Order Date:qk]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[dataengine.42019.618651678240].[tmn:Order Date:qk]' scope='cols' value='true' />
            <format attr='height' field='[dataengine.42019.618651678240].[tmn:Order Date:qk]' value='43' />
            <format attr='width' field='[dataengine.42019.618651678240].[fVal:sum:Sales:qk]' value='76' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[dataengine.42019.618651678240].[none:Segment:nk]' value='28' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[dataengine.42019.618651678240].[none:Segment:nk]' value='true' />
            <format attr='text-orientation' field='[dataengine.42019.618651678240].[none:Segment:nk]' value='-90' />
            <format attr='font-size' field='[dataengine.42019.618651678240].[none:Segment:nk]' value='10' />
            <format attr='text-orientation' field='[dataengine.42019.618651678240].[tmn:Order Date:qk]' value='0' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='line-pattern' scope='cols' value='none' />
            <format attr='line-pattern' scope='rows' value='none' />
          </style-rule>
          <style-rule element='axis-title'>
            <format attr='font-size' field='[dataengine.42019.618651678240].[tmn:Order Date:qk]' value='10' />
          </style-rule>
        </style>
        <panes>
          <pane id='2'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[dataengine.42019.618651678240].[none:Segment:nk]' />
              <color column='[dataengine.42019.618651678240].[none:Forecast Indicator:nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#d3872a' fontname='Tableau Bold' fontsize='12'>&lt;[dataengine.42019.618651678240].[none:Forecast Indicator:nk]&gt; Sales</run>
                <run fontcolor='#555555' fontname='Tableau Medium'>&#10;&lt;[dataengine.42019.618651678240].[none:Segment:nk]&gt;, &lt;[dataengine.42019.618651678240].[tmn:Order Date:qk]&gt;&#10;Sales:</run>
                <run fontcolor='#555555'>Æ </run>
                <run fontname='Tableau Bold'>&lt;[dataengine.42019.618651678240].[fVal:sum:Sales:qk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='pane'>
                <format attr='minheight' value='244' />
                <format attr='maxheight' value='244' />
                <format attr='minwidth' value='1483' />
                <format attr='maxwidth' value='1483' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([dataengine.42019.618651678240].[none:Segment:nk] * [dataengine.42019.618651678240].[fVal:sum:Sales:qk])</rows>
        <cols>[dataengine.42019.618651678240].[tmn:Order Date:qk]</cols>
        <forecast-specification auto-forecast-agg='true' band-confidence-level='95.000000' enabled='true' fill-type='fill-zero' ignore-last='1' model-type='auto-season' range-type='auto' show-prediction-bands='true' />
      </table>
    </worksheet>
    <worksheet name='OTE'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='0' fontcolor='#906800'>Estimated Compensation:</run>
            <run bold='true' fontalignment='0'>Æ&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sales Commission' name='Sales Planning new' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Base Salary' datatype='integer' name='[Base Salary]' param-domain-type='any' role='measure' type='quantitative' value='50000'>
              <calculation class='tableau' formula='50000' />
            </column>
            <column caption='Commission Rate' datatype='real' default-format='n#,##0.0&quot;%&quot;;-#,##0.0&quot;%&quot;' name='[Commission Rate]' param-domain-type='range' role='measure' type='quantitative' value='18.400000000000002'>
              <calculation class='tableau' formula='18.400000000000002' />
              <range granularity='0.10000000000000001' max='100.0' min='1.0' />
            </column>
            <column caption='New Quota' datatype='integer' default-format='c&quot;$&quot;#,##0,K;(&quot;$&quot;#,##0,K)' name='[New Quota]' param-domain-type='range' role='measure' type='quantitative' value='500000'>
              <calculation class='tableau' formula='500000' />
              <range granularity='25000' min='100000' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='Sales Planning new'>
            <column datatype='real' default-format='C1033%' name='[OTE (Variable)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Parameters].[Base Salary] + ([Parameters].[Commission Rate]*[Parameters].[New Quota])/100' />
            </column>
            <column-instance column='[OTE (Variable)]' derivation='Avg' name='[avg:OTE (Variable):qk]' pivot='key' type='quantitative' />
            <column-instance column='[OTE (Variable)]' derivation='Sum' name='[sum:OTE (Variable):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[Sales Planning new].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[Sales Planning new].[sum:OTE (Variable):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[Sales Planning new].[avg:OTE (Variable):qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[Sales Planning new].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[Sales Planning new].[sum:OTE (Variable):qk]&quot;</bucket>
              <bucket>&quot;[Sales Planning new].[avg:OTE (Variable):qk]&quot;</bucket>
            </dictionary>
          </sort>
          <slices>
            <column>[Sales Planning new].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' value='173' />
            <format attr='font-weight' field='[Sales Planning new].[sum:OTE (Variable):qk]' value='bold' />
            <format attr='font-size' field='[Sales Planning new].[sum:OTE (Variable):qk]' value='16' />
            <format attr='text-format' field='[Sales Planning new].[sum:OTE (Variable):qk]' value='c&quot;$&quot;#,##0,,.00M;(&quot;$&quot;#,##0,,.00M)' />
            <format attr='font-weight' field='[Sales Planning new].[avg:OTE (Variable):qk]' value='bold' />
            <format attr='font-size' field='[Sales Planning new].[avg:OTE (Variable):qk]' value='16' />
            <format attr='text-format' field='[Sales Planning new].[Multiple Values]' value='c&quot;$&quot;#,##0.00;(&quot;$&quot;#,##0.00)' />
            <format attr='text-format' field='[Sales Planning new].[avg:OTE (Variable):qk]' value='c&quot;$&quot;#,##0,K;(&quot;$&quot;#,##0,K)' />
            <format attr='font-weight' field='[Sales Planning new].[Multiple Values]' value='bold' />
            <format attr='font-size' field='[Sales Planning new].[Multiple Values]' value='16' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[Sales Planning new].[:Measure Names]' value='260' />
            <format attr='band-color' scope='rows' value='#00000000' />
            <format attr='height-header' value='12' />
          </style-rule>
          <style-rule element='label'>
            <format attr='color' field='[Sales Planning new].[:Measure Names]' value='#cc721e' />
            <format attr='font-weight' field='[Sales Planning new].[:Measure Names]' value='bold' />
            <format attr='font-size' field='[Sales Planning new].[:Measure Names]' value='12' />
            <format attr='text-align' field='[Sales Planning new].[:Measure Names]' value='right' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='band-color' scope='rows' value='#00000000' />
          </style-rule>
          <style-rule element='table'>
            <format attr='omit-on-special' value='false' />
            <format attr='break-on-special' value='false' />
            <format attr='show-null-value-warning' value='false' />
            <format attr='band-size' scope='rows' value='1' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='line-pattern' scope='rows' value='none' />
            <format attr='line-pattern' scope='cols' value='none' />
          </style-rule>
          <style-rule element='title'>
            <format attr='background-color' value='#ffffff' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[Sales Planning new].[Multiple Values]' />
            </encodings>
            <customized-tooltip>
              <formatted-text />
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[Sales Planning new].[:Measure Names]</rows>
        <cols />
      </table>
    </worksheet>
    <worksheet name='Performance'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontsize='16'>Sales Performance vs Target</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sample - Superstore' name='dataengine.42019.618651678240' />
            <datasource caption='Sales Target' name='dataengine.42019.622799629629' />
          </datasources>
          <datasource-dependencies datasource='dataengine.42019.618651678240'>
            <column caption='SUM([Sales])-SUM([Sales Target].[Sales Target])' datatype='real' name='[Calculation_5144658905056067585]' role='measure' type='quantitative' user:unnamed='Performance'>
              <calculation class='tableau' formula='SUM([Sales])-SUM([dataengine.42019.622799629629].[Sales Target])' />
            </column>
            <column caption='Sales above Target?' datatype='string' name='[Calculation_9951107165644870]' role='measure' type='nominal'>
              <calculation class='tableau' formula='If Sum([Sales])&gt;SUM([dataengine.42019.622799629629].[Sales Target]) then &quot;Above Target&quot; else &quot;Below Target&quot; end' />
              <desc>
                <formatted-text>
                  <run>Used with &quot;Sales Target&quot; data source</run>
                </formatted-text>
              </desc>
            </column>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Segment]' role='dimension' type='nominal' />
            <column-instance column='[Order Date]' derivation='Month' name='[mn:Order Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Segment]' derivation='None' name='[none:Segment:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_5144658905056067585]' derivation='User' name='[usr:Calculation_5144658905056067585:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_9951107165644870]' derivation='User' name='[usr:Calculation_9951107165644870:nk]' pivot='key' type='nominal' />
            <column-instance column='[Order Date]' derivation='Year' name='[yr:Order Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <datasource-dependencies datasource='dataengine.42019.622799629629'>
            <column datatype='integer' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Sales Target]' role='measure' type='quantitative' />
            <column-instance column='[Sales Target]' derivation='Sum' name='[sum:Sales Target:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[dataengine.42019.618651678240].[none:Region:nk]'>
            <groupfilter function='level-members' level='[none:Region:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[dataengine.42019.618651678240].[yr:Order Date:ok]'>
            <groupfilter function='member' level='[yr:Order Date:ok]' member='2015' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[dataengine.42019.618651678240].[yr:Order Date:ok]</column>
            <column>[dataengine.42019.618651678240].[none:Region:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[dataengine.42019.618651678240].[sum:Sales:qk]' scope='cols' value='' />
            <format attr='subtitle' class='0' field='[dataengine.42019.618651678240].[sum:Sales:qk]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[dataengine.42019.618651678240].[sum:Sales:qk]' scope='cols' value='true' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[dataengine.42019.618651678240].[none:Category:nk]' value='20' />
            <format attr='width' field='[dataengine.42019.618651678240].[none:Segment:nk]' value='96' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[dataengine.42019.618651678240].[yr:Order Date:ok]' value='false' />
            <format attr='font-size' field='[dataengine.42019.618651678240].[mn:Order Date:ok]' value='9' />
            <format attr='font-size' field='[dataengine.42019.618651678240].[none:Category:nk]' value='9' />
          </style-rule>
          <style-rule element='table'>
            <format attr='band-level' scope='rows' value='0' />
            <format attr='band-size' scope='rows' value='3' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-color' id='refline0' value='#000000' />
          </style-rule>
          <style-rule element='refband'>
            <format attr='reverse-palette' id='refline1' value='false' />
            <format attr='palette' id='refline1' value='gray80' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='line-pattern' scope='cols' value='none' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='line-pattern' scope='rows' value='none' />
            <format attr='div-level' scope='cols' value='0' />
            <format attr='line-pattern' scope='cols' value='none' />
            <format attr='div-level' scope='rows' value='0' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[dataengine.42019.618651678240].[usr:Calculation_9951107165644870:nk]' value='Sales above Budget?' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[dataengine.42019.618651678240].[yr:Order Date:ok]' value='Year' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[dataengine.42019.618651678240].[usr:Calculation_9951107165644870:nk]' />
              <lod column='[dataengine.42019.622799629629].[sum:Sales Target:qk]' />
              <lod column='[dataengine.42019.618651678240].[usr:Calculation_5144658905056067585:qk]' />
            </encodings>
            <reference-line axis-column='[dataengine.42019.618651678240].[sum:Sales:qk]' enable-instant-analytics='true' formula='average' id='refline0' label-type='none' probability='95' scope='per-cell' value-column='[dataengine.42019.622799629629].[sum:Sales Target:qk]' z-order='2' />
            <reference-line axis-column='[dataengine.42019.618651678240].[sum:Sales:qk]' enable-instant-analytics='true' fill-above='false' fill-below='true' formula='average' id='refline1' label-type='none' percentage-bands='true' probability='95' scope='per-cell' symmetric='false' value-column='[dataengine.42019.622799629629].[sum:Sales Target:qk]' z-order='1'>
              <reference-line-value percentage='80' />
            </reference-line>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#d3872a' fontname='Tableau Semibold' fontsize='12'>&lt;[dataengine.42019.618651678240].[usr:Calculation_9951107165644870:nk]&gt;</run>
                <run bold='true' fontcolor='#d3872a' fontname='Tableau Semibold' fontsize='12'> - </run>
                <run fontcolor='#d3872a' fontname='Tableau Semibold' fontsize='12'>&lt;[dataengine.42019.618651678240].[none:Segment:nk]&gt;</run>
                <run bold='true' fontcolor='#d3872a' fontname='Tableau Semibold' fontsize='12'>Æ </run>
                <run fontcolor='#d3872a' fontname='Tableau Semibold' fontsize='12'>&lt;[dataengine.42019.618651678240].[none:Category:nk]&gt;</run>
                <run fontcolor='#666666' fontname='Tableau Medium'>&#10;&lt;[dataengine.42019.618651678240].[mn:Order Date:ok]&gt;</run>
                <run bold='true' fontcolor='#666666' fontname='Tableau Medium'>Æ </run>
                <run fontcolor='#666666' fontname='Tableau Medium'>&lt;[dataengine.42019.618651678240].[yr:Order Date:ok]&gt;</run>
                <run fontcolor='#787878' fontsize='9'>&#10;Sales:&#9;</run>
                <run fontname='Tableau Bold' fontsize='9'>&lt;[dataengine.42019.618651678240].[sum:Sales:qk]&gt;</run>
                <run fontcolor='#787878' fontsize='9'>&#10;Sales Target:&#9;</run>
                <run fontname='Tableau Bold' fontsize='9'>&lt;[dataengine.42019.622799629629].[sum:Sales Target:qk]&gt;</run>
                <run fontcolor='#898989' fontsize='9'>&#10;Difference:</run>
                <run bold='true' fontsize='9'>Æ&#9;</run>
                <run fontname='Tableau Bold' fontsize='9'>$&lt;[dataengine.42019.618651678240].[usr:Calculation_5144658905056067585:qk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1' />
                <format attr='mark-transparency' value='255' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([dataengine.42019.618651678240].[yr:Order Date:ok] / ([dataengine.42019.618651678240].[mn:Order Date:ok] / [dataengine.42019.618651678240].[none:Segment:nk]))</rows>
        <cols>([dataengine.42019.618651678240].[none:Category:nk] * [dataengine.42019.618651678240].[sum:Sales:qk])</cols>
      </table>
    </worksheet>
    <worksheet name='ProductDetailSheet'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sample - Superstore' name='dataengine.42019.618651678240' />
          </datasources>
          <datasource-dependencies datasource='dataengine.42019.618651678240'>
            <column caption='Days to Ship Actual' datatype='integer' name='[Calculation_0831103151444568]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='DATEDIFF(&apos;day&apos;,[Order Date],[Ship Date])' />
            </column>
            <column caption='Days to Ship Scheduled' datatype='integer' name='[Calculation_6861103170623145]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='CASE  [Ship Mode]&#13;&#10;WHEN &quot;Same Day&quot; THEN 0&#13;&#10;WHEN &quot;First Class&quot; THEN 1&#13;&#10;WHEN &quot;Second Class&quot; THEN 3&#13;&#10;WHEN &quot;Standard Class&quot; THEN 6&#13;&#10;END' />
            </column>
            <column caption='Order Profitable?' datatype='boolean' name='[Calculation_9060122104947471]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='{fixed [Order ID]:sum([Profit])}&gt;0&#13;&#10;// calculates the profit at the order level' />
              <aliases>
                <alias key='false' value='Unprofitable' />
                <alias key='true' value='Profitable' />
              </aliases>
              <desc>
                <formatted-text>
                  <run>A level of detail expression that calculates profitability for each Order</run>
                </formatted-text>
              </desc>
            </column>
            <column caption='Profit Ratio' datatype='real' default-format='p0.0%' name='[Calculation_9921103144103743]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([Profit])/sum([Sales])' />
            </column>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column datatype='string' name='[Customer Name]' role='dimension' type='nominal' />
            <column datatype='real' default-format='p0.00%' name='[Discount]' role='measure' type='quantitative' />
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Order ID]' role='dimension' type='nominal' />
            <column datatype='integer' default-format='*00000' name='[Postal Code]' role='dimension' semantic-role='[ZipCode].[Name]' type='ordinal' />
            <column datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Quantity]' role='measure' type='quantitative' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Segment]' role='dimension' type='nominal' />
            <column datatype='date' name='[Ship Date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Ship Mode]' role='dimension' type='nominal' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[City]' derivation='None' name='[none:City:nk]' pivot='key' type='nominal' />
            <column-instance column='[Customer Name]' derivation='None' name='[none:Customer Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Order Date]' derivation='None' name='[none:Order Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Order Date]' derivation='None' name='[none:Order Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Order ID]' derivation='None' name='[none:Order ID:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Segment]' derivation='None' name='[none:Segment:nk]' pivot='key' type='nominal' />
            <column-instance column='[Ship Date]' derivation='None' name='[none:Ship Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Ship Mode]' derivation='None' name='[none:Ship Mode:nk]' pivot='key' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_0831103151444568]' derivation='Sum' name='[sum:Calculation_0831103151444568:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_6861103170623145]' derivation='Sum' name='[sum:Calculation_6861103170623145:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Discount]' derivation='Sum' name='[sum:Discount:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Quantity]' derivation='Sum' name='[sum:Quantity:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Order Date]' derivation='Month-Trunc' name='[tmn:Order Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_9921103144103743]' derivation='User' name='[usr:Calculation_9921103144103743:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[dataengine.42019.618651678240].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[dataengine.42019.618651678240].[sum:Sales:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[dataengine.42019.618651678240].[sum:Quantity:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[dataengine.42019.618651678240].[sum:Discount:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[dataengine.42019.618651678240].[sum:Profit:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[dataengine.42019.618651678240].[usr:Calculation_9921103144103743:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[dataengine.42019.618651678240].[sum:Calculation_6861103170623145:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[dataengine.42019.618651678240].[sum:Calculation_0831103151444568:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[dataengine.42019.618651678240].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[dataengine.42019.618651678240].[sum:Sales:qk]&quot;</bucket>
              <bucket>&quot;[dataengine.42019.618651678240].[sum:Quantity:qk]&quot;</bucket>
              <bucket>&quot;[dataengine.42019.618651678240].[sum:Discount:qk]&quot;</bucket>
              <bucket>&quot;[dataengine.42019.618651678240].[sum:Profit:qk]&quot;</bucket>
              <bucket>&quot;[dataengine.42019.618651678240].[usr:Calculation_9921103144103743:qk]&quot;</bucket>
              <bucket>&quot;[dataengine.42019.618651678240].[sum:Calculation_6861103170623145:qk]&quot;</bucket>
              <bucket>&quot;[dataengine.42019.618651678240].[sum:Calculation_0831103151444568:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[dataengine.42019.618651678240].[Action (Order Profitable?,MONTH(Order Date),Segment)]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_9060122104947471]' />
              <groupfilter function='level-members' level='[tmn:Order Date:ok]' />
              <groupfilter function='level-members' level='[Segment]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[dataengine.42019.618651678240].[Action (Postal Code,State) 1]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Postal Code]' />
              <groupfilter function='level-members' level='[State]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[dataengine.42019.618651678240].[none:Category:nk]'>
            <groupfilter function='level-members' level='[none:Category:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[dataengine.42019.618651678240].[none:City:nk]'>
            <groupfilter from='&quot;Aberdeen&quot;' function='range' level='[none:City:nk]' to='&quot;Yuma&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[dataengine.42019.618651678240].[none:Region:nk]'>
            <groupfilter function='level-members' level='[none:Region:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[dataengine.42019.618651678240].[none:Segment:nk]'>
            <groupfilter function='level-members' level='[none:Segment:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[dataengine.42019.618651678240].[none:State:nk]'>
            <groupfilter function='level-members' level='[none:State:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[dataengine.42019.618651678240].[:Measure Names]</column>
            <column>[dataengine.42019.618651678240].[none:Category:nk]</column>
            <column>[dataengine.42019.618651678240].[none:Segment:nk]</column>
            <column>[dataengine.42019.618651678240].[none:Region:nk]</column>
            <column>[dataengine.42019.618651678240].[none:State:nk]</column>
            <column>[dataengine.42019.618651678240].[none:City:nk]</column>
            <column>[dataengine.42019.618651678240].[Action (Order Profitable?,MONTH(Order Date),Segment)]</column>
            <column>[dataengine.42019.618651678240].[Action (Postal Code,State) 1]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[dataengine.42019.618651678240].[sum:Discount:qk]' value='p0%' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[dataengine.42019.618651678240].[none:Order ID:nk]' value='120' />
            <format attr='width' field='[dataengine.42019.618651678240].[none:Ship Mode:nk]' value='116' />
            <format attr='width' field='[dataengine.42019.618651678240].[none:Ship Date:ok]' value='88' />
            <format attr='width' field='[dataengine.42019.618651678240].[none:Order Date:ok]' value='88' />
            <format attr='width' field='[dataengine.42019.618651678240].[none:Customer Name:nk]' value='140' />
          </style-rule>
          <style-rule element='field-labels'>
            <format attr='font-family' value='Tableau Medium' />
            <format attr='font-weight' value='bold' />
          </style-rule>
          <style-rule element='field-labels-decoration'>
            <format attr='font-weight' value='bold' />
          </style-rule>
          <style-rule element='label'>
            <format attr='color' field='[dataengine.42019.618651678240].[:Measure Names]' value='#333333' />
            <format attr='font-family' field='[dataengine.42019.618651678240].[:Measure Names]' value='Tableau Medium' />
            <format attr='font-weight' field='[dataengine.42019.618651678240].[:Measure Names]' value='bold' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[dataengine.42019.618651678240].[Multiple Values]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#d3872a' fontname='Tableau Bold' fontsize='11'>Customer Name:&#9;&lt;[dataengine.42019.618651678240].[none:Customer Name:nk]&gt;</run>
                <run fontcolor='#555555' fontname='Tableau Semibold' fontsize='9'>&#10;&lt;[dataengine.42019.618651678240].[:Measure Names]&gt;</run>
                <run fontcolor='#555555' fontsize='9'>: </run>
                <run fontcolor='#555555' fontname='Tableau Semibold' fontsize='9'>&lt;[dataengine.42019.618651678240].[Multiple Values]&gt;</run>
                <run fontname='Tableau Semibold' fontsize='9'>Æ&#10;</run>
                <run fontcolor='#787878' fontsize='9'>&#10;Order Date:&#9;</run>
                <run fontname='Tableau Semibold' fontsize='9'>&lt;[dataengine.42019.618651678240].[none:Order Date:ok]&gt;</run>
                <run fontcolor='#787878' fontsize='9'>&#10;Order ID:&#9;</run>
                <run fontname='Tableau Semibold' fontsize='9'>&lt;[dataengine.42019.618651678240].[none:Order ID:nk]&gt;</run>
                <run fontcolor='#787878' fontsize='9'>&#10;Ship Date:&#9;</run>
                <run fontname='Tableau Semibold' fontsize='9'>&lt;[dataengine.42019.618651678240].[none:Ship Date:ok]&gt;</run>
                <run fontcolor='#787878' fontsize='9'>&#10;Ship Mode:&#9;</run>
                <run fontname='Tableau Semibold' fontsize='9'>&lt;[dataengine.42019.618651678240].[none:Ship Mode:nk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([dataengine.42019.618651678240].[none:Order ID:nk] / ([dataengine.42019.618651678240].[none:Customer Name:nk] / ([dataengine.42019.618651678240].[none:Order Date:ok] / ([dataengine.42019.618651678240].[none:Ship Date:ok] / [dataengine.42019.618651678240].[none:Ship Mode:nk]))))</rows>
        <cols>[dataengine.42019.618651678240].[:Measure Names]</cols>
      </table>
    </worksheet>
    <worksheet name='ProductDetails'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontsize='15'>Sales and Profit by Product Names</run>
            <run fontsize='9'>&#10;Year: &lt;[dataengine.42019.618651678240].[yr:Order Date:ok]&gt;, Month: &lt;[dataengine.42019.618651678240].[mn:Order Date:ok]&gt;, Product Category: &lt;[dataengine.42019.618651678240].[none:Category:nk]&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sample - Superstore' name='dataengine.42019.618651678240' />
          </datasources>
          <datasource-dependencies datasource='dataengine.42019.618651678240'>
            <column caption='Profit Ratio' datatype='real' default-format='p0.0%' name='[Calculation_9921103144103743]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([Profit])/sum([Sales])' />
            </column>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Product Name]' role='dimension' type='nominal' />
            <column datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Segment]' role='dimension' type='nominal' />
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[Order Date]' derivation='Month' name='[mn:Order Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Product Name]' derivation='None' name='[none:Product Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Segment]' derivation='None' name='[none:Segment:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_9921103144103743]' derivation='User' name='[usr:Calculation_9921103144103743:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Order Date]' derivation='Year' name='[yr:Order Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[dataengine.42019.618651678240].[Action (Category,YEAR(Order Date),MONTH(Order Date))]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Category]' />
              <groupfilter function='level-members' level='[yr:Order Date:ok]' />
              <groupfilter function='level-members' level='[mn:Order Date:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[dataengine.42019.618651678240].[Action (YEAR(Order Date),MONTH(Order Date))]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[yr:Order Date:ok]' />
              <groupfilter function='level-members' level='[mn:Order Date:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[dataengine.42019.618651678240].[Action (YEAR(Order Date),MONTH(Order Date),Product Category)]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[yr:Order Date:ok]' />
              <groupfilter function='level-members' level='[mn:Order Date:ok]' />
              <groupfilter function='level-members' level='[none:Category:nk]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[dataengine.42019.618651678240].[mn:Order Date:ok]'>
            <groupfilter function='level-members' level='[mn:Order Date:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[dataengine.42019.618651678240].[none:Region:nk]' filter-group='4'>
            <groupfilter function='level-members' level='[none:Region:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[dataengine.42019.618651678240].[yr:Order Date:ok]'>
            <groupfilter function='level-members' level='[yr:Order Date:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[dataengine.42019.618651678240].[yr:Order Date:ok]</column>
            <column>[dataengine.42019.618651678240].[mn:Order Date:ok]</column>
            <column>[dataengine.42019.618651678240].[Action (YEAR(Order Date),MONTH(Order Date))]</column>
            <column>[dataengine.42019.618651678240].[Action (YEAR(Order Date),MONTH(Order Date),Product Category)]</column>
            <column>[dataengine.42019.618651678240].[Action (Category,YEAR(Order Date),MONTH(Order Date))]</column>
            <column>[dataengine.42019.618651678240].[none:Region:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='subtitle' class='0' field='[dataengine.42019.618651678240].[sum:Sales:qk]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[dataengine.42019.618651678240].[sum:Sales:qk]' scope='cols' value='true' />
            <format attr='height' field='[dataengine.42019.618651678240].[sum:Sales:qk]' value='45' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='height' field='[dataengine.42019.618651678240].[none:Sub-Category:nk]' value='21' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[dataengine.42019.618651678240].[none:Sub-Category:nk]' value='99' />
            <format attr='width' field='[dataengine.42019.618651678240].[none:Category:nk]' value='131' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[dataengine.42019.618651678240].[mn:Order Date:ok]' value='iLLL' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[dataengine.42019.618651678240].[usr:Calculation_9921103144103743:qk]' max='0.5' min='-0.5' palette='red_black_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline1' value='#00000000' />
            <format attr='fill-below' id='refline1' value='#00000000' />
            <format attr='stroke-size' id='refline1' value='2' />
            <format attr='stroke-color' id='refline1' value='#555555' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='stroke-color' scope='rows' value='#f0f0f0' />
            <format attr='stroke-size' scope='rows' value='2' />
          </style-rule>
          <style-rule element='header-div'>
            <format attr='stroke-size' scope='rows' value='2' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='background-color' value='#f5f5f5' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='background-color' value='#f5f5f5' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[dataengine.42019.618651678240].[usr:Calculation_9921103144103743:qk]' />
              <lod column='[dataengine.42019.618651678240].[none:Product Name:nk]' />
              <lod column='[dataengine.42019.618651678240].[none:Category:nk]' />
              <lod column='[dataengine.42019.618651678240].[sum:Profit:qk]' />
            </encodings>
            <reference-line axis-column='[dataengine.42019.618651678240].[sum:Sales:qk]' enable-instant-analytics='true' formula='median' id='refline1' label-type='none' probability='95' scope='per-cell' value-column='[dataengine.42019.618651678240].[sum:Sales:qk]' z-order='1' />
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#d3872a' fontname='Tableau Regular' fontsize='8'>&lt;[dataengine.42019.618651678240].[none:Segment:nk]&gt; &gt; &lt;[dataengine.42019.618651678240].[none:Category:nk]&gt; &gt; &lt;[dataengine.42019.618651678240].[none:Sub-Category:nk]&gt;</run>
                <run bold='true' fontcolor='#d3872a' fontname='Tableau Regular' fontsize='11'>&#10;&lt;[dataengine.42019.618651678240].[none:Sub-Category:nk]&gt;: &lt;[dataengine.42019.618651678240].[none:Product Name:nk]&gt;</run>
                <run fontcolor='#de934c' fontname='Tableau Bold' fontsize='12'>Æ&#10;</run>
                <run fontcolor='#787878' fontname='Tableau Regular' fontsize='9'>&#10;Sales:</run>
                <run fontcolor='#787878' fontsize='9'>Æ&#9;</run>
                <run fontname='Tableau Bold' fontsize='9'>&lt;[dataengine.42019.618651678240].[sum:Sales:qk]&gt;</run>
                <run fontcolor='#787878' fontname='Tableau Regular' fontsize='9'>&#10;Profit:</run>
                <run fontcolor='#787878' fontsize='9'>Æ&#9;</run>
                <run fontcolor='#1b1b1b' fontname='Tableau Bold' fontsize='9'>&lt;[dataengine.42019.618651678240].[sum:Profit:qk]&gt;</run>
                <run fontcolor='#686868' fontname='Tableau Regular' fontsize='9'>&#10;Profit Ratio:</run>
                <run fontsize='9'>Æ&#9;</run>
                <run fontname='Tableau Bold' fontsize='9'>&lt;[dataengine.42019.618651678240].[usr:Calculation_9921103144103743:qk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.3293370008468628' />
                <format attr='mark-labels-mode' value='range' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-range-min' value='false' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-show' value='false' />
                <format attr='has-stroke' value='false' />
                <format attr='mark-transparency' value='229' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([dataengine.42019.618651678240].[none:Category:nk] / [dataengine.42019.618651678240].[none:Sub-Category:nk])</rows>
        <cols>([dataengine.42019.618651678240].[none:Segment:nk] * [dataengine.42019.618651678240].[sum:Sales:qk])</cols>
      </table>
    </worksheet>
    <worksheet name='ProductView'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontsize='15'>Sales by Product Category</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sample - Superstore' name='dataengine.42019.618651678240' />
          </datasources>
          <datasource-dependencies datasource='dataengine.42019.618651678240'>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Sales]' role='measure' type='quantitative' />
            <column-instance column='[Order Date]' derivation='Month' name='[mn:Order Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Order Date]' derivation='Year' name='[yr:Order Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[dataengine.42019.618651678240].[none:Region:nk]' filter-group='4'>
            <groupfilter function='level-members' level='[none:Region:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[dataengine.42019.618651678240].[none:Region:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-align' value='center' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[dataengine.42019.618651678240].[yr:Order Date:ok]' value='40' />
            <format attr='width' field='[dataengine.42019.618651678240].[none:Category:nk]' value='98' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-weight' field='[dataengine.42019.618651678240].[mn:Order Date:ok]' value='normal' />
            <format attr='text-format' field='[dataengine.42019.618651678240].[mn:Order Date:ok]' value='iLLL' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[dataengine.42019.618651678240].[sum:Sales:qk]' palette='blue_10_0' type='interpolated' />
            <encoding attr='size-bar' field='[dataengine.42019.618651678240].[sum:Sales:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='stroke-size' scope='rows' value='4' />
            <format attr='stroke-color' scope='rows' value='#ffffff' />
            <format attr='line-pattern' scope='cols' value='none' />
          </style-rule>
          <style-rule element='header-div'>
            <format attr='line-pattern' scope='cols' value='none' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[dataengine.42019.618651678240].[yr:Order Date:ok]' value='Order Year' />
            <format attr='title' field='[dataengine.42019.618651678240].[mn:Order Date:ok]' value='Order Year' />
            <format attr='background-color' value='#f7f7f7' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Square' />
            <encodings>
              <color column='[dataengine.42019.618651678240].[sum:Sales:qk]' />
              <text column='[dataengine.42019.618651678240].[sum:Sales:qk]' />
              <tooltip column='[dataengine.42019.618651678240].[sum:Profit:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#d3872a' fontname='Tableau Medium' fontsize='11'>&lt;[dataengine.42019.618651678240].[none:Category:nk]&gt;</run>
                <run fontcolor='#555555' fontname='Tableau Medium' fontsize='9'>&#10;&lt;[dataengine.42019.618651678240].[mn:Order Date:ok]&gt; &lt;[dataengine.42019.618651678240].[yr:Order Date:ok]&gt;</run>
                <run fontcolor='#787878' fontname='Tableau Medium' fontsize='9'>&#10;Sales:</run>
                <run fontcolor='#787878' fontsize='9'>Æ&#9;</run>
                <run fontname='Tableau Bold' fontsize='9'>&lt;[dataengine.42019.618651678240].[sum:Sales:qk]&gt;</run>
                <run fontcolor='#787878' fontname='Tableau Medium' fontsize='9'>&#10;Profit:</run>
                <run fontcolor='#787878' fontsize='9'>Æ&#9;</run>
                <run fontcolor='#1b1b1b' fontname='Tableau Bold' fontsize='9'>&lt;[dataengine.42019.618651678240].[sum:Profit:qk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
                <format attr='has-stroke' value='true' />
                <format attr='stroke-color' value='#f0f0f0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([dataengine.42019.618651678240].[none:Category:nk] / [dataengine.42019.618651678240].[yr:Order Date:ok])</rows>
        <cols>[dataengine.42019.618651678240].[mn:Order Date:ok]</cols>
      </table>
    </worksheet>
    <worksheet name='QuotaAttainment'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontsize='13'>Estimated Quota Attainment Results with These Assumptions</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sales Commission' name='Sales Planning new' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Base Salary' datatype='integer' name='[Base Salary]' param-domain-type='any' role='measure' type='quantitative' value='50000'>
              <calculation class='tableau' formula='50000' />
            </column>
            <column caption='Commission Rate' datatype='real' default-format='n#,##0.0&quot;%&quot;;-#,##0.0&quot;%&quot;' name='[Commission Rate]' param-domain-type='range' role='measure' type='quantitative' value='18.400000000000002'>
              <calculation class='tableau' formula='18.400000000000002' />
              <range granularity='0.10000000000000001' max='100.0' min='1.0' />
            </column>
            <column caption='New Quota' datatype='integer' default-format='c&quot;$&quot;#,##0,K;(&quot;$&quot;#,##0,K)' name='[New Quota]' param-domain-type='range' role='measure' type='quantitative' value='500000'>
              <calculation class='tableau' formula='500000' />
              <range granularity='25000' min='100000' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='Sales Planning new'>
            <column caption='Achievement (estimated)' datatype='real' default-format='C1033%' name='[Achievement (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Sales]' scope-isolation='false' />
            </column>
            <column caption='Achieved Quota' datatype='string' name='[Achievement (variable) (copy)]' role='measure' type='nominal'>
              <calculation class='tableau' formula='if SUM([Achievement (copy)]) &gt;= [Parameters].[New Quota] then &quot;100% +&quot;&#13;&#10;elseif SUM([Achievement (copy)]) &gt;= 0.75 * [Parameters].[New Quota] then &quot;75-100%&quot;&#13;&#10;elseif SUM([Achievement (copy)]) &gt;= 0.5 * [Parameters].[New Quota] then &quot;50-75%&quot;&#13;&#10;else &quot;Below 50%&quot; end' />
            </column>
            <column datatype='integer' default-format='C1033%' name='[Base (Variable)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Parameters].[Base Salary]' />
            </column>
            <column caption='% of quota achieved' datatype='real' default-format='p0%' name='[Calculation_0440925131659539]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='AVG([Achievement (copy)])/[Parameters].[New Quota]' scope-isolation='false' />
            </column>
            <column caption='Rank over 3' datatype='real' name='[Calculation_4120925132203686]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='ROUND(INDEX() / 3 - 0.6,0) + 1'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column datatype='real' default-format='C1033%' name='[Commission (Variable)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([Parameters].[Commission Rate]*[Sales])/100' scope-isolation='false' />
            </column>
            <column datatype='real' default-format='C1033%' name='[OTE (Variable)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Parameters].[Base Salary] + ([Parameters].[Commission Rate]*[Parameters].[New Quota])/100' />
            </column>
            <column datatype='string' name='[Sales Person]' role='dimension' type='nominal' />
            <column datatype='real' default-format='n#,##0;-#,##0' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='real' default-format='C1033%' name='[Total Compensation]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='MIN([Base (Variable)]) + SUM([Commission (Variable)])' />
            </column>
            <column-instance column='[OTE (Variable)]' derivation='Max' name='[max:OTE (Variable):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sales Person]' derivation='None' name='[none:Sales Person:nk]' pivot='key' type='nominal' />
            <column-instance column='[Achievement (copy)]' derivation='Sum' name='[sum:Achievement (copy):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Achievement (variable) (copy)]' derivation='User' name='[usr:Achievement (variable) (copy):nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_0440925131659539]' derivation='User' name='[usr:Calculation_0440925131659539:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_4120925132203686]' derivation='User' name='[usr:Calculation_4120925132203686:ok]' pivot='key' type='ordinal'>
              <table-calc ordering-type='Columns' />
            </column-instance>
            <column-instance column='[Total Compensation]' derivation='User' name='[usr:Total Compensation:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <sort class='manual' column='[Sales Planning new].[usr:Achievement (variable) (copy):nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Below 50\%&quot;</bucket>
              <bucket>&quot;50-75\%&quot;</bucket>
              <bucket>&quot;75-100\%&quot;</bucket>
              <bucket>&quot;100\% +&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[Sales Planning new].[sum:Achievement (copy):qk]' scope='cols' value='Sales ($)' />
            <format attr='subtitle' class='0' field='[Sales Planning new].[sum:Achievement (copy):qk]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[Sales Planning new].[sum:Achievement (copy):qk]' scope='cols' value='true' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[Sales Planning new].[usr:Calculation_4120925132203686:ok]' value='false' />
            <format attr='text-format' field='[Sales Planning new].[sum:Achievement (copy):qk]' value='n#,##0,K;-#,##0,K' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
          </style-rule>
          <style-rule element='refband'>
            <format attr='reverse-palette' id='refline1' value='false' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[Sales Planning new].[usr:Achievement (variable) (copy):nk]' value='' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[Sales Planning new].[usr:Calculation_0440925131659539:qk]' />
              <color column='[Sales Planning new].[usr:Achievement (variable) (copy):nk]' />
              <lod column='[Parameters].[New Quota]' />
              <lod column='[Sales Planning new].[usr:Total Compensation:qk]' />
              <lod column='[Sales Planning new].[max:OTE (Variable):qk]' />
              <lod column='[Sales Planning new].[usr:Total Compensation:qk]' />
            </encodings>
            <reference-line axis-column='[Sales Planning new].[sum:Achievement (copy):qk]' enable-instant-analytics='true' formula='average' id='refline0' label='New quota &lt;Value&gt;' label-type='custom' probability='95' scope='per-table' value-column='[Parameters].[New Quota]' z-order='1' />
            <reference-line axis-column='[Sales Planning new].[sum:Achievement (copy):qk]' enable-instant-analytics='true' fill-above='false' fill-below='true' formula='average' id='refline1' label-type='none' percentage-bands='true' probability='95' scope='per-cell' symmetric='false' value-column='[Parameters].[New Quota]' z-order='2'>
              <reference-line-value percentage='50' />
              <reference-line-value percentage='75' />
              <reference-line-value percentage='100' />
            </reference-line>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#d3872a' fontname='Tableau Bold' fontsize='11'>&lt;[Sales Planning new].[none:Sales Person:nk]&gt;</run>
                <run fontcolor='#666666' fontname='Tableau Medium' fontsize='9'>&#10;&lt;[Sales Planning new].[usr:Achievement (variable) (copy):nk]&gt; Quota Achieved</run>
                <run fontcolor='#000000' fontname='Tableau Semibold' fontsize='9'>Æ&#10;</run>
                <run fontcolor='#666666' fontsize='9'>&#10;Total Sales:         </run>
                <run fontcolor='#000000' fontname='Tableau Bold' fontsize='9'>$</run>
                <run fontcolor='#000000' fontname='Tableau Semibold' fontsize='9'>&lt;[Sales Planning new].[sum:Achievement (copy):qk]&gt;</run>
                <run fontcolor='#666666' fontsize='9'>&#10;Compensation: </run>
                <run fontcolor='#000000' fontname='Tableau Semibold' fontsize='9'>&lt;[Sales Planning new].[usr:Total Compensation:qk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([Sales Planning new].[usr:Calculation_4120925132203686:ok] / [Sales Planning new].[none:Sales Person:nk])</rows>
        <cols>[Sales Planning new].[sum:Achievement (copy):qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Sale Map'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontsize='13'>Sales by Geography</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sample - Superstore' name='dataengine.42019.618651678240' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='dataengine.42019.618651678240'>
            <column caption='Order Profitable?' datatype='boolean' name='[Calculation_9060122104947471]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='{fixed [Order ID]:sum([Profit])}&gt;0&#13;&#10;// calculates the profit at the order level' />
              <aliases>
                <alias key='false' value='Unprofitable' />
                <alias key='true' value='Profitable' />
              </aliases>
              <desc>
                <formatted-text>
                  <run>A level of detail expression that calculates profitability for each Order</run>
                </formatted-text>
              </desc>
            </column>
            <column caption='Profit Ratio' datatype='real' default-format='p0.0%' name='[Calculation_9921103144103743]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([Profit])/sum([Sales])' />
            </column>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Order ID]' role='dimension' type='nominal' />
            <column datatype='integer' default-format='*00000' name='[Postal Code]' role='dimension' semantic-role='[ZipCode].[Name]' type='ordinal' />
            <column datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Segment]' role='dimension' type='nominal' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Order Date]' derivation='None' name='[none:Order Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Postal Code]' derivation='None' name='[none:Postal Code:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Order Date]' derivation='Month-Trunc' name='[tmn:Order Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_9921103144103743]' derivation='User' name='[usr:Calculation_9921103144103743:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Order Date]' derivation='Year' name='[yr:Order Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[dataengine.42019.618651678240].[Action (Category,MONTH(Order Date))]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Category]' />
              <groupfilter function='level-members' level='[tmn:Order Date:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[dataengine.42019.618651678240].[Action (MONTH(Order Date),Product Category)]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[tmn:Order Date:ok]' />
              <groupfilter function='level-members' level='[none:Category:nk]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[dataengine.42019.618651678240].[Action (MONTH(Order Date),Segment)]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[tmn:Order Date:ok]' />
              <groupfilter function='level-members' level='[Segment]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[dataengine.42019.618651678240].[Action (Order Profitable?,Category,MONTH(Order Date))]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_9060122104947471]' />
              <groupfilter function='level-members' level='[Category]' />
              <groupfilter function='level-members' level='[tmn:Order Date:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[dataengine.42019.618651678240].[Action (Order Profitable?,MONTH(Order Date),Segment)]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_9060122104947471]' />
              <groupfilter function='level-members' level='[tmn:Order Date:ok]' />
              <groupfilter function='level-members' level='[Segment]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[dataengine.42019.618651678240].[Action (Transaction Profit,MONTH(Order Date),Segment)]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_9060122104947471]' />
              <groupfilter function='level-members' level='[tmn:Order Date:ok]' />
              <groupfilter function='level-members' level='[Segment]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[dataengine.42019.618651678240].[Action (YEAR(Order Date),MONTH(Order Date),Segment)]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[yr:Order Date:ok]' />
              <groupfilter function='level-members' level='[tmn:Order Date:ok]' />
              <groupfilter function='level-members' level='[Segment]' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[dataengine.42019.618651678240].[none:Order Date:qk]' filter-group='13' included-values='in-range'>
            <min>#2012-01-04#</min>
            <max>#2015-12-31#</max>
          </filter>
          <sort class='computed' column='[dataengine.42019.618651678240].[none:Postal Code:ok]' direction='ASC' using='[dataengine.42019.618651678240].[sum:Profit:qk]' />
          <filter class='categorical' column='[dataengine.42019.618651678240].[none:Region:nk]' filter-group='14'>
            <groupfilter function='level-members' level='[none:Region:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[dataengine.42019.618651678240].[usr:Calculation_9921103144103743:qk]' included-values='in-range-or-null'>
            <min>-2.7000000000000011</min>
            <max>0.5</max>
          </filter>
          <slices>
            <column>[dataengine.42019.618651678240].[none:Order Date:qk]</column>
            <column>[dataengine.42019.618651678240].[Action (MONTH(Order Date),Segment)]</column>
            <column>[dataengine.42019.618651678240].[Action (MONTH(Order Date),Product Category)]</column>
            <column>[dataengine.42019.618651678240].[Action (YEAR(Order Date),MONTH(Order Date),Segment)]</column>
            <column>[dataengine.42019.618651678240].[Action (Category,MONTH(Order Date))]</column>
            <column>[dataengine.42019.618651678240].[Action (Transaction Profit,MONTH(Order Date),Segment)]</column>
            <column>[dataengine.42019.618651678240].[Action (Order Profitable?,MONTH(Order Date),Segment)]</column>
            <column>[dataengine.42019.618651678240].[Action (Order Profitable?,Category,MONTH(Order Date))]</column>
            <column>[dataengine.42019.618651678240].[none:Region:nk]</column>
            <column>[dataengine.42019.618651678240].[usr:Calculation_9921103144103743:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[dataengine.42019.618651678240].[sum:Sales:qk]' palette='tableau-blue' type='interpolated' />
            <encoding attr='color' field='[dataengine.42019.618651678240].[usr:Calculation_9921103144103743:qk]' min='-0.5' num-steps='6' palette='orange_blue_diverging_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='font-family' value='Tableau Book' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='size' field='[dataengine.42019.618651678240].[sum:Sales:qk]' value='Sales' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='false' />
            <format attr='enabled' id='tab_coastline' value='true' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='false' />
            <format attr='enabled' id='light_pp2_statebounds' value='true' />
            <format attr='enabled' id='light_pp2_statelabels' value='true' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.20000000298023224' />
            <format attr='map-style' value='tableau-light-gray' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='background-color' value='#f7f7f7' />
            <format attr='border-style' value='solid' />
            <format attr='border-width' value='2' />
            <format attr='border-color' value='#f7f7f7' />
          </style-rule>
        </style>
        <panes>
          <pane id='2'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[dataengine.42019.618651678240].[usr:Calculation_9921103144103743:qk]' />
              <lod column='[dataengine.42019.618651678240].[none:Postal Code:ok]' />
              <lod column='[dataengine.42019.618651678240].[none:State:nk]' />
              <size column='[dataengine.42019.618651678240].[sum:Sales:qk]' />
              <tooltip column='[dataengine.42019.618651678240].[sum:Profit:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#d3872a' fontname='Tableau Bold' fontsize='12'>&lt;[dataengine.42019.618651678240].[none:State:nk]&gt; - &lt;[dataengine.42019.618651678240].[none:Postal Code:ok]&gt;</run>
                <run fontcolor='#555555' fontsize='12'>Æ&#10;</run>
                <run fontcolor='#787878' fontname='Tableau Light' indent='1170'>&#10;Profit Ratio:</run>
                <run bold='true' fontcolor='#1b1b1b' fontname='Tableau Light' indent='1170'>Æ &#9;</run>
                <run fontcolor='#1b1b1b' fontname='Tableau Semibold' indent='1170'>&lt;[dataengine.42019.618651678240].[usr:Calculation_9921103144103743:qk]&gt;</run>
                <run fontcolor='#787878' fontname='Tableau Light' indent='1170'>&#10;Sales: &#9;</run>
                <run fontname='Tableau Semibold' indent='1170'>&lt;[dataengine.42019.618651678240].[sum:Sales:qk]&gt;</run>
                <run fontcolor='#787878' fontname='Tableau Light' indent='1170'>&#10;Profit: &#9;</run>
                <run fontcolor='#1b1b1b' fontname='Tableau Semibold' indent='1170'>&lt;[dataengine.42019.618651678240].[sum:Profit:qk]&gt;</run>
                <run fontcolor='#898989' indent='1170'>Æ&#10;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.7691160440444946' />
                <format attr='has-stroke' value='true' />
                <format attr='stroke-color' value='#898989' />
                <format attr='mark-transparency' value='255' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[dataengine.42019.618651678240].[Latitude (generated)]</rows>
        <cols>[dataengine.42019.618651678240].[Longitude (generated)]</cols>
      </table>
    </worksheet>
    <worksheet name='Sales'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='0' fontcolor='#906800'>Estimated Sales:</run>
            <run bold='true' fontalignment='0'>Æ&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sales Commission' name='Sales Planning new' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='New Quota' datatype='integer' default-format='c&quot;$&quot;#,##0,K;(&quot;$&quot;#,##0,K)' name='[New Quota]' param-domain-type='range' role='measure' type='quantitative' value='500000'>
              <calculation class='tableau' formula='500000' />
              <range granularity='25000' min='100000' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='Sales Planning new'>
            <column caption='Achievement (estimated)' datatype='real' default-format='C1033%' name='[Achievement (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Sales]' scope-isolation='false' />
            </column>
            <column caption='% of quota achieved' datatype='real' default-format='p0%' name='[Calculation_0440925131659539]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='AVG([Achievement (copy)])/[Parameters].[New Quota]' scope-isolation='false' />
            </column>
            <column datatype='real' default-format='n#,##0;-#,##0' name='[Sales]' role='measure' type='quantitative' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_0440925131659539]' derivation='User' name='[usr:Calculation_0440925131659539:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[Sales Planning new].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[Sales Planning new].[sum:Sales:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[Sales Planning new].[usr:Calculation_0440925131659539:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[Sales Planning new].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[Sales Planning new].[sum:Sales:qk]&quot;</bucket>
              <bucket>&quot;[Sales Planning new].[usr:Calculation_0440925131659539:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <slices>
            <column>[Sales Planning new].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' value='171' />
            <format attr='font-weight' field='[Sales Planning new].[sum:Sales:qk]' value='bold' />
            <format attr='font-size' field='[Sales Planning new].[sum:Sales:qk]' value='16' />
            <format attr='text-format' field='[Sales Planning new].[sum:Sales:qk]' value='c&quot;$&quot;#,##0,,.00M;(&quot;$&quot;#,##0,,.00M)' />
            <format attr='font-size' field='[Sales Planning new].[Multiple Values]' value='16' />
            <format attr='font-weight' field='[Sales Planning new].[Multiple Values]' value='bold' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[Sales Planning new].[:Measure Names]' value='228' />
            <format attr='band-color' scope='rows' value='#00000000' />
          </style-rule>
          <style-rule element='label'>
            <format attr='color' field='[Sales Planning new].[:Measure Names]' value='#cc721e' />
            <format attr='font-size' field='[Sales Planning new].[:Measure Names]' value='12' />
            <format attr='text-align' field='[Sales Planning new].[:Measure Names]' value='right' />
            <format attr='font-weight' field='[Sales Planning new].[:Measure Names]' value='bold' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='band-color' scope='rows' value='#00000000' />
          </style-rule>
          <style-rule element='table'>
            <format attr='omit-on-special' value='false' />
            <format attr='break-on-special' value='false' />
            <format attr='show-null-value-warning' value='false' />
            <format attr='band-size' scope='rows' value='1' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='line-pattern' scope='rows' value='none' />
            <format attr='line-pattern' scope='cols' value='none' />
          </style-rule>
          <style-rule element='title'>
            <format attr='background-color' value='#ffffff' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[Sales Planning new].[Multiple Values]' />
            </encodings>
            <customized-tooltip>
              <formatted-text />
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[Sales Planning new].[:Measure Names]</rows>
        <cols />
      </table>
    </worksheet>
    <worksheet name='Sales by Product'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontsize='11'>Monthly Sales by Product Category - States: </run>
            <run fontname='Tableau Semibold' fontsize='11'>&lt;[dataengine.42019.618651678240].[State]&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sample - Superstore' name='dataengine.42019.618651678240' />
          </datasources>
          <datasource-dependencies datasource='dataengine.42019.618651678240'>
            <column caption='Order Profitable?' datatype='boolean' name='[Calculation_9060122104947471]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='{fixed [Order ID]:sum([Profit])}&gt;0&#13;&#10;// calculates the profit at the order level' />
              <aliases>
                <alias key='false' value='Unprofitable' />
                <alias key='true' value='Profitable' />
              </aliases>
              <desc>
                <formatted-text>
                  <run>A level of detail expression that calculates profitability for each Order</run>
                </formatted-text>
              </desc>
            </column>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Order ID]' role='dimension' type='nominal' />
            <column datatype='integer' default-format='*00000' name='[Postal Code]' role='dimension' semantic-role='[ZipCode].[Name]' type='ordinal' />
            <column datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Segment]' role='dimension' type='nominal' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Calculation_9060122104947471]' derivation='None' name='[none:Calculation_9060122104947471:nk]' pivot='key' type='nominal' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Order Date]' derivation='None' name='[none:Order Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Postal Code]' derivation='None' name='[none:Postal Code:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Order Date]' derivation='Month-Trunc' name='[tmn:Order Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Order Date]' derivation='Month-Trunc' name='[tmn:Order Date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[dataengine.42019.618651678240].[Action (MONTH(Order Date),Segment)]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[tmn:Order Date:ok]' />
              <groupfilter function='level-members' level='[Segment]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[dataengine.42019.618651678240].[Action (Postal Code,State)]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Postal Code:ok]' />
              <groupfilter function='level-members' level='[State]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[dataengine.42019.618651678240].[Action (State)]'>
            <groupfilter function='level-members' level='[State]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <sort class='manual' column='[dataengine.42019.618651678240].[none:Calculation_9060122104947471:nk]' direction='ASC'>
            <dictionary>
              <bucket>true</bucket>
              <bucket>false</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <filter class='quantitative' column='[dataengine.42019.618651678240].[none:Order Date:qk]' filter-group='13' included-values='in-range'>
            <min>#2012-01-04#</min>
            <max>#2015-12-31#</max>
          </filter>
          <filter class='categorical' column='[dataengine.42019.618651678240].[none:Region:nk]' filter-group='14'>
            <groupfilter function='level-members' level='[none:Region:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[dataengine.42019.618651678240].[Action (State)]</column>
            <column>[dataengine.42019.618651678240].[Action (Postal Code,State)]</column>
            <column>[dataengine.42019.618651678240].[Action (MONTH(Order Date),Segment)]</column>
            <column>[dataengine.42019.618651678240].[none:Region:nk]</column>
            <column>[dataengine.42019.618651678240].[none:Order Date:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[dataengine.42019.618651678240].[tmn:Order Date:qk]' scope='cols' value='' />
            <format attr='subtitle' class='0' field='[dataengine.42019.618651678240].[tmn:Order Date:qk]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[dataengine.42019.618651678240].[tmn:Order Date:qk]' scope='cols' value='true' />
            <format attr='title' class='0' field='[dataengine.42019.618651678240].[sum:Sales:qk]' scope='rows' value='' />
            <format attr='subtitle' class='0' field='[dataengine.42019.618651678240].[sum:Sales:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[dataengine.42019.618651678240].[sum:Sales:qk]' scope='rows' value='true' />
            <format attr='width' field='[dataengine.42019.618651678240].[sum:Sales:qk]' value='60' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-format' field='[dataengine.42019.618651678240].[tmn:Order Date:qk]' value='*m/d/yyyy' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[dataengine.42019.618651678240].[none:Category:nk]' value='84' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[dataengine.42019.618651678240].[tmn:Order Date:qk]' value='' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
          </style-rule>
        </style>
        <panes>
          <pane id='4'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <encodings>
              <color column='[dataengine.42019.618651678240].[none:Calculation_9060122104947471:nk]' />
              <tooltip column='[dataengine.42019.618651678240].[sum:Profit:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#d3872a' fontname='Tableau Semibold' fontsize='12'>&lt;[dataengine.42019.618651678240].[none:Category:nk]&gt;</run>
                <run fontcolor='#d3872a' fontsize='12'>Æ </run>
                <run fontcolor='#555555' fontsize='12'>- </run>
                <run>&lt;[dataengine.42019.618651678240].[tmn:Order Date:qk]&gt;</run>
                <run fontsize='9'>&#10;&lt;[dataengine.42019.618651678240].[none:Calculation_9060122104947471:nk]&gt; Orders</run>
                <run fontcolor='#787878'>&#10;Sales:&#9;</run>
                <run fontname='Tableau Semibold'>&lt;[dataengine.42019.618651678240].[sum:Sales:qk]&gt;</run>
                <run fontcolor='#787878'>&#10;Profit:&#9;</run>
                <run fontcolor='#1b1b1b' fontname='Tableau Semibold'>&lt;[dataengine.42019.618651678240].[sum:Profit:qk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.88955801725387573' />
                <format attr='mark-transparency' value='255' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([dataengine.42019.618651678240].[none:Category:nk] * [dataengine.42019.618651678240].[sum:Sales:qk])</rows>
        <cols>[dataengine.42019.618651678240].[tmn:Order Date:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Sales by Segment'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontsize='11'>Monthly Sales by Segment - States: </run>
            <run fontname='Tableau Semibold' fontsize='11'>&lt;[dataengine.42019.618651678240].[State]&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sample - Superstore' name='dataengine.42019.618651678240' />
          </datasources>
          <datasource-dependencies datasource='dataengine.42019.618651678240'>
            <column caption='Order Profitable?' datatype='boolean' name='[Calculation_9060122104947471]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='{fixed [Order ID]:sum([Profit])}&gt;0&#13;&#10;// calculates the profit at the order level' />
              <aliases>
                <alias key='false' value='Unprofitable' />
                <alias key='true' value='Profitable' />
              </aliases>
              <desc>
                <formatted-text>
                  <run>A level of detail expression that calculates profitability for each Order</run>
                </formatted-text>
              </desc>
            </column>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Order ID]' role='dimension' type='nominal' />
            <column datatype='integer' default-format='*00000' name='[Postal Code]' role='dimension' semantic-role='[ZipCode].[Name]' type='ordinal' />
            <column datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Segment]' role='dimension' type='nominal' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Calculation_9060122104947471]' derivation='None' name='[none:Calculation_9060122104947471:nk]' pivot='key' type='nominal' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Order Date]' derivation='None' name='[none:Order Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Postal Code]' derivation='None' name='[none:Postal Code:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Segment]' derivation='None' name='[none:Segment:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Order Date]' derivation='Month-Trunc' name='[tmn:Order Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Order Date]' derivation='Month-Trunc' name='[tmn:Order Date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[dataengine.42019.618651678240].[Action (MONTH(Order Date),Product Category)]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[tmn:Order Date:ok]' />
              <groupfilter function='level-members' level='[none:Category:nk]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[dataengine.42019.618651678240].[Action (Postal Code,State)]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Postal Code:ok]' />
              <groupfilter function='level-members' level='[State]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[dataengine.42019.618651678240].[Action (State)]'>
            <groupfilter function='level-members' level='[State]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <sort class='manual' column='[dataengine.42019.618651678240].[none:Calculation_9060122104947471:nk]' direction='ASC'>
            <dictionary>
              <bucket>true</bucket>
              <bucket>false</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <filter class='quantitative' column='[dataengine.42019.618651678240].[none:Order Date:qk]' filter-group='13' included-values='in-range'>
            <min>#2012-01-04#</min>
            <max>#2015-12-31#</max>
          </filter>
          <filter class='categorical' column='[dataengine.42019.618651678240].[none:Region:nk]' filter-group='14'>
            <groupfilter function='level-members' level='[none:Region:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[dataengine.42019.618651678240].[Action (State)]</column>
            <column>[dataengine.42019.618651678240].[Action (Postal Code,State)]</column>
            <column>[dataengine.42019.618651678240].[Action (MONTH(Order Date),Product Category)]</column>
            <column>[dataengine.42019.618651678240].[none:Order Date:qk]</column>
            <column>[dataengine.42019.618651678240].[none:Region:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[dataengine.42019.618651678240].[tmn:Order Date:qk]' scope='cols' value='' />
            <format attr='subtitle' class='0' field='[dataengine.42019.618651678240].[tmn:Order Date:qk]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[dataengine.42019.618651678240].[tmn:Order Date:qk]' scope='cols' value='true' />
            <format attr='title' class='0' field='[dataengine.42019.618651678240].[sum:Sales:qk]' scope='rows' value='' />
            <format attr='subtitle' class='0' field='[dataengine.42019.618651678240].[sum:Sales:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[dataengine.42019.618651678240].[sum:Sales:qk]' scope='rows' value='false' />
            <format attr='width' field='[dataengine.42019.618651678240].[sum:Sales:qk]' value='60' />
            <encoding attr='space' class='0' field='[dataengine.42019.618651678240].[sum:Sales:qk]' field-type='quantitative' range-type='uniform' scope='rows' type='space' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-format' field='[dataengine.42019.618651678240].[tmn:Order Date:qk]' value='*m/d/yyyy' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[dataengine.42019.618651678240].[tmn:Order Date:qk]' value='' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='rows' value='false' />
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[dataengine.42019.618651678240].[none:Calculation_9060122104947471:nk]' value='' />
          </style-rule>
        </style>
        <panes>
          <pane id='3'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <encodings>
              <color column='[dataengine.42019.618651678240].[none:Calculation_9060122104947471:nk]' />
              <tooltip column='[dataengine.42019.618651678240].[sum:Profit:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#d3872a' fontname='Tableau Semibold' fontsize='12'>&lt;[dataengine.42019.618651678240].[none:Segment:nk]&gt;</run>
                <run fontcolor='#555555' fontname='Tableau Semibold' fontsize='12'>Æ </run>
                <run fontcolor='#555555' fontsize='12'>- </run>
                <run fontcolor='#555555'>&lt;[dataengine.42019.618651678240].[tmn:Order Date:qk]&gt;</run>
                <run fontsize='9'>&#10;&lt;[dataengine.42019.618651678240].[none:Calculation_9060122104947471:nk]&gt; Orders</run>
                <run fontcolor='#787878'>&#10;Sales:&#9;</run>
                <run fontname='Tableau Semibold'>&lt;[dataengine.42019.618651678240].[sum:Sales:qk]&gt;</run>
                <run fontcolor='#787878'>&#10;Profit:&#9;</run>
                <run fontcolor='#1b1b1b' fontname='Tableau Semibold'>&lt;[dataengine.42019.618651678240].[sum:Profit:qk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.790607750415802' />
                <format attr='has-stroke' value='false' />
                <format attr='mark-transparency' value='255' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([dataengine.42019.618651678240].[none:Segment:nk] * [dataengine.42019.618651678240].[sum:Sales:qk])</rows>
        <cols>[dataengine.42019.618651678240].[tmn:Order Date:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='ShipSummary'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sample - Superstore' name='dataengine.42019.618651678240' />
          </datasources>
          <datasource-dependencies datasource='dataengine.42019.618651678240'>
            <column caption='Days to Ship Actual' datatype='integer' name='[Calculation_0831103151444568]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='DATEDIFF(&apos;day&apos;,[Order Date],[Ship Date])' />
            </column>
            <column caption='Ship Status' datatype='string' name='[Calculation_6401103171259723]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if [Calculation_0831103151444568]&gt; [Calculation_6861103170623145] then &quot;Shipped Late&quot; &#13;&#10;elseIF [Calculation_0831103151444568]= [Calculation_6861103170623145] then &quot;Shipped On Time&quot;&#13;&#10;Else &quot;Shipped Early&quot; end' />
              <desc>
                <formatted-text>
                  <run>Was shipment early, ontime or late based on ship mode</run>
                </formatted-text>
              </desc>
            </column>
            <column caption='Days to Ship Scheduled' datatype='integer' name='[Calculation_6861103170623145]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='CASE  [Ship Mode]&#13;&#10;WHEN &quot;Same Day&quot; THEN 0&#13;&#10;WHEN &quot;First Class&quot; THEN 1&#13;&#10;WHEN &quot;Second Class&quot; THEN 3&#13;&#10;WHEN &quot;Standard Class&quot; THEN 6&#13;&#10;END' />
            </column>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='date' name='[Ship Date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Ship Mode]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_6401103171259723]' derivation='None' name='[none:Calculation_6401103171259723:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Ship Mode]' derivation='None' name='[none:Ship Mode:nk]' pivot='key' type='nominal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[pcto:sum:Number of Records:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[dataengine.42019.618651678240].[none:Calculation_6401103171259723:nk]' ordering-type='Field' type='PctTotal' />
            </column-instance>
            <column-instance column='[Order Date]' derivation='Quarter' name='[qr:Order Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Order Date]' derivation='Year' name='[yr:Order Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[dataengine.42019.618651678240].[none:Calculation_6401103171259723:nk]' filter-group='5'>
            <groupfilter function='level-members' level='[none:Calculation_6401103171259723:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <sort class='manual' column='[dataengine.42019.618651678240].[none:Calculation_6401103171259723:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Early&quot;</bucket>
              <bucket>&quot;On Time&quot;</bucket>
              <bucket>&quot;Delayed&quot;</bucket>
              <bucket>%all%</bucket>
              <bucket>&quot;Shipped Early&quot;</bucket>
              <bucket>&quot;Shipped On Time&quot;</bucket>
              <bucket>&quot;Shipped Late&quot;</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[dataengine.42019.618651678240].[none:Region:nk]'>
            <groupfilter function='level-members' level='[none:Region:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[dataengine.42019.618651678240].[none:Ship Mode:nk]' filter-group='11'>
            <groupfilter function='level-members' level='[none:Ship Mode:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[dataengine.42019.618651678240].[qr:Order Date:ok]' filter-group='3'>
            <groupfilter function='level-members' level='[qr:Order Date:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[dataengine.42019.618651678240].[yr:Order Date:ok]' filter-group='18'>
            <groupfilter function='member' level='[yr:Order Date:ok]' member='2012' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[dataengine.42019.618651678240].[none:Calculation_6401103171259723:nk]</column>
            <column>[dataengine.42019.618651678240].[qr:Order Date:ok]</column>
            <column>[dataengine.42019.618651678240].[none:Ship Mode:nk]</column>
            <column>[dataengine.42019.618651678240].[yr:Order Date:ok]</column>
            <column>[dataengine.42019.618651678240].[none:Region:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='display' class='0' field='[dataengine.42019.618651678240].[pcto:sum:Number of Records:qk]' scope='cols' value='false' />
            <format attr='subtitle' class='0' field='[dataengine.42019.618651678240].[pcto:sum:Number of Records:qk]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[dataengine.42019.618651678240].[pcto:sum:Number of Records:qk]' scope='cols' value='true' />
            <encoding attr='space' class='0' field='[dataengine.42019.618651678240].[pcto:sum:Number of Records:qk]' field-type='quantitative' max='1.0' min='0.0' range-type='fixed' scope='cols' type='space' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='font-size' value='14' />
            <format attr='font-weight' value='bold' />
            <format attr='border-width' scope='cols' value='1' />
            <format attr='border-color' scope='cols' value='#ffffff' />
            <format attr='text-align' value='center' />
            <format attr='border-style' value='none' />
            <format attr='text-format' field='[dataengine.42019.618651678240].[pcto:sum:Number of Records:qk]' value='p0%' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[dataengine.42019.618651678240].[none:Calculation_6401103171259723:nk]' value='true' />
            <format attr='font-size' field='[dataengine.42019.618651678240].[none:Calculation_6401103171259723:nk]' value='10' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='border-style' value='none' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#00000000' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='stroke-size' scope='cols' value='2' />
            <format attr='line-pattern' scope='rows' value='none' />
            <format attr='line-pattern' scope='cols' value='none' />
          </style-rule>
          <style-rule element='title'>
            <format attr='background-color' value='#00000000' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[dataengine.42019.618651678240].[none:Calculation_6401103171259723:nk]' />
              <text column='[dataengine.42019.618651678240].[pcto:sum:Number of Records:qk]' />
              <text column='[dataengine.42019.618651678240].[none:Calculation_6401103171259723:nk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run fontname='Tableau Medium' fontsize='12'>&lt;[dataengine.42019.618651678240].[pcto:sum:Number of Records:qk]&gt;</run>
                <run fontsize='12'> &lt;[dataengine.42019.618651678240].[none:Calculation_6401103171259723:nk]&gt;</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='auto' />
                <format attr='font-weight' value='normal' />
                <format attr='font-family' value='Tableau Book' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='size' value='1.9890055656433105' />
                <format attr='has-stroke' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols>[dataengine.42019.618651678240].[pcto:sum:Number of Records:qk]</cols>
        <tooltip-style tooltip-mode='none' />
      </table>
    </worksheet>
    <worksheet name='ShippingTrend'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontsize='10'>Shipments by Mode</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sample - Superstore' name='dataengine.42019.618651678240' />
          </datasources>
          <datasource-dependencies datasource='dataengine.42019.618651678240'>
            <column caption='Days to Ship Actual' datatype='integer' name='[Calculation_0831103151444568]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='DATEDIFF(&apos;day&apos;,[Order Date],[Ship Date])' />
            </column>
            <column caption='Ship Status' datatype='string' name='[Calculation_6401103171259723]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if [Calculation_0831103151444568]&gt; [Calculation_6861103170623145] then &quot;Shipped Late&quot; &#13;&#10;elseIF [Calculation_0831103151444568]= [Calculation_6861103170623145] then &quot;Shipped On Time&quot;&#13;&#10;Else &quot;Shipped Early&quot; end' />
              <desc>
                <formatted-text>
                  <run>Was shipment early, ontime or late based on ship mode</run>
                </formatted-text>
              </desc>
            </column>
            <column caption='Days to Ship Scheduled' datatype='integer' name='[Calculation_6861103170623145]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='CASE  [Ship Mode]&#13;&#10;WHEN &quot;Same Day&quot; THEN 0&#13;&#10;WHEN &quot;First Class&quot; THEN 1&#13;&#10;WHEN &quot;Second Class&quot; THEN 3&#13;&#10;WHEN &quot;Standard Class&quot; THEN 6&#13;&#10;END' />
            </column>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='date' name='[Ship Date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Ship Mode]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_6401103171259723]' derivation='None' name='[none:Calculation_6401103171259723:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Ship Mode]' derivation='None' name='[none:Ship Mode:nk]' pivot='key' type='nominal' />
            <column-instance column='[Order Date]' derivation='Quarter' name='[qr:Order Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Order Date]' derivation='Week-Trunc' name='[twk:Order Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Order Date]' derivation='Year' name='[yr:Order Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[dataengine.42019.618651678240].[Action (Delayed?)]'>
            <groupfilter function='level-members' level='[Calculation_6401103171259723]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[dataengine.42019.618651678240].[Action (Ship Status)]'>
            <groupfilter function='level-members' level='[Calculation_6401103171259723]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <sort class='manual' column='[dataengine.42019.618651678240].[none:Calculation_6401103171259723:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Shipped Late&quot;</bucket>
              <bucket>&quot;Shipped On Time&quot;</bucket>
              <bucket>&quot;Shipped Early&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[dataengine.42019.618651678240].[none:Region:nk]' filter-group='7'>
            <groupfilter function='level-members' level='[none:Region:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[dataengine.42019.618651678240].[none:Ship Mode:nk]' filter-group='11'>
            <groupfilter function='level-members' level='[none:Ship Mode:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[dataengine.42019.618651678240].[qr:Order Date:ok]' filter-group='3'>
            <groupfilter function='level-members' level='[qr:Order Date:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[dataengine.42019.618651678240].[yr:Order Date:ok]' filter-group='18'>
            <groupfilter function='member' level='[yr:Order Date:ok]' member='2012' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[dataengine.42019.618651678240].[yr:Order Date:ok]</column>
            <column>[dataengine.42019.618651678240].[qr:Order Date:ok]</column>
            <column>[dataengine.42019.618651678240].[none:Ship Mode:nk]</column>
            <column>[dataengine.42019.618651678240].[Action (Delayed?)]</column>
            <column>[dataengine.42019.618651678240].[Action (Ship Status)]</column>
            <column>[dataengine.42019.618651678240].[none:Region:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='height' field='[dataengine.42019.618651678240].[twk:Order Date:qk]' value='29' />
            <format attr='title' class='0' field='[dataengine.42019.618651678240].[sum:Number of Records:qk]' scope='rows' value='Number of Shipments' />
            <format attr='subtitle' class='0' field='[dataengine.42019.618651678240].[sum:Number of Records:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[dataengine.42019.618651678240].[sum:Number of Records:qk]' scope='rows' value='true' />
            <format attr='width' field='[dataengine.42019.618651678240].[sum:Number of Records:qk]' value='48' />
            <format attr='subtitle' class='0' field='[dataengine.42019.618651678240].[twk:Order Date:qk]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[dataengine.42019.618651678240].[twk:Order Date:qk]' scope='cols' value='true' />
            <format attr='title' class='0' field='[dataengine.42019.618651678240].[twk:Order Date:qk]' scope='cols' value='' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[dataengine.42019.618651678240].[yr:Order Date:ok]' value='false' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
          <style-rule element='header-div'>
            <format attr='line-pattern' scope='cols' value='none' />
          </style-rule>
          <style-rule element='title'>
            <format attr='background-color' value='#00000000' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[dataengine.42019.618651678240].[none:Calculation_6401103171259723:nk]' value='On Time?' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[dataengine.42019.618651678240].[yr:Order Date:ok]' value='Order Year' />
            <format attr='title' field='[dataengine.42019.618651678240].[qr:Order Date:ok]' value='Order Quarter' />
            <format attr='background-color' value='#f7f7f7' />
          </style-rule>
        </style>
        <panes>
          <pane id='1'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <encodings>
              <color column='[dataengine.42019.618651678240].[none:Calculation_6401103171259723:nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#d3872a' fontname='Tableau Bold' fontsize='12'>&lt;[dataengine.42019.618651678240].[none:Calculation_6401103171259723:nk]&gt;</run>
                <run fontcolor='#666666'>&#10;Week of</run>
                <run fontcolor='#555555'>Æ </run>
                <run fontname='Tableau Medium'>&lt;[dataengine.42019.618651678240].[twk:Order Date:qk]&gt;</run>
                <run fontcolor='#787878'>&#10;Shipments:&#9;</run>
                <run fontname='Tableau Medium'>&lt;[dataengine.42019.618651678240].[sum:Number of Records:qk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.16392265260219574' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
                <format attr='mark-transparency' value='211' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[dataengine.42019.618651678240].[sum:Number of Records:qk]</rows>
        <cols>([dataengine.42019.618651678240].[yr:Order Date:ok] * [dataengine.42019.618651678240].[twk:Order Date:qk])</cols>
      </table>
    </worksheet>
    <worksheet name='Total Sales'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontsize='18'>Executive Overview - Profitability </run>
            <run fontsize='14'>(&lt;[dataengine.42019.618651678240].[State]&gt;)</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sample - Superstore' name='dataengine.42019.618651678240' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='New Business Growth' datatype='real' default-format='p0%' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='0.59999999999999998'>
              <calculation class='tableau' formula='0.59999999999999998' />
              <range granularity='0.01' max='1.0' min='0.0' />
            </column>
            <column caption='Churn Rate' datatype='real' default-format='p0.00%' name='[Parameter 2]' param-domain-type='range' role='measure' type='quantitative' value='0.064000000000000001'>
              <calculation class='tableau' formula='0.064000000000000001' />
              <range granularity='0.001' max='0.25' min='0.0' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='dataengine.42019.618651678240'>
            <column caption='Sales estimate' datatype='real' default-format='c&quot;$&quot;#,##0,.0K;(&quot;$&quot;#,##0,.0K)' name='[Calculation_1641214165608856]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Sales]*(1-[Parameters].[Parameter 2])*(1+[Parameters].[Parameter 1])' />
            </column>
            <column caption='Sales Forecast' datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Calculation_5421109230915137]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Sales]*(1-[Parameters].[Parameter 2])*(1+[Parameters].[Parameter 1])' />
            </column>
            <column caption='Order Profitable?' datatype='boolean' name='[Calculation_9060122104947471]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='{fixed [Order ID]:sum([Profit])}&gt;0&#13;&#10;// calculates the profit at the order level' />
              <aliases>
                <alias key='false' value='Unprofitable' />
                <alias key='true' value='Profitable' />
              </aliases>
              <desc>
                <formatted-text>
                  <run>A level of detail expression that calculates profitability for each Order</run>
                </formatted-text>
              </desc>
            </column>
            <column caption='Sales per Customer' datatype='real' default-format='C1033%' name='[Calculation_9321103144526191]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='Sum([Sales])/countD([Customer Name])' />
            </column>
            <column caption='Profit Ratio' datatype='real' default-format='p0.0%' name='[Calculation_9921103144103743]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([Profit])/sum([Sales])' />
            </column>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='string' name='[Customer Name]' role='dimension' type='nominal' />
            <column datatype='real' default-format='p0.00%' name='[Discount]' role='measure' type='quantitative' />
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Order ID]' role='dimension' type='nominal' />
            <column datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Quantity]' role='measure' type='quantitative' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column caption='Units estimate' datatype='real' default-format='n#,##0;-#,##0' name='[Sales est (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='ROUND([Quantity]*(1-[Parameters].[Parameter 2])*(1+[Parameters].[Parameter 1]),0)' scope-isolation='false' />
            </column>
            <column caption='Profit per Order' datatype='real' default-format='C1033%' name='[Sales per Customer (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='Sum([Profit])/countD([Order ID])' />
            </column>
            <column datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Segment]' role='dimension' type='nominal' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Discount]' derivation='Avg' name='[avg:Discount:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Order Date]' derivation='None' name='[none:Order Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1641214165608856]' derivation='Sum' name='[sum:Calculation_1641214165608856:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_5421109230915137]' derivation='Sum' name='[sum:Calculation_5421109230915137:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Quantity]' derivation='Sum' name='[sum:Quantity:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sales est (copy)]' derivation='Sum' name='[sum:Sales est (copy):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Order Date]' derivation='Month-Trunc' name='[tmn:Order Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_9321103144526191]' derivation='User' name='[usr:Calculation_9321103144526191:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_9921103144103743]' derivation='User' name='[usr:Calculation_9921103144103743:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sales per Customer (copy)]' derivation='User' name='[usr:Sales per Customer (copy):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[dataengine.42019.618651678240].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[dataengine.42019.618651678240].[sum:Sales:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[dataengine.42019.618651678240].[sum:Profit:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[dataengine.42019.618651678240].[usr:Calculation_9921103144103743:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[dataengine.42019.618651678240].[usr:Sales per Customer (copy):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[dataengine.42019.618651678240].[usr:Calculation_9321103144526191:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[dataengine.42019.618651678240].[avg:Discount:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[dataengine.42019.618651678240].[sum:Quantity:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[dataengine.42019.618651678240].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[dataengine.42019.618651678240].[sum:Sales:qk]&quot;</bucket>
              <bucket>&quot;[dataengine.42019.618651678240].[sum:Profit:qk]&quot;</bucket>
              <bucket>&quot;[dataengine.42019.618651678240].[usr:Calculation_9921103144103743:qk]&quot;</bucket>
              <bucket>&quot;[dataengine.42019.618651678240].[usr:Sales per Customer (copy):qk]&quot;</bucket>
              <bucket>&quot;[dataengine.42019.618651678240].[usr:Calculation_9321103144526191:qk]&quot;</bucket>
              <bucket>&quot;[dataengine.42019.618651678240].[avg:Discount:qk]&quot;</bucket>
              <bucket>&quot;[dataengine.42019.618651678240].[sum:Calculation_5421109230915137:qk]&quot;</bucket>
              <bucket>&quot;[dataengine.42019.618651678240].[sum:Calculation_1641214165608856:qk]&quot;</bucket>
              <bucket>&quot;[dataengine.42019.618651678240].[sum:Quantity:qk]&quot;</bucket>
              <bucket>&quot;[dataengine.42019.618651678240].[sum:Sales est (copy):qk]&quot;</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[dataengine.42019.618651678240].[Action (Order Profitable?,Category,MONTH(Order Date))]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_9060122104947471]' />
              <groupfilter function='level-members' level='[Category]' />
              <groupfilter function='level-members' level='[tmn:Order Date:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[dataengine.42019.618651678240].[Action (Order Profitable?,MONTH(Order Date),Segment)]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_9060122104947471]' />
              <groupfilter function='level-members' level='[tmn:Order Date:ok]' />
              <groupfilter function='level-members' level='[Segment]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[dataengine.42019.618651678240].[Action (State)]'>
            <groupfilter function='level-members' level='[State]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[dataengine.42019.618651678240].[none:Order Date:qk]' filter-group='13' included-values='in-range'>
            <min>#2012-01-04#</min>
            <max>#2015-12-31#</max>
          </filter>
          <filter class='categorical' column='[dataengine.42019.618651678240].[none:Region:nk]' filter-group='14'>
            <groupfilter function='level-members' level='[none:Region:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[dataengine.42019.618651678240].[none:Region:nk]</column>
            <column>[dataengine.42019.618651678240].[Action (State)]</column>
            <column>[dataengine.42019.618651678240].[Action (Order Profitable?,MONTH(Order Date),Segment)]</column>
            <column>[dataengine.42019.618651678240].[:Measure Names]</column>
            <column>[dataengine.42019.618651678240].[Action (Order Profitable?,Category,MONTH(Order Date))]</column>
            <column>[dataengine.42019.618651678240].[none:Order Date:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-align' value='center' />
            <format attr='font-weight' value='bold' />
            <format attr='font-size' value='12' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[dataengine.42019.618651678240].[:Measure Names]' value='23' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-align' value='center' />
            <format attr='font-size' field='[dataengine.42019.618651678240].[:Measure Names]' value='8' />
            <format attr='font-family' field='[dataengine.42019.618651678240].[:Measure Names]' value='Tableau Regular' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='line-pattern' scope='cols' value='none' />
            <format attr='line-pattern' scope='rows' value='none' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[dataengine.42019.618651678240].[Multiple Values]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run bold='false' fontname='Tableau Medium'>&lt;</run>
                <run bold='false' fontname='Tableau Medium'>[dataengine.42019.618651678240].[Multiple Values]</run>
                <run bold='false' fontname='Tableau Medium'>&gt;</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols>[dataengine.42019.618651678240].[:Measure Names]</cols>
        <tooltip-style tooltip-mode='none' />
      </table>
    </worksheet>
    <worksheet name='What If Forecast'>
      <layout-options>
        <title>
          <formatted-text>
            <run>What if Forecast Based on </run>
            <run>&lt;</run>
            <run>[dataengine.42019.618651678240].[yr:Order Date:ok]</run>
            <run>&gt;</run>
            <run> Sales (</run>
            <run>&lt;</run>
            <run>[Parameters].[Parameter 1]</run>
            <run>&gt;</run>
            <run> Growth, </run>
            <run>&lt;</run>
            <run>[Parameters].[Parameter 2]</run>
            <run>&gt;</run>
            <run> Churn)</run>
          </formatted-text>
        </title>
        <caption>
          <formatted-text>
            <run fontcolor='#353535'>Change the Growth Rate and Churn Rate to better understand their impact on sales forecasts</run>
          </formatted-text>
        </caption>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sample - Superstore' name='dataengine.42019.618651678240' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='New Business Growth' datatype='real' default-format='p0%' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='0.59999999999999998'>
              <calculation class='tableau' formula='0.59999999999999998' />
              <range granularity='0.01' max='1.0' min='0.0' />
            </column>
            <column caption='Churn Rate' datatype='real' default-format='p0.00%' name='[Parameter 2]' param-domain-type='range' role='measure' type='quantitative' value='0.064000000000000001'>
              <calculation class='tableau' formula='0.064000000000000001' />
              <range granularity='0.001' max='0.25' min='0.0' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='dataengine.42019.618651678240'>
            <column caption='Sales Forecast' datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Calculation_5421109230915137]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Sales]*(1-[Parameters].[Parameter 2])*(1+[Parameters].[Parameter 1])' />
            </column>
            <column caption='SUM([Sales])-SUM([Sales Forecast])' datatype='real' name='[Calculation_9330126204734562]' role='measure' type='quantitative' user:unnamed='WhatIfForecast'>
              <calculation class='tableau' formula='SUM([Sales])-SUM([Calculation_5421109230915137])' />
            </column>
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='integer' name='[Quantity]' role='measure' type='quantitative' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Segment]' role='dimension' type='nominal' />
            <column-instance column='[Order Date]' derivation='Month' name='[mn:Order Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Segment]' derivation='None' name='[none:Segment:nk]' pivot='key' type='nominal' />
            <column-instance column='[Order Date]' derivation='Quarter' name='[qr:Order Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_5421109230915137]' derivation='Sum' name='[sum:Calculation_5421109230915137:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Quantity]' derivation='Sum' name='[sum:Quantity:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_9330126204734562]' derivation='User' name='[usr:Calculation_9330126204734562:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Order Date]' derivation='Year' name='[yr:Order Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[dataengine.42019.618651678240].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[dataengine.42019.618651678240].[sum:Sales:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[dataengine.42019.618651678240].[sum:Calculation_5421109230915137:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[dataengine.42019.618651678240].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[dataengine.42019.618651678240].[sum:Sales:qk]&quot;</bucket>
              <bucket>&quot;[dataengine.42019.618651678240].[sum:Calculation_5421109230915137:qk]&quot;</bucket>
              <bucket>&quot;[dataengine.42019.618651678240].[sum:Quantity:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[dataengine.42019.618651678240].[none:Region:nk]'>
            <groupfilter function='level-members' level='[none:Region:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[dataengine.42019.618651678240].[yr:Order Date:ok]'>
            <groupfilter function='member' level='[yr:Order Date:ok]' member='2014' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[dataengine.42019.618651678240].[yr:Order Date:ok]</column>
            <column>[dataengine.42019.618651678240].[:Measure Names]</column>
            <column>[dataengine.42019.618651678240].[none:Region:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[dataengine.42019.618651678240].[mn:Order Date:ok]' value='' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[dataengine.42019.618651678240].[:Measure Names]' value='124' />
            <format attr='border-width' data-class='subtotal' value='2' />
            <format attr='border-width' data-class='total' scope='rows' value='1' />
            <format attr='border-width' data-class='subtotal' scope='rows' value='1' />
            <format attr='border-width' data-class='subtotal' scope='cols' value='1' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='border-width' data-class='subtotal' value='2' />
            <format attr='border-width' data-class='total' scope='rows' value='1' />
            <format attr='border-width' data-class='subtotal' scope='rows' value='1' />
            <format attr='border-width' data-class='subtotal' scope='cols' value='1' />
            <format attr='border-width' data-class='total' scope='cols' value='1' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='div-level' scope='rows' value='0' />
            <format attr='div-level' scope='cols' value='0' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[dataengine.42019.618651678240].[:Measure Names]' />
              <text column='[dataengine.42019.618651678240].[Multiple Values]' />
              <lod column='[dataengine.42019.618651678240].[usr:Calculation_9330126204734562:qk]' />
              <lod column='[dataengine.42019.618651678240].[sum:Sales:qk]' />
              <lod column='[dataengine.42019.618651678240].[sum:Calculation_5421109230915137:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#d3872a' fontname='Tableau Semibold' fontsize='12'>&lt;[dataengine.42019.618651678240].[none:Region:nk]&gt; &lt;[dataengine.42019.618651678240].[none:Segment:nk]&gt;</run>
                <run fontname='Tableau Medium'>&#10;&lt;[dataengine.42019.618651678240].[mn:Order Date:ok]&gt;</run>
                <run fontcolor='#353535' fontname='Tableau Medium'>Æ </run>
                <run fontcolor='#898989' fontsize='9'>&#10;Actual:&#9;</run>
                <run fontcolor='#555555' fontname='Tableau Bold' fontsize='9'>&lt;[dataengine.42019.618651678240].[sum:Sales:qk]&gt;</run>
                <run fontcolor='#898989' fontsize='9'>&#10;Forecast:</run>
                <run fontcolor='#555555' fontsize='9'>Æ&#9;</run>
                <run fontcolor='#555555' fontname='Tableau Bold' fontsize='9'>&lt;[dataengine.42019.618651678240].[sum:Calculation_5421109230915137:qk]&gt;</run>
                <run fontcolor='#898989' fontsize='9'>&#10;Difference:</run>
                <run fontcolor='#555555' fontsize='9'>Æ&#9;</run>
                <run fontcolor='#555555' fontname='Tableau Bold' fontsize='9'>$&lt;[dataengine.42019.618651678240].[usr:Calculation_9330126204734562:qk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows total='true'>([dataengine.42019.618651678240].[none:Region:nk] / ([dataengine.42019.618651678240].[none:Segment:nk] / [dataengine.42019.618651678240].[:Measure Names]))</rows>
        <cols total='true'>([dataengine.42019.618651678240].[qr:Order Date:ok] / [dataengine.42019.618651678240].[mn:Order Date:ok])</cols>
        <subtotals>
          <column>[dataengine.42019.618651678240].[none:Region:nk]</column>
          <column>[dataengine.42019.618651678240].[none:Segment:nk]</column>
          <column>[dataengine.42019.618651678240].[qr:Order Date:ok]</column>
        </subtotals>
      </table>
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Commission Model'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='0'>Sales Commission Model</run>
          </formatted-text>
        </title>
      </layout-options>
      <style>
        <style-rule element='dash-container'>
          <format attr='border-style' id='dash-zone_12' value='solid' />
          <format attr='border-color' id='dash-zone_12' value='#d7d7d7' />
          <format attr='border-style' id='dash-zone_66' value='solid' />
          <format attr='background-color' id='dash-zone_66' value='#00000000' />
          <format attr='border-color' id='dash-zone_66' value='#acacac' />
        </style-rule>
      </style>
      <size minheight='600' minwidth='800' />
      <zones>
        <zone h='100000' id='7' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='63' param='vert' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='7334' id='62' type='title' w='100000' x='0' y='0' />
            <zone fixed-size='1036' h='69000' id='54' is-fixed='true' param='horz' type='layout-flow' w='100000' x='0' y='7334'>
              <zone fixed-size='1004' h='69000' id='2' is-fixed='true' param='vert' type='layout-flow' w='100000' x='0' y='7334'>
                <zone h='4834' id='4' type='text' w='100000' x='0' y='7334'>
                  <formatted-text>
                    <run fontalignment='0' fontsize='11'>Enter new quota, commission rate and base salary to estimate sales and compensation</run>
                  </formatted-text>
                </zone>
                <zone fixed-size='57' h='9500' id='72' is-fixed='true' type='layout-basic' w='100000' x='0' y='12168'>
                  <zone h='9500' id='5' param='horz' type='layout-flow' w='66667' x='0' y='12168'>
                    <zone custom-title='true' h='9500' id='9' mode='type_in' param='[Parameters].[New Quota]' type='paramctrl' w='22454' x='0' y='12168'>
                      <formatted-text>
                        <run fontcolor='#555555' fontsize='10'>New quota</run>
                      </formatted-text>
                    </zone>
                    <zone custom-title='true' h='9500' id='11' mode='slider' param='[Parameters].[Commission Rate]' type='paramctrl' w='22106' x='22454' y='12168'>
                      <formatted-text>
                        <run fontcolor='#555555' fontsize='10'>Commission rate</run>
                      </formatted-text>
                    </zone>
                    <zone custom-title='true' h='9500' id='10' mode='type_in' param='[Parameters].[Base Salary]' type='paramctrl' w='22106' x='44560' y='12168'>
                      <formatted-text>
                        <run fontcolor='#555555' fontsize='10'>Base salary</run>
                      </formatted-text>
                    </zone>
                  </zone>
                  <zone h='9500' id='73' param='horz' type='layout-flow' w='17577' x='82423' y='12168'>
                    <zone fixed-size='309' h='9500' id='71' is-fixed='true' type='empty' w='17577' x='82423' y='12168' />
                  </zone>
                  <zone custom-title='true' fixed-size='175' h='9500' id='57' is-fixed='true' mode='compact' param='[Parameters].[Parameter 1 1]' type='paramctrl' w='15756' x='66667' y='12168'>
                    <formatted-text>
                      <run fontcolor='#555555' fontsize='10'>Sort by</run>
                    </formatted-text>
                  </zone>
                </zone>
                <zone h='54666' id='64' param='horz' type='layout-flow' w='100000' x='0' y='21668'>
                  <zone h='54666' id='74' name='QuotaAttainment' w='49303' x='0' y='21668'>
                    <layout-cache fixed-size-h='935' minwidth='222' type-h='fixed' type-w='scalable' />
                  </zone>
                  <zone h='54666' id='6' name='CommissionProjection' w='50349' x='49303' y='21668'>
                    <layout-cache fixed-size-h='915' minwidth='238' type-h='fixed' type-w='scalable' />
                  </zone>
                </zone>
              </zone>
            </zone>
            <zone fixed-size='38' h='6333' id='68' is-fixed='true' type='layout-basic' w='100000' x='0' y='76334'>
              <zone h='6333' id='69' param='horz' type='layout-flow' w='49314' x='0' y='76334'>
                <zone h='6333' id='75' name='QuotaAttainment' pane-specification-id='0' param='[Sales Planning new].[usr:Achievement (variable) (copy):nk]' type='color' w='49314' x='0' y='76334' />
              </zone>
              <zone fixed-size='565' h='6333' id='55' is-fixed='true' leg-item-layout='horz' name='CommissionProjection' pane-specification-id='3' param='[Sales Planning new].[:Measure Names]' show-title='false' type='color' w='50686' x='49314' y='76334' />
            </zone>
            <zone fixed-size='104' h='17333' id='66' is-fixed='true' param='horz' type='layout-flow' w='100000' x='0' y='82667'>
              <zone fixed-size='358' h='16000' id='14' is-fixed='true' name='Sales' w='31881' x='522' y='83000'>
                <layout-cache cell-count-h='2' non-cell-size-h='43' type-h='cell' type-w='cell' />
              </zone>
              <zone fixed-size='380' h='16000' id='13' is-fixed='true' name='OTE' w='33797' x='32403' y='83000'>
                <layout-cache cell-count-h='2' non-cell-size-h='43' type-h='cell' type-w='cell' />
              </zone>
              <zone h='16000' id='70' type='empty' w='33278' x='66200' y='83000' />
            </zone>
          </zone>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='Customers'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='0'>Customer Analysis</run>
          </formatted-text>
        </title>
      </layout-options>
      <style>
        <style-rule element='dash-subtitle'>
          <format attr='font-size' value='10' />
        </style-rule>
        <style-rule element='dash-container'>
          <format attr='background-color' id='dash-zone_15' value='#f7f7f7' />
          <format attr='border-style' id='dash-zone_15' value='solid' />
        </style-rule>
      </style>
      <size minheight='620' minwidth='1000' />
      <datasources>
        <datasource caption='Sample - Superstore' name='dataengine.42019.618651678240' />
      </datasources>
      <datasource-dependencies datasource='dataengine.42019.618651678240'>
        <column datatype='string' name='[Category]' role='dimension' type='nominal' />
        <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
        <column datatype='string' name='[Segment]' role='dimension' type='nominal' />
        <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
        <column-instance column='[Segment]' derivation='None' name='[none:Segment:nk]' pivot='key' type='nominal' />
        <column-instance column='[Order Date]' derivation='Year' name='[yr:Order Date:ok]' pivot='key' type='ordinal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='6729' id='9' type='title' w='100000' x='0' y='0' />
          <zone h='93271' id='4' type='layout-basic' w='100000' x='0' y='6729'>
            <zone h='93271' id='21' param='vert' type='layout-flow' w='100000' x='0' y='6729'>
              <zone h='19516' id='1' name='CustomerOverview' show-title='false' w='100000' x='0' y='6729'>
                <layout-cache fixed-size-h='113' type-h='fixed' type-w='fixed' />
              </zone>
              <zone h='73755' id='22' param='horz' type='layout-flow' w='100000' x='0' y='26245'>
                <zone h='73755' id='3' name='CustomerScatter' w='40331' x='0' y='26245'>
                  <layout-cache minheight='197' minwidth='184' type-h='scalable' type-w='scalable' />
                </zone>
                <zone h='73755' id='8' name='CustomerRank' w='44861' x='40331' y='26245'>
                  <layout-cache fixed-size-h='15958' minwidth='240' type-h='fixed' type-w='scalable' />
                </zone>
                <zone fixed-size='170' h='73755' id='15' is-fixed='true' param='vert' type='layout-flow' w='14808' x='85192' y='26245'>
                  <zone h='8387' id='14' mode='dropdown' name='CustomerOverview' param='[dataengine.42019.618651678240].[yr:Order Date:ok]' type='filter' w='14112' x='85366' y='26568' />
                  <zone h='17419' id='18' name='CustomerOverview' param='[dataengine.42019.618651678240].[none:Category:nk]' type='filter' w='14112' x='85366' y='34955' />
                  <zone h='17419' id='17' name='CustomerOverview' param='[dataengine.42019.618651678240].[none:Segment:nk]' type='filter' w='14112' x='85366' y='52374' />
                  <zone h='10484' id='27' name='CustomerScatter' pane-specification-id='0' param='[dataengine.42019.618651678240].[usr:Calculation_9921103144103743:qk]' type='color' w='14112' x='85366' y='69793' />
                  <zone h='18755' id='19' type='empty' w='14112' x='85366' y='80277' />
                </zone>
              </zone>
            </zone>
          </zone>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='Order Details'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='0'>&lt;</run>
            <run fontalignment='0'>Sheet Name</run>
            <run fontalignment='0'>&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <style>
        <style-rule element='dash-container'>
          <format attr='border-style' id='dash-zone_10' value='solid' />
          <format attr='border-color' id='dash-zone_10' value='#d7d7d7' />
        </style-rule>
      </style>
      <size minheight='600' minwidth='800' />
      <datasources>
        <datasource caption='Sample - Superstore' name='dataengine.42019.618651678240' />
      </datasources>
      <datasource-dependencies datasource='dataengine.42019.618651678240'>
        <column datatype='string' name='[Category]' role='dimension' type='nominal' />
        <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
        <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
        <column datatype='string' name='[Region]' role='dimension' type='nominal' />
        <column datatype='string' name='[Segment]' role='dimension' type='nominal' />
        <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
        <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
        <column-instance column='[City]' derivation='None' name='[none:City:nk]' pivot='key' type='nominal' />
        <column-instance column='[Order Date]' derivation='None' name='[none:Order Date:qk]' pivot='key' type='quantitative' />
        <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
        <column-instance column='[Segment]' derivation='None' name='[none:Segment:nk]' pivot='key' type='nominal' />
        <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='18' param='vert' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='7668' id='17' type='title' w='100000' x='0' y='0' />
            <zone h='91665' id='7' param='horz' type='layout-flow' w='100000' x='0' y='7668'>
              <zone h='91665' id='5' param='vert' type='layout-flow' w='100000' x='0' y='7668'>
                <zone fixed-size='77' h='12833' id='10' is-fixed='true' param='horz' type='layout-flow' w='100000' x='0' y='7668'>
                  <zone h='12167' id='13' name='ProductDetailSheet' param='[dataengine.42019.618651678240].[none:Order Date:qk]' show-domain='false' show-null-ctrls='false' type='filter' w='25791' x='522' y='8001' />
                  <zone h='12167' id='14' mode='checkdropdown' name='ProductDetailSheet' param='[dataengine.42019.618651678240].[none:Region:nk]' type='filter' w='14633' x='26313' y='8001' />
                  <zone h='12167' id='15' mode='checkdropdown' name='ProductDetailSheet' param='[dataengine.42019.618651678240].[none:State:nk]' type='filter' values='relevant' w='14633' x='40946' y='8001' />
                  <zone h='12167' id='16' mode='checkdropdown' name='ProductDetailSheet' param='[dataengine.42019.618651678240].[none:City:nk]' type='filter' values='relevant' w='14633' x='55579' y='8001' />
                  <zone h='12167' id='8' mode='checkdropdown' name='ProductDetailSheet' param='[dataengine.42019.618651678240].[none:Category:nk]' type='filter' values='relevant' w='14633' x='70212' y='8001' />
                  <zone h='12167' id='9' mode='checkdropdown' name='ProductDetailSheet' param='[dataengine.42019.618651678240].[none:Segment:nk]' type='filter' values='relevant' w='14633' x='84845' y='8001' />
                </zone>
                <zone h='78832' id='3' type='layout-basic' w='100000' x='0' y='20501'>
                  <zone h='78832' id='1' name='ProductDetailSheet' w='100000' x='0' y='20501' />
                </zone>
              </zone>
            </zone>
          </zone>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='Overview'>
      <layout-options export-center-horz='true' export-center-vert='true' export-orientation='landscape'>
        <title>
          <formatted-text>
            <run>Executive Overview - Profitability</run>
          </formatted-text>
        </title>
      </layout-options>
      <style>
        <style-rule element='dash-subtitle'>
          <format attr='font-size' value='10' />
        </style-rule>
        <style-rule element='dash-container'>
          <format attr='background-color' id='dash-zone_18' value='#f7f7f7' />
          <format attr='border-style' id='dash-zone_18' value='solid' />
          <format attr='border-color' id='dash-zone_18' value='#d7d7d7' />
        </style-rule>
      </style>
      <size minheight='620' minwidth='1000' />
      <datasources>
        <datasource caption='Sample - Superstore' name='dataengine.42019.618651678240' />
      </datasources>
      <datasource-dependencies datasource='dataengine.42019.618651678240'>
        <column caption='Profit Ratio' datatype='real' default-format='p0.0%' name='[Calculation_9921103144103743]' role='measure' type='quantitative'>
          <calculation class='tableau' formula='sum([Profit])/sum([Sales])' />
        </column>
        <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
        <column datatype='string' name='[Region]' role='dimension' type='nominal' />
        <column-instance column='[Order Date]' derivation='None' name='[none:Order Date:qk]' pivot='key' type='quantitative' />
        <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
        <column-instance column='[Calculation_9921103144103743]' derivation='User' name='[usr:Calculation_9921103144103743:qk]' pivot='key' type='quantitative' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='12' param='vert' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='17258' id='32' name='Total Sales' w='100000' x='0' y='0'>
              <layout-cache fixed-size-h='95' type-h='fixed' type-w='fixed' />
            </zone>
            <zone fixed-size='352' h='56774' id='26' is-fixed='true' param='horz' type='layout-flow' w='100000' x='0' y='17258'>
              <zone h='56774' id='1' name='Sale Map' show-title='false' w='82840' x='0' y='17258'>
                <layout-cache minheight='201' minwidth='201' type-h='scalable' type-w='scalable' />
              </zone>
              <zone fixed-size='197' h='56774' id='18' is-fixed='true' param='vert' type='layout-flow' w='17160' x='82840' y='17258'>
                <zone h='10000' id='17' mode='dropdown' name='Sale Map' param='[dataengine.42019.618651678240].[none:Region:nk]' type='filter' w='16464' x='83014' y='17581' />
                <zone h='12742' id='16' name='Sale Map' param='[dataengine.42019.618651678240].[none:Order Date:qk]' show-null-ctrls='false' type='filter' w='16464' x='83014' y='27581' />
                <zone h='12742' id='24' name='Sale Map' param='[dataengine.42019.618651678240].[usr:Calculation_9921103144103743:qk]' show-domain='false' show-null-ctrls='false' type='filter' w='16464' x='83014' y='40323' />
                <zone h='10484' id='27' name='Sale Map' pane-specification-id='2' param='[dataengine.42019.618651678240].[usr:Calculation_9921103144103743:qk]' type='color' w='16464' x='83014' y='53065' />
                <zone h='7742' id='23' name='Sales by Segment' pane-specification-id='3' param='[dataengine.42019.618651678240].[none:Calculation_9060122104947471:nk]' show-title='false' type='color' w='16464' x='83014' y='63549' />
              </zone>
            </zone>
            <zone h='25968' id='22' param='horz' type='layout-flow' w='100000' x='0' y='74032'>
              <zone h='25968' id='8' name='Sales by Segment' w='49825' x='0' y='74032'>
                <layout-cache minheight='367' minwidth='242' type-h='scalable' type-w='scalable' />
              </zone>
              <zone h='25968' id='10' name='Sales by Product' w='49826' x='49825' y='74032'>
                <layout-cache minheight='367' minwidth='246' type-h='scalable' type-w='scalable' />
              </zone>
            </zone>
          </zone>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout name='Phone'>
          <layout-options export-center-horz='true' export-center-vert='true' export-orientation='landscape'>
            <title>
              <formatted-text>
                <run fontsize='11'>Executive Overview - Profitability</run>
              </formatted-text>
            </title>
          </layout-options>
          <size maxheight='320' minheight='320' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
              <zone h='100000' id='36' param='vert' type='layout-flow' w='100000' x='0' y='0'>
                <zone h='10313' id='33' type='title' w='100000' x='0' y='0' />
                <zone h='89687' id='12' param='vert' type='layout-flow' w='100000' x='0' y='10313'>
                  <zone fixed-size='386' h='89687' id='26' is-fixed='true' param='horz' type='layout-flow' w='100000' x='0' y='10313'>
                    <zone h='89687' id='1' name='Sale Map' show-title='false' w='72714' x='0' y='10313'>
                      <layout-cache minheight='201' minwidth='201' type-h='scalable' type-w='scalable' />
                    </zone>
                    <zone fixed-size='182' h='89687' id='18' is-fixed='true' param='vert' type='layout-flow' w='27286' x='72714' y='10313'>
                      <zone h='19375' id='17' mode='dropdown' name='Sale Map' param='[dataengine.42019.618651678240].[none:Region:nk]' type='filter' w='26086' x='73014' y='10938' />
                      <zone h='23749' id='16' name='Sale Map' param='[dataengine.42019.618651678240].[none:Order Date:qk]' show-null-ctrls='false' type='filter' w='26086' x='73014' y='30313' />
                      <zone h='23749' id='24' name='Sale Map' param='[dataengine.42019.618651678240].[usr:Calculation_9921103144103743:qk]' type='filter' w='26086' x='73014' y='54062' />
                      <zone h='20314' id='27' name='Sale Map' pane-specification-id='2' param='[dataengine.42019.618651678240].[usr:Calculation_9921103144103743:qk]' type='color' w='26086' x='73014' y='77811' />
                    </zone>
                  </zone>
                </zone>
              </zone>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
    </dashboard>
    <dashboard name='Product'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='0'>Product Drilldown</run>
          </formatted-text>
        </title>
      </layout-options>
      <style>
        <style-rule element='dash-subtitle'>
          <format attr='font-size' value='10' />
        </style-rule>
        <style-rule element='dash-container'>
          <format attr='border-style' id='dash-zone_13' value='solid' />
          <format attr='background-color' id='dash-zone_13' value='#f7f7f7' />
          <format attr='background-color' id='dash-zone_20' value='#f7f7f7' />
          <format attr='border-style' id='dash-zone_20' value='solid' />
          <format attr='border-color' id='dash-zone_20' value='#c0c0c0' />
        </style-rule>
      </style>
      <size minheight='620' minwidth='1000' />
      <datasources>
        <datasource caption='Sample - Superstore' name='dataengine.42019.618651678240' />
      </datasources>
      <datasource-dependencies datasource='dataengine.42019.618651678240'>
        <column datatype='string' name='[Region]' role='dimension' type='nominal' />
        <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='16' param='horz' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='100000' id='14' param='horz' type='layout-flow' w='99652' x='0' y='0'>
              <zone h='100000' id='12' param='horz' type='layout-flow' w='99652' x='0' y='0'>
                <zone h='100000' id='10' param='vert' type='layout-flow' w='99652' x='0' y='0'>
                  <zone h='7419' id='9' type='title' w='99652' x='0' y='0' />
                  <zone h='92581' id='5' param='horz' type='layout-flow' w='99652' x='0' y='7419'>
                    <zone h='92581' id='3' type='layout-basic' w='99652' x='0' y='7419'>
                      <zone h='42705' id='1' name='ProductView' w='86779' x='0' y='7419' />
                      <zone h='49876' id='8' name='ProductDetails' w='86779' x='0' y='50124' />
                      <zone h='92581' id='20' param='vert' type='layout-flow' w='12873' x='86779' y='7419'>
                        <zone h='8387' id='26' mode='dropdown' name='ProductDetails' param='[dataengine.42019.618651678240].[none:Region:nk]' type='filter' w='12525' x='86953' y='7742' />
                        <zone h='10484' id='22' name='ProductView' pane-specification-id='0' param='[dataengine.42019.618651678240].[sum:Sales:qk]' type='color' w='12525' x='86953' y='16129' />
                        <zone h='10484' id='23' name='ProductDetails' pane-specification-id='0' param='[dataengine.42019.618651678240].[usr:Calculation_9921103144103743:qk]' type='color' w='12525' x='86953' y='26613' />
                        <zone h='61935' id='24' type='empty' w='12525' x='86953' y='37097' />
                      </zone>
                    </zone>
                  </zone>
                </zone>
              </zone>
            </zone>
          </zone>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout name='Phone'>
          <layout-options>
            <title>
              <formatted-text>
                <run fontname='Tableau Medium' fontsize='12'>Product &#10;Drilldown</run>
              </formatted-text>
            </title>
          </layout-options>
          <size maxheight='380' minheight='380' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
              <zone h='100000' id='16' param='horz' type='layout-flow' w='100000' x='0' y='0'>
                <zone h='100000' id='14' param='horz' type='layout-flow' w='99400' x='0' y='0'>
                  <zone h='100000' id='12' param='horz' type='layout-flow' w='99400' x='0' y='0'>
                    <zone h='100000' id='10' param='vert' type='layout-flow' w='99400' x='0' y='0'>
                      <zone fixed-size='76' h='20000' id='27' is-fixed='true' param='horz' type='layout-flow' w='99400' x='0' y='0'>
                        <zone fixed-size='222' h='20000' id='9' is-fixed='true' type='title' w='35083' x='0' y='0' />
                        <zone h='20000' id='26' mode='dropdown' name='ProductDetails' param='[dataengine.42019.618651678240].[none:Region:nk]' type='filter' w='25188' x='35083' y='0' />
                        <zone h='20000' id='23' name='ProductDetails' pane-specification-id='0' param='[dataengine.42019.618651678240].[usr:Calculation_9921103144103743:qk]' type='color' w='39129' x='60271' y='0' />
                      </zone>
                      <zone h='80000' id='5' param='horz' type='layout-flow' w='99400' x='0' y='20000'>
                        <zone h='80000' id='3' type='layout-basic' w='99400' x='0' y='20000'>
                          <zone h='80000' id='8' name='ProductDetails' show-title='false' w='99400' x='0' y='20000' />
                        </zone>
                      </zone>
                    </zone>
                  </zone>
                </zone>
              </zone>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
    </dashboard>
    <dashboard name='Shipping'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='0'>On-Time Shipment Trends</run>
          </formatted-text>
        </title>
      </layout-options>
      <style>
        <style-rule element='dash-container'>
          <format attr='border-style' id='dash-zone_22' value='solid' />
          <format attr='border-color' id='dash-zone_22' value='#f7f7f7' />
          <format attr='background-color' id='dash-zone_22' value='#00000000' />
          <format attr='border-color' id='dash-zone_26' value='#c0c0c0' />
          <format attr='border-style' id='dash-zone_26' value='none' />
          <format attr='background-color' id='dash-zone_31' value='#f7f7f7' />
          <format attr='border-style' id='dash-zone_31' value='solid' />
          <format attr='border-color' id='dash-zone_31' value='#d7d7d7' />
        </style-rule>
      </style>
      <size minheight='620' minwidth='1000' />
      <datasources>
        <datasource caption='Sample - Superstore' name='dataengine.42019.618651678240' />
      </datasources>
      <datasource-dependencies datasource='dataengine.42019.618651678240'>
        <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
        <column datatype='string' name='[Region]' role='dimension' type='nominal' />
        <column datatype='string' name='[Ship Mode]' role='dimension' type='nominal' />
        <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
        <column-instance column='[Ship Mode]' derivation='None' name='[none:Ship Mode:nk]' pivot='key' type='nominal' />
        <column-instance column='[Order Date]' derivation='Quarter' name='[qr:Order Date:ok]' pivot='key' type='ordinal' />
        <column-instance column='[Order Date]' derivation='Year' name='[yr:Order Date:ok]' pivot='key' type='ordinal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='92459' id='35' param='vert' type='layout-flow' w='88947' x='0' y='7541'>
            <zone fixed-size='53' h='9838' id='19' is-fixed='true' name='ShipSummary' show-title='false' w='88947' x='0' y='7541'>
              <layout-cache type-h='cell' type-w='fixed' />
            </zone>
            <zone fixed-size='270' h='44838' id='1' is-fixed='true' name='ShippingTrend' show-title='false' w='88947' x='0' y='17379'>
              <layout-cache minheight='130' type-h='scalable' type-w='fixed' />
            </zone>
            <zone h='37783' id='3' name='DaystoShip' w='88947' x='0' y='62217'>
              <layout-cache fixed-size-h='24321' type-h='fixed' type-w='fixed' />
            </zone>
          </zone>
          <zone h='92459' id='37' param='horz' type='layout-flow' w='11053' x='88947' y='7541'>
            <zone fixed-size='80' h='92459' id='31' is-fixed='true' param='vert' type='layout-flow' w='11053' x='88947' y='7541'>
              <zone h='17419' id='15' mode='radiolist' name='ShippingTrend' param='[dataengine.42019.618651678240].[yr:Order Date:ok]' show-all='false' type='filter' w='10357' x='89121' y='7864' />
              <zone h='20484' id='16' mode='radiolist' name='ShippingTrend' param='[dataengine.42019.618651678240].[qr:Order Date:ok]' type='filter' w='10357' x='89121' y='25283' />
              <zone h='20484' id='34' mode='radiolist' name='ShippingTrend' param='[dataengine.42019.618651678240].[none:Region:nk]' type='filter' w='10357' x='89121' y='45767' />
              <zone h='20484' id='27' name='ShippingTrend' param='[dataengine.42019.618651678240].[none:Ship Mode:nk]' type='filter' w='10357' x='89121' y='66251' />
              <zone h='12297' id='33' type='empty' w='10357' x='89121' y='86735' />
            </zone>
          </zone>
          <zone h='7541' id='10' type='title' w='100000' x='0' y='0' />
        </zone>
      </zones>
    </dashboard>
  </dashboards>
  <windows source-height='72'>
    <window class='dashboard' name='Overview'>
      <viewpoints>
        <viewpoint name='Sale Map'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[dataengine.42019.618651678240].[usr:Calculation_9921103144103743:qk]</field>
              <field>[excel-direct.41946.598980972223].[sum:Sales:qk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='Sales by Product'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Sales by Segment'>
          <zoom type='entire-view' />
          <highlight field='[dataengine.42019.618651678240].[none:Calculation_9060122104947471:nk]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
        <viewpoint name='Total Sales'>
          <zoom type='fit-width' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <device-preview>
        <device is-portrait='false' name='iPhone 6' type='Phone' />
      </device-preview>
    </window>
    <window class='dashboard' name='Product'>
      <viewpoints>
        <viewpoint name='ProductDetails'>
          <zoom type='fit-width' />
          <highlight>
            <color-one-way>
              <field>[dataengine.42016.671153020834].[usr:Calculation_0561103150105895:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='ProductView'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[dataengine.42016.671153020834].[sum:Sales:qk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <device-preview>
        <device is-portrait='false' name='iPhone 6' type='Phone' />
      </device-preview>
    </window>
    <window class='dashboard' name='Customers'>
      <viewpoints>
        <viewpoint name='CustomerOverview'>
          <zoom type='fit-width' />
        </viewpoint>
        <viewpoint name='CustomerRank' />
        <viewpoint name='CustomerScatter'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[dataengine.42019.618651678240].[usr:Calculation_9921103144103743:qk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='-1' />
    </window>
    <window class='dashboard' name='Shipping'>
      <viewpoints>
        <viewpoint name='DaystoShip' />
        <viewpoint name='ShipSummary'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='ShippingTrend'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[excel-direct.41946.598980972223].[none:Calculation_6401103171259723:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='-1' />
    </window>
    <window class='worksheet' name='Performance'>
      <cards>
        <edge name='left'>
          <strip size='153'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='82'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='radiolist' param='[dataengine.42019.618651678240].[yr:Order Date:ok]' type='filter' />
            <card pane-specification-id='0' param='[dataengine.42019.618651678240].[usr:Calculation_9951107165644870:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[dataengine.42016.671153020834].[usr:Calculation_9951107165644870:nk]</field>
            <field>[dataengine.42019.618651678240].[none:Calculation_812899745105993729:qk]</field>
            <field>[excel-direct.41946.598980972223].[none:ProductCategory:nk]</field>
            <field>[excel-direct.41946.598980972223].[none:Segment:nk]</field>
            <field>[excel-direct.41946.598980972223].[qr:OrderDate:ok]</field>
            <field>[excel-direct.41946.598980972223].[yr:OrderDate:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='dashboard' name='Commission Model'>
      <viewpoints>
        <viewpoint name='CommissionProjection'>
          <highlight field='[Sales Planning new].[:Measure Names]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
        <viewpoint name='OTE'>
          <zoom type='entire-view' />
          <geo-search-visibility value='1' />
        </viewpoint>
        <viewpoint name='QuotaAttainment' />
        <viewpoint name='Sales'>
          <zoom type='entire-view' />
          <geo-search-visibility value='1' />
        </viewpoint>
      </viewpoints>
      <active id='6' />
    </window>
    <window class='dashboard' name='Order Details'>
      <viewpoints>
        <viewpoint name='ProductDetailSheet'>
          <zoom type='fit-width' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
    </window>
    <window class='worksheet' name='Forecast'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='70'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='188'>
            <card pane-specification-id='2' param='[dataengine.42019.618651678240].[none:Segment:nk]&#10;[dataengine.42019.618651678240].[none:Forecast Indicator:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[dataengine.42016.671153020834].[none:Forecast Indicator:nk]</field>
            <field>[dataengine.42019.618651678240].[none:Forecast Indicator:nk]</field>
            <field>[dataengine.42019.618651678240].[none:Segment:nk]</field>
            <field>[excel-direct.41946.598980972223].[none:OrderDate:qk]</field>
            <field>[excel-direct.41946.598980972223].[none:ProductCategory:nk]</field>
            <field>[excel-direct.41946.598980972223].[none:Segment:nk]</field>
            <field>[excel-direct.41946.598980972223].[yr:OrderDate:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' maximized='true' name='What If Forecast'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='74'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='200'>
            <card mode='slider' param='[Parameters].[Parameter 1]' type='parameter' />
            <card mode='slider' param='[Parameters].[Parameter 2]' type='parameter' />
            <card type='caption' />
            <card pane-specification-id='0' param='[dataengine.42019.618651678240].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[dataengine.42016.671153020834].[:Measure Names]</field>
            <field>[dataengine.42019.618651678240].[:Measure Names]</field>
            <field>[dataengine.42019.618651678240].[yr:Order Date:ok]</field>
            <field>[excel-direct.41946.598980972223].[none:ProductCategory:nk]</field>
            <field>[excel-direct.41946.598980972223].[none:Region:nk]</field>
            <field>[excel-direct.41946.598980972223].[none:Segment:nk]</field>
            <field>[excel-direct.41946.598980972223].[yr:OrderDate:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' hidden='true' name='CommissionProjection'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
            <card pane-specification-id='3' param='[Sales Planning new].[:Measure Names]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='type_in' param='[Parameters].[New Quota]' type='parameter' />
            <card mode='compact' param='[Parameters].[Parameter 1 1]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <geo-search-visibility value='1' />
      </viewpoint>
    </window>
    <window class='worksheet' hidden='true' name='CustomerOverview'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[dataengine.42019.618651678240].[:Measure Names]</field>
            <field>[dataengine.42019.618651678240].[usr:Calculation_9921103144103743:qk]</field>
            <field>[excel-direct.41946.598980972223].[none:CustomerID:nk]</field>
            <field>[excel-direct.41946.598980972223].[none:ProductCategory:nk]</field>
            <field>[excel-direct.41946.598980972223].[none:Region:nk]</field>
            <field>[excel-direct.41946.598980972223].[none:Segment:nk]</field>
            <field>[excel-direct.41946.598980972223].[qr:OrderDate:ok]</field>
            <field>[excel-direct.41946.598980972223].[usr:Calculation_0561103150105895:nk]</field>
            <field>[excel-direct.41946.598980972223].[yr:OrderDate:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' hidden='true' name='CustomerRank'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[dataengine.42019.618651678240].[none:AdhocCluster:2:ok]</field>
            <field>[excel-direct.41946.598980972223].[none:CustomerName:nk]</field>
            <field>[excel-direct.41946.598980972223].[usr:Calculation_0561103150105895:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' hidden='true' name='CustomerScatter'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[dataengine.42019.618651678240].[usr:Calculation_9921103144103743:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[dataengine.42019.618651678240].[Customer Name &amp; Region (clusters)]</field>
            <field>[dataengine.42019.618651678240].[none:Region:nk]</field>
            <field>[excel-direct.41946.598980972223].[none:CustomerID:nk]</field>
            <field>[excel-direct.41946.598980972223].[none:CustomerName:nk]</field>
            <field>[excel-direct.41946.598980972223].[usr:Calculation_0561103150105895:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' hidden='true' name='DaystoShip'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[dataengine.42019.618651678240].[none:Calculation_6401103171259723:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[dataengine.42019.618651678240].[none:Customer Name:nk]</field>
            <field>[dataengine.42019.618651678240].[none:Order ID:nk]</field>
            <field>[dataengine.42019.618651678240].[none:Ship Mode:nk]</field>
            <field>[excel-direct.41946.598980972223].[none:Calculation_1331103172136889:nk]</field>
            <field>[excel-direct.41946.598980972223].[none:Calculation_6401103171259723:nk]</field>
            <field>[excel-direct.41946.598980972223].[none:CustomerID:nk]</field>
            <field>[excel-direct.41946.598980972223].[none:CustomerName:nk]</field>
            <field>[excel-direct.41946.598980972223].[none:OrderDate:qk]</field>
            <field>[excel-direct.41946.598980972223].[none:OrderID:nk]</field>
            <field>[excel-direct.41946.598980972223].[none:ProductName:nk]</field>
            <field>[excel-direct.41946.598980972223].[none:RowID:ok]</field>
            <field>[excel-direct.41946.598980972223].[yr:OrderDate:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' hidden='true' name='OTE'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <geo-search-visibility value='1' />
      </viewpoint>
    </window>
    <window class='worksheet' hidden='true' name='ProductDetailSheet'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-width' />
        <highlight>
          <color-one-way>
            <field>[dataengine.42019.618651678240].[none:Category:nk]</field>
            <field>[dataengine.42019.618651678240].[none:City:nk]</field>
            <field>[dataengine.42019.618651678240].[none:Customer Name:nk]</field>
            <field>[dataengine.42019.618651678240].[none:Order Date:qk]</field>
            <field>[dataengine.42019.618651678240].[none:Order ID:nk]</field>
            <field>[dataengine.42019.618651678240].[none:Postal Code:ok]</field>
            <field>[dataengine.42019.618651678240].[none:Product Name:nk]</field>
            <field>[dataengine.42019.618651678240].[none:Region:nk]</field>
            <field>[dataengine.42019.618651678240].[none:Segment:nk]</field>
            <field>[dataengine.42019.618651678240].[none:Ship Date:qk]</field>
            <field>[dataengine.42019.618651678240].[none:Ship Mode:nk]</field>
            <field>[dataengine.42019.618651678240].[none:State:nk]</field>
            <field>[dataengine.42019.618651678240].[yr:Order Date:ok]</field>
            <field>[dataengine.42019.618651678240].[yr:Ship Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' hidden='true' name='ProductDetails'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[dataengine.42019.618651678240].[usr:Calculation_9921103144103743:qk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[dataengine.42019.618651678240].[none:Category:nk]</field>
            <field>[dataengine.42019.618651678240].[usr:Calculation_9921103144103743:qk]</field>
            <field>[excel-direct.41946.598980972223].[:Measure Names]</field>
            <field>[excel-direct.41946.598980972223].[mn:OrderDate:ok]</field>
            <field>[excel-direct.41946.598980972223].[none:OrderDate:qk]</field>
            <field>[excel-direct.41946.598980972223].[none:ProductCategory:nk]</field>
            <field>[excel-direct.41946.598980972223].[none:ProductName:nk]</field>
            <field>[excel-direct.41946.598980972223].[none:ProductSub-Category:nk]</field>
            <field>[excel-direct.41946.598980972223].[none:Region:nk]</field>
            <field>[excel-direct.41946.598980972223].[none:Segment:nk]</field>
            <field>[excel-direct.41946.598980972223].[usr:Calculation_0561103150105895:nk]</field>
            <field>[excel-direct.41946.598980972223].[yr:OrderDate:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' hidden='true' name='ProductView'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[dataengine.42019.618651678240].[yr:Order Date:ok]</field>
            <field>[excel-direct.41946.598980972223].[none:OrderDate:qk]</field>
            <field>[excel-direct.41946.598980972223].[none:ProductCategory:nk]</field>
            <field>[excel-direct.41946.598980972223].[none:ProductSub-Category:nk]</field>
            <field>[excel-direct.41946.598980972223].[none:Region:nk]</field>
            <field>[excel-direct.41946.598980972223].[none:Segment:nk]</field>
            <field>[excel-direct.41946.598980972223].[none:State:nk]</field>
            <field>[excel-direct.41946.598980972223].[qr:OrderDate:ok]</field>
            <field>[excel-direct.41946.598980972223].[sum:Sales:qk]</field>
            <field>[excel-direct.41946.598980972223].[usr:Calculation_0561103150105895:nk]</field>
            <field>[excel-direct.41946.598980972223].[yr:OrderDate:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' hidden='true' name='QuotaAttainment'>
      <cards>
        <edge name='left'>
          <strip size='229'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[Sales Planning new].[usr:Achievement (variable) (copy):nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='type_in' param='[Parameters].[New Quota]' type='parameter' />
            <card mode='compact' param='[Parameters].[Parameter 1 1]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[Sales Planning new].[none:Sales Person:nk]</field>
            <field>[Sales Planning new].[usr:Achievement (variable) (copy):nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' hidden='true' name='Sale Map'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='2' param='[dataengine.42019.618651678240].[usr:Calculation_9921103144103743:qk]' type='color' />
            <card pane-specification-id='2' param='[dataengine.42019.618651678240].[sum:Sales:qk]' type='size' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[dataengine.42019.618651678240].[none:Postal Code:ok]</field>
            <field>[dataengine.42019.618651678240].[usr:Calculation_9921103144103743:qk]</field>
            <field>[excel-direct.41946.598980972223].[none:OrderDate:ok]</field>
            <field>[excel-direct.41946.598980972223].[none:OrderDate:qk]</field>
            <field>[excel-direct.41946.598980972223].[none:PostalCode:ok]</field>
            <field>[excel-direct.41946.598980972223].[none:Region:nk]</field>
            <field>[excel-direct.41946.598980972223].[sum:Sales:qk]</field>
            <field>[excel-direct.41946.598980972223].[yr:OrderDate:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' hidden='true' name='Sales'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <geo-search-visibility value='1' />
      </viewpoint>
    </window>
    <window class='worksheet' hidden='true' name='Sales by Product'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='4' param='[dataengine.42019.618651678240].[none:Calculation_9060122104947471:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[dataengine.42019.618651678240].[none:Calculation_9060122104947471:nk]</field>
            <field>[excel-direct.41946.598980972223].[none:Calculation_0351103145857149:nk]</field>
            <field>[excel-direct.41946.598980972223].[none:ProductCategory:nk]</field>
            <field>[excel-direct.41946.598980972223].[none:Segment:nk]</field>
            <field>[excel-direct.41946.598980972223].[usr:Calculation_0561103150105895:nk]</field>
            <field>[excel-direct.41946.598980972223].[yr:OrderDate:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' hidden='true' name='Sales by Segment'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='3' param='[dataengine.42019.618651678240].[none:Calculation_9060122104947471:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[dataengine.42019.618651678240].[none:Calculation_9060122104947471:nk]</field>
            <field>[dataengine.42019.618651678240].[none:Order Date:qk]</field>
            <field>[dataengine.42019.618651678240].[yr:Order Date:ok]</field>
            <field>[excel-direct.41946.598980972223].[none:Segment:nk]</field>
            <field>[excel-direct.41946.598980972223].[none:State:nk]</field>
            <field>[excel-direct.41946.598980972223].[usr:Calculation_0561103150105895:nk]</field>
            <field>[excel-direct.41946.598980972223].[yr:OrderDate:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' hidden='true' name='ShipSummary'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-height' />
        <highlight>
          <color-one-way>
            <field>[excel-direct.41946.598980972223].[:Measure Names]</field>
            <field>[excel-direct.41946.598980972223].[none:Calculation_6401103171259723:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' hidden='true' name='ShippingTrend'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[excel-direct.41946.598980972223].[none:Calculation_6401103171259723:nk]</field>
            <field>[excel-direct.41946.598980972223].[none:ProductCategory:nk]</field>
            <field>[excel-direct.41946.598980972223].[none:Region:nk]</field>
            <field>[excel-direct.41946.598980972223].[none:Segment:nk]</field>
            <field>[excel-direct.41946.598980972223].[none:ShipMode:nk]</field>
            <field>[excel-direct.41946.598980972223].[qr:OrderDate:ok]</field>
            <field>[excel-direct.41946.598980972223].[tmn:OrderDate:qk]</field>
            <field>[excel-direct.41946.598980972223].[tyr:OrderDate:qk]</field>
            <field>[excel-direct.41946.598980972223].[yr:OrderDate:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' hidden='true' name='Total Sales'>
      <cards>
        <edge name='left'>
          <strip size='275'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='8'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[dataengine.42019.618651678240].[:Measure Names]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Commission Model' width='192'>
      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
      AElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Customers' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Forecast' width='192'>
      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
      TkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Order Details' width='192'>
      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
      RU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Overview' width='192'>
      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
      +P8BjfrOHeSN1bsAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='384' name='Performance' width='384'>
      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
    </thumbnail>
    <thumbnail height='192' name='Product' width='192'>
      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
      y3/AeL2C2kjTNCNUS1Umly+Suv4eqi4haUXKpSbzL7380A/B6nepVtssnnGTWl2nGRF46Q//
      Ka1KhdzWTZwukXLmEFmxUyk2GVu5SHH7Or7xsw+xOEC3lkf0jtIvb1PJJFBcPtq1OpGJKbKp
      FJ1ygZZqMeSTCIwtodAlNPFwdZhBW9tUqx3iS04SN2/SVEXcThM84xys3WBi6Sz7W3uMj4kc
      1JzMzT/DWyLvbbWFhfCAPvJhvz8QDzvs3h0jj9pB8ig87Pxvk93P39+95z/s9y9i9wu09T7H
      tyyTYj6Ljo1YNHJXXbc1CFAfMLQYfRUd5bZ85ZeFafSpN9r4/D5ajTpuX4B+r4tid6L32vQM
      EZ/HhWmafJrt3JMFMrn51t/gm38RoX5A03CzfP4s/U6NTLbE1OwctcN1NMco5Z1PccbmmZoa
      P3b9gF2gfU8psNYq8eE77/H893+bQmqHyflzyJJA5XCLw6LK1FiA7d08i0uTbNzcYOnFV3He
      Uwm5t3PAeupzlXKL0tYnSKEZZL2Gqgn4QwEq2UPCM+eRBY381g2ckWlEs4niHcfSSuiWG7ff
      e8zu7766RPkueSBMnbV3f0po8WWM8j6We4SxyTF6rQrlcoNYJMDmzVtMnX+e9LWPsMdmmbxH
      KjbslCh2jq849OoFbl65wvJLr3Kwdp2xle/gcduppjepNCE2ZOcw22B6boydtQ3mn3sF2z1U
      5lGXfEzSFSyyG59S6dmYiAc4uK1kI9DMbKK54lR3PsUencOvaGSKbRbPnT9mUxIGG3juZp1W
      a1luXLnKuZdfY//mFUYWXyQY8JDbvkpPDhN06WTyLRbOnye9cf0BI58Fmc1rpKxhvqcI1FWI
      +mzkqnWuf/Ipz7/6PTyKRa2pMhILcZir4O5nOJTnCFFnZHyKSjaJYPfhdDoQLROvz/dYLGjN
      eo1yLkM26wAJ5EoTvVdnbOwMrVqJXLHBhecHMqnljn68Fsios7ZT4fyiHZsjRGo3QXh2AVO1
      yNUaeJoN1jdWsUI+Qp4QuwdpvLHjBVuiJVDXjztxenOHhuCiqZlUuj2crT4OxeTDT24ytnyJ
      G5tphsM2fv72NQJB+PjaPufPHyebOig0WP1cOdPskry2z9BKDJvZp5o7JDC2gNHpklzP4hQr
      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
      rkJggg==
    </thumbnail>
    <thumbnail height='192' name='Shipping' width='192'>
      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
      evCRRLG5eVsAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='What If Forecast' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
